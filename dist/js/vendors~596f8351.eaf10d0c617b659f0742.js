(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{31:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {/* unused harmony export Breadcrumb */\n/* unused harmony export BreadcrumbItem */\n/* unused harmony export Button */\n/* unused harmony export ButtonLink */\n/* unused harmony export ButtonGroup */\n/* unused harmony export Card */\n/* unused harmony export CardTitle */\n/* unused harmony export Drop */\n/* unused harmony export Dropdown */\n/* unused harmony export Grid */\n/* unused harmony export Icon */\n/* unused harmony export IconLink */\n/* unused harmony export IconButton */\n/* unused harmony export IconImage */\n/* unused harmony export Iconnav */\n/* unused harmony export IconnavVertical */\n/* unused harmony export IconnavItem */\n/* unused harmony export Label */\n/* unused harmony export Modal */\n/* unused harmony export ModalFull */\n/* unused harmony export ModalClose */\n/* unused harmony export ModalFullClose */\n/* unused harmony export ModalTitle */\n/* unused harmony export Nav */\n/* unused harmony export NavDropdown */\n/* unused harmony export NavItem */\n/* unused harmony export NavItemDivider */\n/* unused harmony export NavItemHeader */\n/* unused harmony export NavItemParent */\n/* unused harmony export Navbar */\n/* unused harmony export NavbarFull */\n/* unused harmony export NavbarDropbar */\n/* unused harmony export NavbarItem */\n/* unused harmony export NavbarLogo */\n/* unused harmony export NavbarToggle */\n/* unused harmony export NavbarNav */\n/* unused harmony export NavbarNavItem */\n/* unused harmony export NavbarNavDropdown */\n/* unused harmony export NavbarNavDropdownNav */\n/* unused harmony export Notification */\n/* unused harmony export Offcanvas */\n/* unused harmony export OffcanvasContent */\n/* unused harmony export OffcanvasBar */\n/* unused harmony export OffcanvasClose */\n/* unused harmony export Pagination */\n/* unused harmony export PaginationPages */\n/* unused harmony export PaginationPageFirst */\n/* unused harmony export PaginationPagePrev */\n/* unused harmony export PaginationPageNext */\n/* unused harmony export PaginationPageLast */\n/* unused harmony export Scrollspy */\n/* unused harmony export ScrollspyNav */\n/* unused harmony export SkeletonImage */\n/* unused harmony export SkeletonText */\n/* unused harmony export SkeletonTitle */\n/* unused harmony export Spinner */\n/* unused harmony export Sticky */\n/* unused harmony export Subnav */\n/* unused harmony export SubnavItem */\n/* unused harmony export SubnavItemDropdown */\n/* unused harmony export Table */\n/* unused harmony export TableTree */\n/* unused harmony export TableColumn */\n/* unused harmony export TableColumnSort */\n/* unused harmony export TableColumnSelect */\n/* unused harmony export TableColumnTree */\n/* unused harmony export Tabs */\n/* unused harmony export TabsVertical */\n/* unused harmony export TabsItem */\n/* unused harmony export Margin */\n/* unused harmony export Scroll */\n/* unused harmony export Tooltip */\n/* unused harmony export HeightMatch */\n/* unused harmony export HeightViewport */\n/**\n * Vuikit 0.8.10\n * (c) 2018 Miljan Aleksic\n * @license MIT\n**/\n\n/* Substantial part of the code is adapted from UIkit,\n  Copyright (c) 2013-2018 YOOtheme GmbH, getuikit.com */\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\nvar hyphenateRe = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRe, '$1-$2').toLowerCase();\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\nfunction ucfirst(str) {\n  return str.length ? toUpper(null, str.charAt(0)) + str.slice(1) : '';\n}\n\nvar strPrototype = String.prototype;\n\nvar startsWithFn = strPrototype.startsWith || function (search) {\n  return this.lastIndexOf(search, 0) === 0;\n};\n\nfunction startsWith(str, search) {\n  return startsWithFn.call(str, search);\n}\n\nvar endsWithFn = strPrototype.endsWith || function (search) {\n  return this.substr(-search.length) === search;\n};\n\nfunction endsWith(str, search) {\n  return endsWithFn.call(str, search);\n}\n\nvar includesFn = function (search) {\n  return ~this.indexOf(search);\n};\n\nvar includesStr = strPrototype.includes || includesFn;\nvar includesArray = Array.prototype.includes || includesFn;\n\nfunction includes(obj, search) {\n  return obj && (isString(obj) ? includesStr : includesArray).call(obj, search);\n}\n\nvar isArray = Array.isArray;\n\nfunction isFunction(obj) {\n  return typeof obj === 'function';\n}\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n  return isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\n}\n\nfunction isWindow(obj) {\n  return isObject(obj) && obj === obj.window;\n}\n\nfunction isDocument(obj) {\n  return isObject(obj) && obj.nodeType === 9;\n}\n\nfunction isJQuery(obj) {\n  return isObject(obj) && !!obj.jquery;\n}\n\nfunction isNode(element) {\n  return typeof Node !== 'undefined' && element instanceof Node || isObject(element) && element.nodeType === 1;\n}\n\nfunction isNodeCollection(element) {\n  return typeof NodeList !== 'undefined' && element instanceof NodeList || typeof HTMLCollection !== 'undefined' && element instanceof HTMLCollection;\n}\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nfunction isNumeric(value) {\n  return isNumber(value) || isString(value) && !isNaN(value - parseFloat(value));\n}\n\nfunction isUndefined(value) {\n  return value === void 0;\n}\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n\nfunction toNode(element) {\n  return isNode(element) || isWindow(element) || isDocument(element) ? element : isNodeCollection(element) || isJQuery(element) ? element[0] : isArray(element) ? toNode(element[0]) : null;\n}\n\nvar arrayProto = Array.prototype;\n\nfunction toNodes(element) {\n  return isNode(element) ? [element] : isNodeCollection(element) ? arrayProto.slice.call(element) : isArray(element) ? element.map(toNode).filter(Boolean) : isJQuery(element) ? element.toArray() : [];\n}\n\nvar assign = Object.assign || function (target) {\n  var args = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) args[len] = arguments[len + 1];\n\n  target = Object(target);\n\n  for (var i = 0; i < args.length; i++) {\n    var source = args[i];\n\n    if (source !== null) {\n      for (var key in source) {\n        if (hasOwn(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction each(obj, cb) {\n  for (var key in obj) {\n    if (cb.call(obj[key], obj[key], key) === false) {\n      break;\n    }\n  }\n}\n\nfunction clamp(number, min, max) {\n  if (min === void 0) min = 0;\n  if (max === void 0) max = 1;\n  return Math.min(Math.max(number, min), max);\n}\n\nfunction noop() {}\n\nfunction intersectRect(r1, r2) {\n  return r1.left <= r2.right && r2.left <= r1.right && r1.top <= r2.bottom && r2.top <= r1.bottom;\n}\n\nfunction attr(element, name, value) {\n  if (isObject(name)) {\n    for (var key in name) {\n      attr(element, key, name[key]);\n    }\n\n    return;\n  }\n\n  if (isUndefined(value)) {\n    element = toNode(element);\n    return element && element.getAttribute(name);\n  } else {\n    toNodes(element).forEach(function (element) {\n      if (isFunction(value)) {\n        value = value.call(element, attr(element, name));\n      }\n\n      if (value === null) {\n        removeAttr(element, name);\n      } else {\n        element.setAttribute(name, value);\n      }\n    });\n  }\n}\n\nfunction hasAttr(element, name) {\n  return toNodes(element).some(function (element) {\n    return element.hasAttribute(name);\n  });\n}\n\nfunction removeAttr(element, name) {\n  element = toNodes(element);\n  name.split(' ').forEach(function (name) {\n    return element.forEach(function (element) {\n      return element.removeAttribute(name);\n    });\n  });\n}\n\nfunction filterAttr(element, attribute, pattern, replacement) {\n  attr(element, attribute, function (value) {\n    return value ? value.replace(pattern, replacement) : value;\n  });\n}\n\nfunction data(element, attribute) {\n  for (var i = 0, attrs = [attribute, \"data-\" + attribute]; i < attrs.length; i++) {\n    if (hasAttr(element, attrs[i])) {\n      return attr(element, attrs[i]);\n    }\n  }\n}\n\nfunction query(selector, context) {\n  return toNode(selector) || find(selector, isContextSelector(selector) ? context : document);\n}\n\nfunction find(selector, context) {\n  return toNode(_query(selector, context, 'querySelector'));\n}\n\nfunction findAll(selector, context) {\n  return toNodes(_query(selector, context, 'querySelectorAll'));\n}\n\nfunction _query(selector, context, queryFn) {\n  if (context === void 0) context = document;\n\n  if (!selector || !isString(selector)) {\n    return null;\n  }\n\n  selector = selector.replace(contextSanitizeRe, '$1 *');\n  var removes;\n\n  if (isContextSelector(selector)) {\n    removes = [];\n    selector = selector.split(',').map(function (selector, i) {\n      var ctx = context;\n      selector = selector.trim();\n\n      if (selector[0] === '!') {\n        var selectors = selector.substr(1).trim().split(' ');\n        ctx = closest(context.parentNode, selectors[0]);\n        selector = selectors.slice(1).join(' ');\n      }\n\n      if (!ctx) {\n        return null;\n      }\n\n      if (!ctx.id) {\n        ctx.id = \"uk-\" + Date.now() + i;\n        removes.push(function () {\n          return removeAttr(ctx, 'id');\n        });\n      }\n\n      return \"#\" + escape(ctx.id) + \" \" + selector;\n    }).filter(Boolean).join(',');\n    context = document;\n  }\n\n  try {\n    return context[queryFn](selector);\n  } catch (e) {\n    return null;\n  } finally {\n    removes && removes.forEach(function (remove) {\n      return remove();\n    });\n  }\n}\n\nvar contextSelectorRe = /(^|,)\\s*[!>+~]/;\nvar contextSanitizeRe = /([!>+~])(?=\\s+[!>+~]|\\s*$)/g;\n\nfunction isContextSelector(selector) {\n  return isString(selector) && selector.match(contextSelectorRe);\n}\n\nfunction matches(element, selector) {\n  var elProto = window.Element.prototype;\n  var matchesFn = elProto.matches || elProto.webkitMatchesSelector || elProto.msMatchesSelector;\n  return toNodes(element).some(function (element) {\n    return matchesFn.call(element, selector);\n  });\n}\n\nfunction closest(element, selector) {\n  var elProto = window.Element.prototype;\n\n  var closestFn = elProto.closest || function (selector) {\n    var ancestor = this;\n\n    do {\n      if (matches(ancestor, selector)) {\n        return ancestor;\n      }\n\n      ancestor = ancestor.parentNode;\n    } while (ancestor && ancestor.nodeType === 1);\n  };\n\n  if (startsWith(selector, '>')) {\n    selector = selector.slice(1);\n  }\n\n  return isNode(element) ? element.parentNode && closestFn.call(element, selector) : toNodes(element).map(function (element) {\n    return element.parentNode && closestFn.call(element, selector);\n  }).filter(Boolean);\n}\n\nfunction escape(css) {\n  var escapeFn = window.CSS && CSS.escape || function (css) {\n    return css.replace(/([^\\x7f-\\uFFFF\\w-])/g, function (match) {\n      return \"\\\\\" + match;\n    });\n  };\n\n  return isString(css) ? escapeFn.call(null, css) : '';\n}\n\nfunction isVisible(element) {\n  return toNodes(element).some(function (element) {\n    return element.offsetHeight || element.getBoundingClientRect().height;\n  });\n}\n\nfunction filter(element, selector) {\n  return toNodes(element).filter(function (element) {\n    return matches(element, selector);\n  });\n}\n\nfunction within(element, selector) {\n  return !isString(selector) ? element === selector || (isDocument(selector) ? selector.documentElement : toNode(selector)).contains(toNode(element)) : matches(element, selector) || closest(element, selector);\n}\n\nfunction on() {\n  var args = [],\n      len = arguments.length;\n\n  while (len--) args[len] = arguments[len];\n\n  var ref = getArgs(args);\n  var target = ref[0];\n  var type = ref[1];\n  var selector = ref[2];\n  var listener = ref[3];\n  var useCapture = ref[4];\n  target = toEventTarget(target);\n\n  if (selector) {\n    listener = delegate(target, selector, listener);\n  }\n\n  if (listener.length > 1) {\n    listener = detail(listener);\n  }\n\n  type.split(' ').forEach(function (type) {\n    return target && target.addEventListener(type, listener, useCapture);\n  });\n  return function () {\n    return off(target, type, listener, useCapture);\n  };\n}\n\nfunction off(target, type, listener, useCapture) {\n  if (useCapture === void 0) useCapture = false;\n  target = toEventTarget(target);\n  target && type.split(' ').forEach(function (type) {\n    return target.removeEventListener(type, listener, useCapture);\n  });\n}\n\nfunction once() {\n  var args = [],\n      len = arguments.length;\n\n  while (len--) args[len] = arguments[len];\n\n  var ref = getArgs(args);\n  var element = ref[0];\n  var type = ref[1];\n  var selector = ref[2];\n  var listener = ref[3];\n  var useCapture = ref[4];\n  var condition = ref[5];\n  var off = on(element, type, selector, function (e) {\n    var result = !condition || condition(e);\n\n    if (result) {\n      off();\n      listener(e, result);\n    }\n  }, useCapture);\n  return off;\n}\n\nfunction trigger(target, event, detail) {\n  return toEventTargets(target).reduce(function (notCanceled, target) {\n    return notCanceled && target.dispatchEvent(createEvent(event, true, true, detail));\n  }, true);\n}\n\nfunction createEvent(e, bubbles, cancelable, detail) {\n  if (bubbles === void 0) bubbles = true;\n  if (cancelable === void 0) cancelable = false;\n\n  if (isString(e)) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent(e, bubbles, cancelable, detail);\n    e = event;\n  }\n\n  return e;\n}\n\nfunction getArgs(args) {\n  if (isString(args[0])) {\n    args[0] = find(args[0]);\n  }\n\n  if (isFunction(args[2])) {\n    args.splice(2, 0, false);\n  }\n\n  return args;\n}\n\nfunction delegate(element, selector, listener) {\n  var this$1 = this;\n  return function (e) {\n    var target = e.target;\n    var current = selector[0] === '>' ? findAll(selector, element).reverse().filter(function (element) {\n      return within(target, element);\n    })[0] : closest(target, selector);\n\n    if (current) {\n      e.delegate = element;\n      e.current = current;\n      listener.call(this$1, e);\n    }\n  };\n}\n\nfunction detail(listener) {\n  return function (e) {\n    return isArray(e.detail) ? listener.apply(listener, [e].concat(e.detail)) : listener(e);\n  };\n}\n\nfunction isEventTarget(target) {\n  return typeof window !== 'undefined' && 'EventTarget' in window ? target instanceof window.EventTarget : target && 'addEventListener' in target;\n}\n\nfunction toEventTarget(target) {\n  return isEventTarget(target) ? target : toNode(target);\n}\n\nfunction toEventTargets(target) {\n  return isEventTarget(target) ? [target] : isArray(target) ? target.map(toEventTarget).filter(Boolean) : toNodes(target);\n}\n\nvar doc = typeof document !== 'undefined' && document;\n\nfunction isReady() {\n  return doc && (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll);\n}\n\nfunction ready(fn) {\n  if (!doc) {\n    return;\n  }\n\n  if (isReady()) {\n    fn();\n    return;\n  }\n\n  var handle = function () {\n    unbind1();\n    unbind2();\n    fn();\n  };\n\n  var unbind1 = on(document, 'DOMContentLoaded', handle);\n  var unbind2 = on(window, 'load', handle);\n}\n\nfunction append(parent, element) {\n  parent = toNode(parent);\n  return insertNodes(element, function (element) {\n    return parent.appendChild(element);\n  });\n}\n\nfunction before(ref, element) {\n  ref = toNode(ref);\n  return insertNodes(element, function (element) {\n    return ref.parentNode.insertBefore(element, ref);\n  });\n}\n\nfunction after(ref, element) {\n  ref = toNode(ref);\n  return insertNodes(element, function (element) {\n    return ref.nextSibling ? before(ref.nextSibling, element) : append(ref.parentNode, element);\n  });\n}\n\nfunction insertNodes(element, fn) {\n  element = isString(element) ? fragment(element) : element;\n  return element ? 'length' in element ? toNodes(element).map(fn) : fn(element) : null;\n}\n\nfunction remove(element) {\n  toNodes(element).map(function (element) {\n    return element.parentNode && element.parentNode.removeChild(element);\n  });\n}\n\nvar fragmentRE = /^\\s*<(\\w+|!)[^>]*>/;\nvar singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\n\nfunction fragment(html) {\n  var matches = singleTagRE.exec(html);\n\n  if (matches) {\n    return document.createElement(matches[1]);\n  }\n\n  var container = document.createElement('div');\n\n  if (fragmentRE.test(html)) {\n    container.insertAdjacentHTML('beforeend', html.trim());\n  } else {\n    container.textContent = html;\n  }\n\n  return container.childNodes.length > 1 ? toNodes(container.childNodes) : container.firstChild;\n}\n\nfunction addClass(element) {\n  var args = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) args[len] = arguments[len + 1];\n\n  apply$1(element, args, 'add');\n}\n\nfunction removeClass(element) {\n  var args = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) args[len] = arguments[len + 1];\n\n  apply$1(element, args, 'remove');\n}\n\nfunction removeClasses(element, cls) {\n  filterAttr(element, 'class', new RegExp(\"(^|\\\\s)\" + cls + \"(?!\\\\S)\", 'g'), '');\n}\n\nfunction replaceClass(element) {\n  var args = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) args[len] = arguments[len + 1];\n\n  args[0] && removeClass(element, args[0]);\n  args[1] && addClass(element, args[1]);\n}\n\nfunction hasClass(element, cls) {\n  return toNodes(element).some(function (element) {\n    return element.classList.contains(cls);\n  });\n}\n\nfunction toggleClass(element) {\n  var args = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) args[len] = arguments[len + 1];\n\n  if (!args.length) {\n    return;\n  }\n\n  args = getArgs$1(args);\n  var force = !isString(args[args.length - 1]) ? args.pop() : [];\n  args = args.filter(Boolean);\n  toNodes(element).forEach(function (ref) {\n    var classList = ref.classList;\n\n    for (var i = 0; i < args.length; i++) {\n      supports.Force ? classList.toggle.apply(classList, [args[i]].concat(force)) : classList[(!isUndefined(force) ? force : !classList.contains(args[i])) ? 'add' : 'remove'](args[i]);\n    }\n  });\n}\n\nfunction apply$1(element, args, fn) {\n  args = getArgs$1(args).filter(Boolean);\n  args.length && toNodes(element).forEach(function (ref) {\n    var classList = ref.classList;\n    supports.Multiple ? classList[fn].apply(classList, args) : args.forEach(function (cls) {\n      return classList[fn](cls);\n    });\n  });\n}\n\nfunction getArgs$1(args) {\n  return args.reduce(function (args, arg) {\n    return args.concat.call(args, isString(arg) && includes(arg, ' ') ? arg.trim().split(' ') : arg);\n  }, []);\n}\n\nvar supports = {};\n\n(function () {\n  if (typeof document !== 'undefined' && document.createElement('_').classList) {\n    var list = document.createElement('_').classList;\n    list.add('a', 'b');\n    list.toggle('c', false);\n    supports.Multiple = list.contains('b');\n    supports.Force = !list.contains('c');\n    list = null;\n  }\n})();\n\nvar cssNumber = {\n  'animation-iteration-count': true,\n  'column-count': true,\n  'fill-opacity': true,\n  'flex-grow': true,\n  'flex-shrink': true,\n  'font-weight': true,\n  'line-height': true,\n  'opacity': true,\n  'order': true,\n  'orphans': true,\n  'widows': true,\n  'z-index': true,\n  'zoom': true\n};\n\nfunction css(element, property, value) {\n  return toNodes(element).map(function (element) {\n    if (isString(property)) {\n      property = propName(property);\n\n      if (isUndefined(value)) {\n        return getStyle(element, property);\n      } else if (!value && value !== 0) {\n        element.style.removeProperty(property);\n      } else {\n        element.style[property] = isNumeric(value) && !cssNumber[property] ? value + \"px\" : value;\n      }\n    } else if (isArray(property)) {\n      var styles = getStyles(element);\n      return property.reduce(function (props, property) {\n        props[property] = styles[propName(property)];\n        return props;\n      }, {});\n    } else if (isObject(property)) {\n      each(property, function (value, property) {\n        return css(element, property, value);\n      });\n    }\n\n    return element;\n  })[0];\n}\n\nfunction getStyles(element, pseudoElt) {\n  element = toNode(element);\n  return element.ownerDocument.defaultView.getComputedStyle(element, pseudoElt);\n}\n\nfunction getStyle(element, property, pseudoElt) {\n  return getStyles(element, pseudoElt)[property];\n}\n\nvar vars = {};\n\nfunction getCssVar(name) {\n  if (!(name in vars)) {\n    var element = append(document.documentElement, document.createElement('div'));\n    addClass(element, \"var-\" + name);\n\n    try {\n      vars[name] = getStyle(element, 'content', ':before').replace(/^[\"'](.*)[\"']$/, '$1');\n      vars[name] = JSON.parse(vars[name]);\n    } catch (e) {}\n\n    document.documentElement.removeChild(element);\n  }\n\n  return vars[name];\n}\n\nvar cssProps = {};\n\nfunction propName(name) {\n  var ret = cssProps[name];\n\n  if (!ret) {\n    ret = cssProps[name] = vendorPropName(name) || name;\n  }\n\n  return ret;\n}\n\nvar cssPrefixes = ['webkit', 'moz', 'ms'];\n\nfunction vendorPropName(name) {\n  var ref = document.createElement('_');\n  var style = ref.style;\n  name = hyphenate(name);\n\n  if (name in style) {\n    return name;\n  }\n\n  var i = cssPrefixes.length,\n      prefixedName;\n\n  while (i--) {\n    prefixedName = \"-\" + cssPrefixes[i] + \"-\" + name;\n\n    if (prefixedName in style) {\n      return prefixedName;\n    }\n  }\n}\n\nfunction toMedia(value) {\n  if (isString(value)) {\n    if (value[0] === '@') {\n      var name = \"media-\" + value.substr(1);\n      value = toFloat(getCssVar(name));\n    } else if (isNaN(value)) {\n      return value;\n    }\n  }\n\n  return value && !isNaN(value) ? \"(min-width: \" + value + \"px)\" : false;\n}\n\nfunction get(obj, path, defVal) {\n  var result = isObject(obj) && isString(path) ? _get(obj, path) : undefined;\n  return result === undefined ? defVal : result;\n}\n\nfunction _get(obj, path) {\n  return path.split('.').reduce(function (acc, val) {\n    return acc && acc[val];\n  }, obj);\n}\n\nfunction range(start, stop, step) {\n  if (step === void 0) step = 1;\n\n  if (typeof stop === 'undefined') {\n    stop = start;\n    start = 0;\n  }\n\n  return Array.from(new Array(Math.floor((stop - start) / step)), function (x, i) {\n    return start + i * step;\n  });\n}\n\nfunction findParent(instance) {\n  return findParents(instance).pop();\n}\n\nfunction findParents(instance) {\n  var parents = [];\n  var name = instance.$options.name;\n  var parent = instance.$parent;\n\n  while (parent) {\n    if (parent.$options.name === name) {\n      parents.unshift(parent);\n    }\n\n    parent = parent.$parent;\n  }\n\n  return parents;\n}\n\nfunction apply$2(instance, fn) {\n  if (!instance || !instance._isVue) {\n    return;\n  }\n\n  fn(instance);\n  instance.$children.forEach(function (child) {\n    return apply$2(child, fn);\n  });\n}\n\nfunction filterOutTextNodes(nodes) {\n  return nodes.filter(function (n) {\n    return n.tag || isAsyncPlaceholder(n);\n  });\n}\n\nfunction isAsyncPlaceholder(node) {\n  return node.isComment && node.asyncFactory;\n}\n\nfunction mergeData() {\n  var arguments$1 = arguments;\n\n  for (var e, a, s = {}, t = arguments.length; t--;) {\n    for (var r = 0, c = Object.keys(arguments[t]); r < c.length; r++) {\n      switch (e = c[r]) {\n        case \"class\":\n        case \"style\":\n        case \"directives\":\n          Array.isArray(s[e]) || (s[e] = []), s[e] = s[e].concat(arguments$1[t][e]);\n          break;\n\n        case \"staticClass\":\n          if (!arguments$1[t][e]) {\n            break;\n          }\n\n          void 0 === s[e] && (s[e] = \"\"), s[e] && (s[e] += \" \"), s[e] += arguments$1[t][e].trim();\n          break;\n\n        case \"on\":\n        case \"nativeOn\":\n          s[e] || (s[e] = {});\n\n          for (var o = 0, n = Object.keys(arguments[t][e]); o < n.length; o++) {\n            a = n[o], s[e][a] ? s[e][a] = [].concat(s[e][a], arguments$1[t][e][a]) : s[e][a] = arguments$1[t][e][a];\n          }\n\n          break;\n\n        case \"attrs\":\n        case \"props\":\n        case \"domProps\":\n        case \"scopedSlots\":\n        case \"staticStyle\":\n        case \"hook\":\n        case \"transition\":\n          s[e] || (s[e] = {}), s[e] = __assign({}, arguments$1[t][e], s[e]);\n          break;\n\n        case \"slot\":\n        case \"key\":\n        case \"ref\":\n        case \"tag\":\n        case \"show\":\n        case \"keepAlive\":\n        default:\n          s[e] || (s[e] = arguments$1[t][e]);\n      }\n    }\n  }\n\n  return s;\n}\n\nvar __assign = Object.assign || function (e) {\n  var arguments$1 = arguments;\n\n  for (var a, s = 1, t = arguments.length; s < t; s++) {\n    a = arguments$1[s];\n\n    for (var r in a) {\n      Object.prototype.hasOwnProperty.call(a, r) && (e[r] = a[r]);\n    }\n  }\n\n  return e;\n};\n\nvar ElementBreadcrumb = {\n  functional: true,\n  render: function (h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    return h('ul', mergeData(data, {\n      class: 'uk-breadcrumb'\n    }), children);\n  }\n};\nvar ElementBreadcrumbItem = {\n  functional: true,\n  props: {\n    href: String,\n    target: String,\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function (h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var disabled = props.disabled;\n    var href = props.href;\n    var target = props.target;\n    return h('li', mergeData(data, {\n      class: {\n        'uk-disabled': disabled\n      }\n    }), [isUndefined(href) || disabled ? h('span', children) : h('a', {\n      attrs: {\n        href: href,\n        target: target\n      }\n    }, children)]);\n  }\n};\nvar breadcrumb = {\n  name: 'VkBreadcrumb',\n  functional: true,\n  props: ElementBreadcrumb.props,\n  render: ElementBreadcrumb.render\n};\nvar breadcrumb_Item = {\n  name: 'VkBreadcrumbItem',\n  functional: true,\n  props: ElementBreadcrumbItem.props,\n  render: ElementBreadcrumbItem.render\n};\nvar props = {\n  active: {\n    type: Boolean,\n    default: false\n  },\n  size: {\n    type: String,\n    validator: function (val) {\n      return !val || /^(small|large)$/.test(val);\n    }\n  },\n  type: {\n    type: String,\n    validator: function (val) {\n      return !val || /^(primary|secondary|danger|text|link)$/.test(val);\n    }\n  }\n};\n\nvar def = function (ref) {\n  var obj;\n  var type = ref.type;\n  var active = ref.active;\n  var size = ref.size;\n  return {\n    class: ['uk-button', \"uk-button-\" + (type || 'default'), (obj = {\n      'uk-active': active\n    }, obj[\"uk-button-\" + size] = size, obj)]\n  };\n};\n\nvar ElementButton = {\n  functional: true,\n  props: assign({}, props, {\n    htmlType: {\n      type: String,\n      default: 'button'\n    }\n  }),\n  render: function render(h, ref) {\n    var props$$1 = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var htmlType = props$$1.htmlType;\n    return h('button', mergeData(data, def(props$$1), {\n      attrs: {\n        type: htmlType\n      }\n    }), children);\n  }\n};\nvar ElementButtonLink = {\n  functional: true,\n  props: props,\n  render: function render(h, ref) {\n    var props$$1 = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    return h('a', mergeData(data, def(props$$1)), children);\n  }\n};\nvar ElementButtonGroup = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('div', mergeData(data, {\n      class: 'uk-button-group'\n    }), children);\n  }\n};\nvar button = {\n  name: 'VkButton',\n  functional: true,\n  props: ElementButton.props,\n  render: ElementButton.render\n};\nvar buttonLink = {\n  name: 'VkButtonLink',\n  functional: true,\n  props: ElementButtonLink.props,\n  render: ElementButtonLink.render\n};\nvar buttonGroup = {\n  name: 'VkButtonGroup',\n  functional: true,\n  props: ElementButtonGroup.props,\n  render: ElementButtonGroup.render\n};\nvar ElementCard = {\n  functional: true,\n  props: {\n    type: {\n      type: String,\n      default: 'default',\n      validator: function (val) {\n        return /^(default|primary|secondary|blank)$/.test(val);\n      }\n    },\n    padding: {\n      type: String,\n      validator: function (val) {\n        return !val || /^(small|large)$/.test(val);\n      }\n    },\n    hover: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var obj;\n    var props = ref.props;\n    var data = ref.data;\n    var slots = ref.slots;\n    var type = props.type;\n    var padding = props.padding;\n    var hover = props.hover;\n\n    var _slots = slots();\n\n    var body = _slots.body;\n\n    if (!body || !body.length) {\n      _slots.body = _slots.default;\n      delete _slots.default;\n    }\n\n    return h('div', mergeData(data, {\n      class: ['uk-card', (obj = {\n        'uk-card-hover': hover\n      }, obj[\"uk-card-\" + type] = type, obj[\"uk-card-\" + padding] = padding, obj)]\n    }), [_slots.default && _slots.default, _slots['media-top'] && h('div', {\n      class: 'uk-card-media-top'\n    }, _slots['media-top']), _slots.badge && h('div', {\n      class: 'uk-card-badge'\n    }, _slots.badge), _slots.header && h('div', {\n      class: 'uk-card-header'\n    }, _slots.header), _slots['media'] && h('div', {\n      class: 'uk-card-media'\n    }, _slots['media']), _slots.body && h('div', {\n      class: 'uk-card-body'\n    }, _slots.body), _slots.footer && h('div', {\n      class: 'uk-card-footer'\n    }, _slots.footer), _slots['media-bottom'] && h('div', {\n      class: 'uk-card-media-bottom'\n    }, _slots['media-bottom'])]);\n  }\n};\nvar ElementCardTitle = {\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'h3'\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    return h(props.tag, mergeData(data, {\n      class: 'uk-card-title'\n    }), children);\n  }\n};\nvar card = {\n  name: 'VkCard',\n  functional: true,\n  props: ElementCard.props,\n  render: ElementCard.render\n};\nvar card_Title = {\n  name: 'VkCardTitle',\n  functional: true,\n  props: ElementCardTitle.props,\n  render: ElementCardTitle.render\n};\nvar VkRoot = {\n  inserted: function inserted(el, binding, vnode) {\n    vnode.context.$nextTick(function () {\n      vnode.context.$root.$el.appendChild(el);\n    });\n  }\n};\n\nfunction noop$1() {}\n\nvar warn = noop$1;\nvar tip = noop$1;\n\nif (false) { var generateComponentTrace, repeat, formatComponentName, classify, classifyRE, hasConsole; }\n\nvar dirs = {\n  width: ['x', 'left', 'right'],\n  height: ['y', 'top', 'bottom']\n};\n\nfunction positionAt(element, target, elAttach, targetAttach, elOffset, targetOffset, flip, boundary) {\n  elAttach = getPos(elAttach);\n  targetAttach = getPos(targetAttach);\n  var flipped = {\n    element: elAttach,\n    target: targetAttach\n  };\n\n  if (!element || !target) {\n    return flipped;\n  }\n\n  var dim = getDimensions(element);\n  var targetDim = getDimensions(target);\n  var position = targetDim;\n  moveTo(position, elAttach, dim, -1);\n  moveTo(position, targetAttach, targetDim, 1);\n  elOffset = getOffsets(elOffset, dim.width, dim.height);\n  targetOffset = getOffsets(targetOffset, targetDim.width, targetDim.height);\n  elOffset['x'] += targetOffset['x'];\n  elOffset['y'] += targetOffset['y'];\n  position.left += elOffset['x'];\n  position.top += elOffset['y'];\n  boundary = getDimensions(boundary || window$1(element));\n\n  if (flip) {\n    each(dirs, function (ref, prop) {\n      var dir = ref[0];\n      var align = ref[1];\n      var alignFlip = ref[2];\n\n      if (!(flip === true || includes(flip, dir))) {\n        return;\n      }\n\n      var elemOffset = elAttach[dir] === align ? -dim[prop] : elAttach[dir] === alignFlip ? dim[prop] : 0;\n      var targetOffset = targetAttach[dir] === align ? targetDim[prop] : targetAttach[dir] === alignFlip ? -targetDim[prop] : 0;\n\n      if (position[align] < boundary[align] || position[align] + dim[prop] > boundary[alignFlip]) {\n        var centerOffset = dim[prop] / 2;\n        var centerTargetOffset = targetAttach[dir] === 'center' ? -targetDim[prop] / 2 : 0;\n        elAttach[dir] === 'center' && (apply(centerOffset, centerTargetOffset) || apply(-centerOffset, -centerTargetOffset)) || apply(elemOffset, targetOffset);\n      }\n\n      function apply(elemOffset, targetOffset) {\n        var newVal = position[align] + elemOffset + targetOffset - elOffset[dir] * 2;\n\n        if (newVal >= boundary[align] && newVal + dim[prop] <= boundary[alignFlip]) {\n          position[align] = newVal;\n          ['element', 'target'].forEach(function (el) {\n            flipped[el][dir] = !elemOffset ? flipped[el][dir] : flipped[el][dir] === dirs[prop][1] ? dirs[prop][2] : dirs[prop][1];\n          });\n          return true;\n        }\n      }\n    });\n  }\n\n  offset(element, position);\n  return flipped;\n}\n\nfunction offset(element, coordinates) {\n  element = toNode(element);\n\n  if (coordinates) {\n    var currentOffset = offset(element);\n    var pos = css(element, 'position');\n    ['left', 'top'].forEach(function (prop) {\n      if (prop in coordinates) {\n        var value = css(element, prop);\n        element.style[prop] = coordinates[prop] - currentOffset[prop] + toFloat(pos === 'absolute' && value === 'auto' ? position(element)[prop] : value) + \"px\";\n      }\n    });\n    return;\n  }\n\n  return getDimensions(element);\n}\n\nfunction getDimensions(element) {\n  element = toNode(element);\n  var ref = window$1(element);\n  var top = ref.pageYOffset;\n  var left = ref.pageXOffset;\n\n  if (isWindow(element)) {\n    var height = element.innerHeight;\n    var width = element.innerWidth;\n    return {\n      top: top,\n      left: left,\n      height: height,\n      width: width,\n      bottom: top + height,\n      right: left + width\n    };\n  }\n\n  var display = false;\n\n  if (!isVisible(element)) {\n    display = element.style.display;\n    element.style.display = 'block';\n  }\n\n  var rect = element.getBoundingClientRect();\n\n  if (display !== false) {\n    element.style.display = display;\n  }\n\n  return {\n    height: rect.height,\n    width: rect.width,\n    top: rect.top + top,\n    left: rect.left + left,\n    bottom: rect.bottom + top,\n    right: rect.right + left\n  };\n}\n\nfunction position(element) {\n  element = toNode(element);\n  var parent = offsetParent(element);\n  var parentOffset = parent === docEl(element) ? {\n    top: 0,\n    left: 0\n  } : offset(parent);\n  var ref = ['top', 'left'].reduce(function (props, prop) {\n    var propName$$1 = ucfirst(prop);\n    props[prop] -= parentOffset[prop] + (toFloat(css(element, \"margin\" + propName$$1)) || 0) + (toFloat(css(parent, \"border\" + propName$$1 + \"Width\")) || 0);\n    return props;\n  }, offset(element));\n  var top = ref.top;\n  var left = ref.left;\n  return {\n    top: top,\n    left: left\n  };\n}\n\nfunction offsetParent(element) {\n  var parent = toNode(element).offsetParent;\n\n  while (parent && css(parent, 'position') === 'static') {\n    parent = parent.offsetParent;\n  }\n\n  return parent || docEl(element);\n}\n\nvar height = dimension('height');\nvar width = dimension('width');\n\nfunction dimension(prop) {\n  var propName$$1 = ucfirst(prop);\n  return function (element, value) {\n    element = toNode(element);\n\n    if (isUndefined(value)) {\n      if (isWindow(element)) {\n        return element[\"inner\" + propName$$1];\n      }\n\n      if (isDocument(element)) {\n        var doc = element.documentElement;\n        return Math.max(doc[\"offset\" + propName$$1], doc[\"scroll\" + propName$$1]);\n      }\n\n      value = css(element, prop);\n      value = value === 'auto' ? element[\"offset\" + propName$$1] : toFloat(value) || 0;\n      return getContentSize(prop, element, value);\n    } else {\n      css(element, prop, !value && value !== 0 ? '' : getContentSize(prop, element, value) + 'px');\n    }\n  };\n}\n\nfunction getContentSize(prop, element, value) {\n  return css(element, 'boxSizing') === 'border-box' ? dirs[prop].slice(1).map(ucfirst).reduce(function (value, prop) {\n    return value - toFloat(css(element, \"padding\" + prop)) - toFloat(css(element, \"border\" + prop + \"Width\"));\n  }, value) : value;\n}\n\nfunction moveTo(position, attach, dim, factor) {\n  each(dirs, function (ref, prop) {\n    var dir = ref[0];\n    var align = ref[1];\n    var alignFlip = ref[2];\n\n    if (attach[dir] === alignFlip) {\n      position[align] += dim[prop] * factor;\n    } else if (attach[dir] === 'center') {\n      position[align] += dim[prop] * factor / 2;\n    }\n  });\n}\n\nfunction getPos(pos) {\n  var x = /left|center|right/;\n  var y = /top|center|bottom/;\n  pos = (pos || '').split(' ');\n\n  if (pos.length === 1) {\n    pos = x.test(pos[0]) ? pos.concat(['center']) : y.test(pos[0]) ? ['center'].concat(pos) : ['center', 'center'];\n  }\n\n  return {\n    x: x.test(pos[0]) ? pos[0] : 'center',\n    y: y.test(pos[1]) ? pos[1] : 'center'\n  };\n}\n\nfunction getOffsets(offsets, width, height) {\n  var ref = (offsets || '').split(' ');\n  var x = ref[0];\n  var y = ref[1];\n  return {\n    x: x ? toFloat(x) * (endsWith(x, '%') ? width / 100 : 1) : 0,\n    y: y ? toFloat(y) * (endsWith(y, '%') ? height / 100 : 1) : 0\n  };\n}\n\nfunction flipPosition(pos) {\n  switch (pos) {\n    case 'left':\n      return 'right';\n\n    case 'right':\n      return 'left';\n\n    case 'top':\n      return 'bottom';\n\n    case 'bottom':\n      return 'top';\n\n    default:\n      return pos;\n  }\n}\n\nfunction isInView(element, top, left) {\n  if (top === void 0) top = 0;\n  if (left === void 0) left = 0;\n  element = toNode(element);\n  var win = window$1(element);\n  return intersectRect(element.getBoundingClientRect(), {\n    top: top,\n    left: left,\n    bottom: top + height(win),\n    right: left + width(win)\n  });\n}\n\nfunction window$1(element) {\n  return isWindow(element) ? element : document$1(element).defaultView;\n}\n\nfunction document$1(element) {\n  return toNode(element).ownerDocument;\n}\n\nfunction docEl(element) {\n  return document$1(element).documentElement;\n}\n\nvar BEFORE_POSITION = 'v-vk-position:before';\nvar AFTER_POSITION = 'v-vk-position:after';\nvar Directive = {\n  inserted: function inserted(el, binding, vnode) {\n    var ctx = getContext(el, binding, vnode);\n\n    if (ctx) {\n      position$1(ctx);\n    }\n  },\n  componentUpdated: function componentUpdated(el, binding, vnode) {\n    var ctx = getContext(el, binding, vnode);\n\n    if (ctx) {\n      position$1(ctx);\n    }\n  }\n};\n\nfunction position$1(ctx) {\n  var el = ctx.el;\n  var props = ctx.props;\n  var vnode = ctx.vnode;\n  var target = props.target;\n  var position$$1 = props.position;\n  var offset$$1 = props.offset;\n  var boundary = props.boundary;\n  var flip = props.flip;\n  var mainClass = props.mainClass;\n\n  if (false) {}\n\n  if (false) {}\n\n  var ref = position$$1.split('-');\n  var dir = ref[0];\n  var align = ref[1];\n  trigger(el, BEFORE_POSITION);\n  var classesRx = new RegExp(mainClass + \"-(top|bottom|left|right)(-[a-z]+)?\");\n  el.className = el.className.replace(classesRx, '');\n  css(el, {\n    top: '',\n    left: ''\n  });\n  var axis = getPositionAxis(position$$1);\n  var elAttach = axis === 'x' ? flipPosition(dir) + \" \" + align : align + \" \" + flipPosition(dir);\n  var targetAttach = axis === 'x' ? dir + \" \" + align : align + \" \" + dir;\n  var elOffset = axis === 'x' ? \"\" + (dir === 'left' ? -1 * offset$$1 : offset$$1) : \" \" + (dir === 'top' ? -1 * offset$$1 : offset$$1);\n  var targetOffset = null;\n  var ref$1 = positionAt(el, target, elAttach, targetAttach, elOffset, targetOffset, flip, boundary).target;\n  var x = ref$1.x;\n  var y = ref$1.y;\n  dir = axis === 'x' ? x : y;\n  align = axis === 'x' ? y : x;\n  toggleClass(el, mainClass + \"-\" + dir + \"-\" + align, offset$$1 === false);\n  trigger(el, AFTER_POSITION);\n}\n\nfunction getOptions(ctx) {\n  var vnode = ctx.vnode;\n  var ref = ctx.binding;\n  var value = ref.value;\n\n  if (false) {}\n\n  var options = assign({\n    target: null,\n    position: 'top-center',\n    boundary: window,\n    flip: true,\n    offset: false,\n    mainClass: ''\n  }, value);\n  return options;\n}\n\nfunction getContext(el, binding, vnode) {\n  var ctx = {\n    el: el,\n    binding: binding,\n    vnode: vnode\n  };\n  ctx.props = getOptions(ctx);\n\n  if (!ctx.props) {\n    binding.def.unbind(el, binding);\n    return;\n  }\n\n  return ctx;\n}\n\nfunction getPositionAxis(position$$1) {\n  var ref = position$$1.split('-');\n  var dir = ref[0];\n  return dir === 'top' || dir === 'bottom' ? 'y' : 'x';\n}\n\nvar EventsMixin = {\n  methods: {\n    on: function on$1() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      this._vk_events_off.push(on.apply(void 0, args));\n    },\n    off: function off$1() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      off.apply(void 0, args);\n    }\n  },\n  created: function created() {\n    this._vk_events_off = [];\n  },\n  beforeDestroy: function beforeDestroy() {\n    this._vk_events_off.forEach(function (off$$1) {\n      return off$$1();\n    });\n  }\n};\n\nfunction $(selector, context) {\n  return !isString(selector) ? toNode(selector) : isHtml(selector) ? toNode(fragment(selector)) : find(selector, context);\n}\n\nfunction $$(selector, context) {\n  return !isString(selector) ? toNodes(selector) : isHtml(selector) ? toNodes(fragment(selector)) : findAll(selector, context);\n}\n\nfunction isHtml(str) {\n  return str[0] === '<' || str.match(/^\\s*</);\n}\n\nfunction MouseTracker() {}\n\nMouseTracker.prototype = {\n  positions: [],\n  position: null,\n  init: function init() {\n    var this$1 = this;\n    this.positions = [];\n    this.position = null;\n    var ticking = false;\n    this.unbind = on(document, 'mousemove', function (e) {\n      if (ticking) {\n        return;\n      }\n\n      setTimeout(function () {\n        var time = Date.now();\n        var ref = this$1.positions;\n        var length = ref.length;\n\n        if (length && time - this$1.positions[length - 1].time > 100) {\n          this$1.positions.splice(0, length);\n        }\n\n        this$1.positions.push({\n          time: time,\n          x: e.pageX,\n          y: e.pageY\n        });\n\n        if (this$1.positions.length > 5) {\n          this$1.positions.shift();\n        }\n\n        ticking = false;\n      }, 5);\n      ticking = true;\n    });\n  },\n  cancel: function cancel() {\n    if (this.unbind) {\n      this.unbind();\n    }\n  },\n  movesTo: function movesTo(target) {\n    if (this.positions.length < 2) {\n      return false;\n    }\n\n    var p = offset(target);\n    var position$$1 = this.positions[this.positions.length - 1];\n    var ref = this.positions;\n    var prevPos = ref[0];\n\n    if (p.left <= position$$1.x && position$$1.x <= p.right && p.top <= position$$1.y && position$$1.y <= p.bottom) {\n      return false;\n    }\n\n    var points = [[{\n      x: p.left,\n      y: p.top\n    }, {\n      x: p.right,\n      y: p.bottom\n    }], [{\n      x: p.right,\n      y: p.top\n    }, {\n      x: p.left,\n      y: p.bottom\n    }]];\n\n    if (p.right <= position$$1.x) {} else if (p.left >= position$$1.x) {\n      points[0].reverse();\n      points[1].reverse();\n    } else if (p.bottom <= position$$1.y) {\n      points[0].reverse();\n    } else if (p.top >= position$$1.y) {\n      points[1].reverse();\n    }\n\n    return !!points.reduce(function (result, point) {\n      return result + (slope(prevPos, point[0]) < slope(position$$1, point[0]) && slope(prevPos, point[1]) > slope(position$$1, point[1]));\n    }, 0);\n  }\n};\n\nfunction slope(a, b) {\n  return (b.y - a.y) / (b.x - a.x);\n}\n\nvar doc$1 = typeof document !== 'undefined' && document;\nvar win$1 = typeof window !== 'undefined' && window;\nvar nav = typeof navigator !== 'undefined' && navigator;\nvar isRtl = doc$1 && attr(document.documentElement, 'dir') === 'rtl';\nvar hasTouchEvents = win$1 && 'ontouchstart' in window;\nvar hasPointerEvents = win$1 && window.PointerEvent;\nvar hasTouch = hasTouchEvents || win$1 && window.DocumentTouch && doc$1 && document instanceof window.DocumentTouch || nav && navigator.maxTouchPoints;\nvar pointerDown = !hasTouch ? 'mousedown' : \"mousedown \" + (hasTouchEvents ? 'touchstart' : 'pointerdown');\nvar pointerMove = !hasTouch ? 'mousemove' : \"mousemove \" + (hasTouchEvents ? 'touchmove' : 'pointermove');\nvar pointerUp = !hasTouch ? 'mouseup' : \"mouseup \" + (hasTouchEvents ? 'touchend' : 'pointerup');\nvar pointerEnter = hasTouch && hasPointerEvents ? 'pointerenter' : 'mouseenter';\nvar pointerLeave = hasTouch && hasPointerEvents ? 'pointerleave' : 'mouseleave';\nvar props$1 = {\n  target: {},\n  boundary: {},\n  boundaryAlign: {\n    type: Boolean,\n    default: false\n  },\n  flip: {\n    type: [String, Boolean],\n    default: true\n  },\n  position: {\n    type: String,\n    default: \"bottom-\" + (isRtl ? 'right' : 'left'),\n    validator: function (pos) {\n      return /^(top|bottom)-(left|right|center|justify)$/.test(pos) || /^(left|right)-(top|bottom|center|justify)$/.test(pos);\n    }\n  },\n  offset: {\n    type: [Boolean, Number],\n    default: false\n  },\n  animation: {\n    type: String,\n    default: 'fade'\n  },\n  duration: {\n    type: Number,\n    default: 200\n  },\n  mode: {\n    type: String,\n    default: 'click hover'\n  },\n  delayShow: {\n    type: Number,\n    default: 0\n  },\n  delayHide: {\n    type: Number,\n    default: 800\n  },\n  mainClass: {\n    type: String,\n    default: 'uk-drop'\n  }\n};\nvar ElementDrop = {\n  functional: true,\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var children = ref.children;\n    var data = ref.data;\n    var props = ref.props;\n    var show = props.show;\n    return h('div', mergeData(data, {\n      class: {\n        'uk-open': show\n      },\n      style: {\n        display: show ? 'block' : null\n      }\n    }), children);\n  }\n};\nvar win$2 = typeof window !== 'undefined' && window;\nvar Promise = win$2 && 'Promise' in window ? window.Promise : PromiseFn;\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\nvar async = win$2 && 'setImmediate' in window ? setImmediate : setTimeout;\n\nfunction PromiseFn(executor) {\n  this.state = PENDING;\n  this.value = undefined;\n  this.deferred = [];\n  var promise = this;\n\n  try {\n    executor(function (x) {\n      promise.resolve(x);\n    }, function (r) {\n      promise.reject(r);\n    });\n  } catch (e) {\n    promise.reject(e);\n  }\n}\n\nPromiseFn.reject = function (r) {\n  return new PromiseFn(function (resolve, reject) {\n    reject(r);\n  });\n};\n\nPromiseFn.resolve = function (x) {\n  return new PromiseFn(function (resolve, reject) {\n    resolve(x);\n  });\n};\n\nPromiseFn.all = function all(iterable) {\n  return new PromiseFn(function (resolve, reject) {\n    var result = [];\n    var count = 0;\n\n    if (iterable.length === 0) {\n      resolve(result);\n    }\n\n    function resolver(i) {\n      return function (x) {\n        result[i] = x;\n        count += 1;\n\n        if (count === iterable.length) {\n          resolve(result);\n        }\n      };\n    }\n\n    for (var i = 0; i < iterable.length; i += 1) {\n      PromiseFn.resolve(iterable[i]).then(resolver(i), reject);\n    }\n  });\n};\n\nPromiseFn.race = function race(iterable) {\n  return new PromiseFn(function (resolve, reject) {\n    for (var i = 0; i < iterable.length; i += 1) {\n      PromiseFn.resolve(iterable[i]).then(resolve, reject);\n    }\n  });\n};\n\nvar p = PromiseFn.prototype;\n\np.resolve = function resolve(x) {\n  var promise = this;\n\n  if (promise.state === PENDING) {\n    if (x === promise) {\n      throw new TypeError('Promise settled with itself.');\n    }\n\n    var called = false;\n\n    try {\n      var then = x && x.then;\n\n      if (x !== null && isObject(x) && isFunction(then)) {\n        then.call(x, function (x) {\n          if (!called) {\n            promise.resolve(x);\n          }\n\n          called = true;\n        }, function (r) {\n          if (!called) {\n            promise.reject(r);\n          }\n\n          called = true;\n        });\n        return;\n      }\n    } catch (e) {\n      if (!called) {\n        promise.reject(e);\n      }\n\n      return;\n    }\n\n    promise.state = RESOLVED;\n    promise.value = x;\n    promise.notify();\n  }\n};\n\np.reject = function reject(reason) {\n  var promise = this;\n\n  if (promise.state === PENDING) {\n    if (reason === promise) {\n      throw new TypeError('Promise settled with itself.');\n    }\n\n    promise.state = REJECTED;\n    promise.value = reason;\n    promise.notify();\n  }\n};\n\np.notify = function notify() {\n  var this$1 = this;\n  async(function () {\n    if (this$1.state !== PENDING) {\n      while (this$1.deferred.length) {\n        var ref = this$1.deferred.shift();\n        var onResolved = ref[0];\n        var onRejected = ref[1];\n        var resolve = ref[2];\n        var reject = ref[3];\n\n        try {\n          if (this$1.state === RESOLVED) {\n            if (isFunction(onResolved)) {\n              resolve(onResolved.call(undefined, this$1.value));\n            } else {\n              resolve(this$1.value);\n            }\n          } else if (this$1.state === REJECTED) {\n            if (isFunction(onRejected)) {\n              resolve(onRejected.call(undefined, this$1.value));\n            } else {\n              reject(this$1.value);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n      }\n    }\n  });\n};\n\np.then = function then(onResolved, onRejected) {\n  var this$1 = this;\n  return new PromiseFn(function (resolve, reject) {\n    this$1.deferred.push([onResolved, onRejected, resolve, reject]);\n    this$1.notify();\n  });\n};\n\np.catch = function (onRejected) {\n  return this.then(undefined, onRejected);\n};\n\nfunction transition(element, props, duration, timing) {\n  if (duration === void 0) duration = 400;\n  if (timing === void 0) timing = 'linear';\n  return Promise.all(toNodes(element).map(function (element) {\n    return new Promise(function (resolve, reject) {\n      for (var name in props) {\n        var value = css(element, name);\n\n        if (value === '') {\n          css(element, name, value);\n        }\n      }\n\n      var timer = setTimeout(function () {\n        return trigger(element, 'transitionend');\n      }, duration);\n      once(element, 'transitionend transitioncanceled', function (ref) {\n        var type = ref.type;\n        clearTimeout(timer);\n        removeClass(element, 'uk-transition');\n        css(element, {\n          'transition-property': '',\n          'transition-duration': '',\n          'transition-timing-function': ''\n        });\n        type === 'transitioncanceled' ? reject() : resolve();\n      }, false, function (ref) {\n        var target = ref.target;\n        return element === target;\n      });\n      addClass(element, 'uk-transition');\n      css(element, assign({\n        'transition-property': Object.keys(props).map(propName).join(','),\n        'transition-duration': duration + \"ms\",\n        'transition-timing-function': timing\n      }, props));\n    });\n  }));\n}\n\nvar Transition = {\n  start: transition,\n  stop: function stop(element) {\n    trigger(element, 'transitionend');\n    return Promise.resolve();\n  },\n  cancel: function cancel(element) {\n    trigger(element, 'transitioncanceled');\n  },\n  inProgress: function inProgress(element) {\n    return hasClass(element, 'uk-transition');\n  }\n};\nvar animationPrefix = 'uk-animation-';\nvar clsCancelAnimation = 'uk-cancel-animation';\n\nfunction animate(element, animation, duration, origin, out) {\n  var arguments$1 = arguments;\n  if (duration === void 0) duration = 200;\n  return Promise.all(toNodes(element).map(function (element) {\n    return new Promise(function (resolve, reject) {\n      if (hasClass(element, clsCancelAnimation)) {\n        requestAnimationFrame(function () {\n          return Promise.resolve().then(function () {\n            return animate.apply(void 0, arguments$1).then(resolve, reject);\n          });\n        });\n        return;\n      }\n\n      var cls = animation + \" \" + animationPrefix + (out ? 'leave' : 'enter');\n\n      if (startsWith(animation, animationPrefix)) {\n        if (origin) {\n          cls += \" uk-transform-origin-\" + origin;\n        }\n\n        if (out) {\n          cls += \" \" + animationPrefix + \"reverse\";\n        }\n      }\n\n      reset();\n      once(element, 'animationend animationcancel', function (ref) {\n        var type = ref.type;\n        var hasReset = false;\n\n        if (type === 'animationcancel') {\n          reject();\n          reset();\n        } else {\n          resolve();\n          Promise.resolve().then(function () {\n            hasReset = true;\n            reset();\n          });\n        }\n\n        requestAnimationFrame(function () {\n          if (!hasReset) {\n            addClass(element, clsCancelAnimation);\n            requestAnimationFrame(function () {\n              return removeClass(element, clsCancelAnimation);\n            });\n          }\n        });\n      }, false, function (ref) {\n        var target = ref.target;\n        return element === target;\n      });\n      css(element, 'animationDuration', duration + \"ms\");\n      addClass(element, cls);\n\n      function reset() {\n        css(element, 'animationDuration', '');\n        removeClasses(element, animationPrefix + \"\\\\S*\");\n      }\n    });\n  }));\n}\n\nvar inProgress = new RegExp(animationPrefix + \"(enter|leave)\");\nvar Animation = {\n  in: function in$1(element, animation, duration, origin) {\n    return animate(element, animation, duration, origin, false);\n  },\n  out: function out(element, animation, duration, origin) {\n    return animate(element, animation, duration, origin, true);\n  },\n  inProgress: function inProgress$1(element) {\n    return inProgress.test(attr(element, 'class'));\n  },\n  cancel: function cancel(element) {\n    trigger(element, 'animationcancel');\n  }\n};\nvar Transition$1 = {\n  name: 'VkTransition',\n  functional: true,\n  props: {\n    name: {\n      type: [String, Array],\n      required: true\n    },\n    duration: {\n      type: Number\n    },\n    mode: {\n      type: String,\n      default: 'out-in'\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var name = props.name;\n    var duration = props.duration;\n    var ref$1 = isString(name) ? [name, name] : name;\n    var animationIn = ref$1[0];\n    var animationOut = ref$1[1];\n    var def = {\n      props: {\n        css: false,\n        mode: props.mode\n      },\n      on: {\n        enter: function enter(el, done) {\n          animationIn ? Animation.in(el, \"uk-animation-\" + animationIn, duration).then(done) : done();\n        },\n        leave: function leave(el, done) {\n          animationOut ? Animation.out(el, \"uk-animation-\" + animationOut, duration).then(done) : done();\n        }\n      }\n    };\n    return h('transition', def, children);\n  }\n};\nvar render = {\n  mounted: function mounted() {\n    this.$refs.target = this.queryElement(this.target) || this.$el.previousElementSibling;\n    this.$refs.boundary = this.queryElement(this.boundary) || window;\n    this.$forceUpdate();\n  },\n  render: function render(h) {\n    var this$1 = this;\n    var obj, obj$1;\n    var ref = this;\n    var position$$1 = ref.position;\n    var ref$1 = this.$refs;\n    var boundary = ref$1.boundary;\n    var target = ref$1.target;\n    var ref$2 = position$$1.split('-');\n    var align = ref$2[1];\n    var ref$3 = this;\n    var boundaryAlign = ref$3.boundaryAlign;\n    var animation = ref$3.animation;\n    var duration = ref$3.duration;\n    var mainClass = ref$3.mainClass;\n    var flip = ref$3.flip;\n    var offset$$1 = ref$3.offset;\n\n    if (!target || !boundary) {\n      return;\n    }\n\n    position$$1 = position$$1.replace('justify', 'center');\n    target = boundaryAlign ? boundary : target;\n    var def = {\n      on: (obj = {}, obj[BEFORE_POSITION] = function (e) {\n        var ref = this$1;\n        var $el = ref.$el;\n        var alignTo = offset(target);\n        var boundaryOffset = offset(boundary);\n        css($el, {\n          width: '',\n          height: ''\n        });\n        removeClass($el, mainClass + \"-stack\");\n\n        if (align === 'justify') {\n          var prop = getAxis(position$$1) === 'y' ? 'width' : 'height';\n          css($el, prop, alignTo[prop]);\n        } else if ($el.offsetWidth > Math.max(boundaryOffset.right - alignTo.left, alignTo.right - boundaryOffset.left)) {\n          addClass($el, mainClass + \"-stack\");\n        }\n      }, obj),\n      props: {\n        show: this.shown\n      },\n      class: [mainClass, (obj$1 = {}, obj$1[mainClass + \"-boundary\"] = this.boundaryAlign, obj$1)],\n      directives: [{\n        name: 'show',\n        value: this.shown\n      }, {\n        name: 'vk-position',\n        value: {\n          flip: flip,\n          offset: offset$$1,\n          target: target,\n          boundary: boundary,\n          position: position$$1,\n          mainClass: mainClass\n        }\n      }]\n    };\n    return h(Transition$1, {\n      props: {\n        name: [animation],\n        duration: duration\n      }\n    }, [h(ElementDrop, def, this.$slots.default)]);\n  }\n};\n\nfunction getAxis(position$$1) {\n  var ref = position$$1.split('-');\n  var dir = ref[0];\n  return dir === 'top' || dir === 'bottom' ? 'y' : 'x';\n}\n\nvar SHOW = 'show';\nvar HIDE = 'hide';\nvar touch = {},\n    clickTimeout,\n    swipeTimeout,\n    tapTimeout,\n    clicked;\n\nfunction swipeDirection(ref) {\n  var x1 = ref.x1;\n  var x2 = ref.x2;\n  var y1 = ref.y1;\n  var y2 = ref.y2;\n  return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? x1 - x2 > 0 ? 'Left' : 'Right' : y1 - y2 > 0 ? 'Up' : 'Down';\n}\n\nfunction cancelAll() {\n  clickTimeout && clearTimeout(clickTimeout);\n  swipeTimeout && clearTimeout(swipeTimeout);\n  tapTimeout && clearTimeout(tapTimeout);\n  clickTimeout = swipeTimeout = tapTimeout = null;\n  touch = {};\n}\n\nready(function () {\n  on(document, 'click', function () {\n    return clicked = true;\n  }, true);\n  on(document, pointerDown, function (e) {\n    var target = e.target;\n    var ref = getPos$1(e);\n    var x = ref.x;\n    var y = ref.y;\n    var now = Date.now();\n    var type = getType(e.type);\n\n    if (touch.type && touch.type !== type) {\n      return;\n    }\n\n    touch.el = 'tagName' in target ? target : target.parentNode;\n    clickTimeout && clearTimeout(clickTimeout);\n    touch.x1 = x;\n    touch.y1 = y;\n\n    if (touch.last && now - touch.last <= 250) {\n      touch = {};\n    }\n\n    touch.type = type;\n    touch.last = now;\n    clicked = e.button > 0;\n  });\n  on(document, pointerMove, function (e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    var ref = getPos$1(e);\n    var x = ref.x;\n    var y = ref.y;\n    touch.x2 = x;\n    touch.y2 = y;\n  });\n  on(document, pointerUp, function (ref) {\n    var type = ref.type;\n    var target = ref.target;\n\n    if (touch.type !== getType(type)) {\n      return;\n    }\n\n    if (touch.x2 && Math.abs(touch.x1 - touch.x2) > 30 || touch.y2 && Math.abs(touch.y1 - touch.y2) > 30) {\n      swipeTimeout = setTimeout(function () {\n        if (touch.el) {\n          trigger(touch.el, 'swipe');\n          trigger(touch.el, \"swipe\" + swipeDirection(touch));\n        }\n\n        touch = {};\n      });\n    } else if ('last' in touch) {\n      tapTimeout = setTimeout(function () {\n        return trigger(touch.el, 'tap');\n      });\n\n      if (touch.el && type !== 'mouseup' && within(target, touch.el)) {\n        clickTimeout = setTimeout(function () {\n          clickTimeout = null;\n\n          if (touch.el && !clicked) {\n            trigger(touch.el, 'click');\n          }\n\n          touch = {};\n        }, 350);\n      }\n    } else {\n      touch = {};\n    }\n  });\n  on(document, 'touchcancel', cancelAll);\n  on(window, 'scroll', cancelAll);\n});\nvar touching = false;\n\nif (typeof document !== 'undefined') {\n  on(document, 'touchstart', function () {\n    return touching = true;\n  }, true);\n  on(document, 'click', function () {\n    touching = false;\n  });\n  on(document, 'touchcancel', function () {\n    return touching = false;\n  }, true);\n}\n\nfunction isTouch(e) {\n  return touching || e.pointerType === 'touch';\n}\n\nfunction getPos$1(e) {\n  var touches = e.touches;\n  var changedTouches = e.changedTouches;\n  var ref = touches && touches[0] || changedTouches && changedTouches[0] || e;\n  var x = ref.pageX;\n  var y = ref.pageY;\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction getType(type) {\n  return type.slice(0, 5);\n}\n\nvar active;\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  on(window, 'resize', function (ref) {\n    var defaultPrevented = ref.defaultPrevented;\n    var justified = active && /justify/.test(active.position);\n\n    if (!defaultPrevented && justified) {\n      active.$forceUpdate();\n    }\n  });\n  on(document.documentElement, 'click', function (ref) {\n    var target = ref.target;\n    var defaultPrevented = ref.defaultPrevented;\n\n    if (defaultPrevented || !active) {\n      return;\n    }\n\n    var clickedInside = function (drop) {\n      return within(target, drop.$el);\n    };\n\n    var clickedTarget = function (drop) {\n      return within(target, drop.$refs.target);\n    };\n\n    while (active && !clickedInside(active) && !clickedTarget(active)) {\n      var parent = findParent(active);\n\n      active._hide();\n\n      active = parent;\n    }\n  });\n}\n\nvar toggle = {\n  data: function () {\n    return {\n      shown: false\n    };\n  },\n  methods: {\n    show: function show() {\n      this.clearTimers();\n      this.showTimer = setTimeout(this._show, this.delayShow);\n    },\n    _show: function _show() {\n      while (active && !this.isChildOf(active) && !this.isParentOf(active)) {\n        var parent = findParent(active);\n\n        active._hide();\n\n        active = parent;\n      }\n\n      this.shown = true;\n      this.tracker.init();\n      active = this;\n      this.$emit(SHOW);\n    },\n    hide: function hide() {\n      var hoverIdle = 200;\n      this.clearTimers();\n      this.isDelaying = this.tracker.movesTo(this.$el);\n\n      if (this.isDelaying) {\n        this.hideTimer = setTimeout(this.hide, hoverIdle);\n      } else {\n        this.hideTimer = setTimeout(this._hide, this.delayHide);\n      }\n    },\n    _hide: function _hide() {\n      this.shown = false;\n      this.tracker.cancel();\n\n      if (active === this) {\n        var parent = findParent(active);\n        active = parent || null;\n      }\n\n      this.$emit(HIDE);\n    },\n    clearTimers: function clearTimers() {\n      clearTimeout(this.showTimer);\n      clearTimeout(this.hideTimer);\n      this.showTimer = null;\n      this.hideTimer = null;\n    },\n    toggle: function toggle() {\n      this.shown ? this._hide() : this.show();\n    }\n  },\n  mounted: function mounted() {\n    var this$1 = this;\n    var ref = this;\n    var on$$1 = ref.on;\n    var show = ref.show;\n    var hide = ref.hide;\n    var toggle = ref.toggle;\n    var mode = ref.mode;\n    var clearTimers = ref.clearTimers;\n    this.$nextTick(function () {\n      if (/click/.test(mode) || hasTouch) {\n        on$$1(this$1.$refs.target, 'click', toggle);\n      }\n\n      if (/hover/.test(mode)) {\n        on$$1(this$1.$refs.target, pointerEnter, function (e) {\n          if (isTouch(e)) {\n            return;\n          }\n\n          e.preventDefault();\n          show();\n        });\n        on$$1(this$1.$refs.target, pointerLeave, function (e) {\n          if (isTouch(e)) {\n            return;\n          }\n\n          e.preventDefault();\n          hide();\n        });\n        on$$1(this$1.$el, pointerLeave, hide);\n        on$$1(this$1.$el, pointerEnter, clearTimers);\n      }\n    });\n  }\n};\nvar Drop = {\n  name: 'VkDrop',\n  mixins: [render, toggle, EventsMixin],\n  directives: {\n    VkRoot: VkRoot,\n    VkPosition: Directive\n  },\n  props: props$1,\n  methods: {\n    isParentOf: function isParentOf(instance) {\n      var parents = findParents(instance);\n      return includes(parents, this);\n    },\n    isChildOf: function isChildOf(instance) {\n      var parents = findParents(this);\n      return includes(parents, instance);\n    },\n    queryElement: function queryElement(el) {\n      return isNode(el) ? el : isString(el) ? get(this.$vnode.context.$refs, el) || $(el, this.$el) : el;\n    }\n  },\n  created: function created() {\n    this.tracker = new MouseTracker();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n  }\n};\nvar Dropdown = {\n  name: 'VkDropdown',\n  extends: Drop,\n  props: {\n    mainClass: {\n      default: 'uk-dropdown'\n    }\n  }\n};\nvar ElementGrid = {\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    divided: {\n      type: Boolean,\n      default: false\n    },\n    matched: {\n      type: Boolean,\n      default: false\n    },\n    gutter: {\n      type: String,\n      validator: function (val) {\n        return !val || /^(small|medium|large|collapse)$/.test(val);\n      }\n    }\n  },\n  render: function render(h, ref) {\n    var obj;\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var tag = props.tag;\n    var gutter = props.gutter;\n    var divided = props.divided;\n    var matched = props.matched;\n    return h(tag, mergeData(data, {\n      class: ['uk-grid', (obj = {\n        'uk-grid-match': matched,\n        'uk-grid-divider': divided\n      }, obj[\"uk-grid-\" + gutter] = gutter, obj)]\n    }), children);\n  }\n};\nvar NAMESPACE = '__vkMargin';\nvar VkMargin = {\n  bind: function bind$$1(el, binding, vnode) {\n    el[NAMESPACE] = {};\n  },\n  inserted: function inserted(el, binding, vnode) {\n    vnode.context.$nextTick(function () {\n      return update(el, {\n        binding: binding,\n        vnode: vnode\n      });\n    });\n    el[NAMESPACE].unbind = on(window, 'resize', function () {\n      return update(el, {\n        binding: binding,\n        vnode: vnode\n      });\n    });\n  },\n  componentUpdated: function componentUpdated(el, binding, vnode) {\n    vnode.context.$nextTick(function () {\n      return update(el, {\n        binding: binding,\n        vnode: vnode\n      });\n    });\n  },\n  unbind: function unbind(el) {\n    if (!el[NAMESPACE]) {\n      return;\n    }\n\n    el[NAMESPACE].unbind();\n    delete el[NAMESPACE];\n  }\n};\n\nfunction update(el, ctx) {\n  var opts = getOptions$1(ctx);\n  var items = el.children;\n\n  if (!items.length || !isVisible(el)) {\n    return;\n  }\n\n  var data = getRows(items);\n  data.rows.forEach(function (row, i) {\n    return row.forEach(function (el, j) {\n      toggleClass(el, opts.margin, i !== 0);\n      toggleClass(el, opts.firstColumn, j === 0);\n    });\n  });\n  opts.onUpdate(el, data);\n}\n\nfunction getOptions$1(ctx) {\n  var ref = ctx.binding;\n  var value = ref.value;\n\n  if (false) {}\n\n  var options = assign({\n    onUpdate: noop,\n    margin: 'uk-margin-small-top',\n    firstColumn: 'uk-first-column'\n  }, value);\n  return options;\n}\n\nfunction getRows(items) {\n  var data = {};\n  var rows = [[]];\n  data.stacks = true;\n\n  for (var i = 0; i < items.length; i++) {\n    var el = items[i];\n    var dim = el.getBoundingClientRect();\n\n    if (!dim.height) {\n      continue;\n    }\n\n    for (var j = rows.length - 1; j >= 0; j--) {\n      var row = rows[j];\n\n      if (!row[0]) {\n        row.push(el);\n        break;\n      }\n\n      var leftDim = row[0].getBoundingClientRect();\n\n      if (dim.top >= Math.floor(leftDim.bottom)) {\n        rows.push([el]);\n        break;\n      }\n\n      if (Math.floor(dim.bottom) > leftDim.top) {\n        data.stacks = false;\n\n        if (dim.left < leftDim.left && !isRtl) {\n          row.unshift(el);\n          break;\n        }\n\n        row.push(el);\n        break;\n      }\n\n      if (j === 0) {\n        rows.unshift([el]);\n        break;\n      }\n    }\n  }\n\n  data.rows = rows;\n  return data;\n}\n\nvar Grid = {\n  name: 'VkGrid',\n  directives: {\n    VkMargin: VkMargin\n  },\n  props: assign({}, ElementGrid.props, {\n    margin: {\n      type: String,\n      default: 'uk-grid-margin'\n    },\n    firstColumn: {\n      type: String,\n      default: 'uk-first-column'\n    }\n  }),\n  render: function render(h) {\n    var clsStack = 'uk-grid-stack';\n    var ref = this;\n    var margin = ref.margin;\n    var firstColumn = ref.firstColumn;\n    return h(ElementGrid, {\n      props: this.$props,\n      directives: [{\n        name: 'vk-margin',\n        value: {\n          margin: margin,\n          firstColumn: firstColumn,\n          onUpdate: function (el, ref) {\n            var stacks = ref.stacks;\n            toggleClass(el, clsStack, stacks);\n          }\n        }\n      }]\n    }, this.$slots.default);\n  }\n};\nvar core = {\n  functional: true,\n  props: {\n    icon: {\n      type: String,\n      required: true\n    },\n    ratio: {\n      type: [Number, String],\n      default: 1\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var icon = props.icon;\n    var ratio = props.ratio;\n    var ref$1 = data.attrs || {};\n    var width = ref$1.width;\n    var height = ref$1.height;\n    var viewBox = ref$1.viewBox;\n    var Icon = h(\"vk-icons-\" + icon, {\n      attrs: {\n        width: width,\n        height: height,\n        viewBox: viewBox\n      }\n    });\n\n    if (ratio !== 1) {\n      Icon.data.attrs.width *= ratio;\n      Icon.data.attrs.height *= ratio;\n      Icon.data.attrs.ratio = ratio;\n    }\n\n    return Icon;\n  }\n};\nvar ElementIcon = {\n  functional: true,\n  render: function (h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('span', mergeData(data, {\n      class: 'uk-icon'\n    }), children);\n  }\n};\nvar ElementIconLink = {\n  functional: true,\n  props: {\n    reset: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    var reset = props.reset;\n    return h('a', mergeData(data, {\n      class: ['uk-icon', {\n        'uk-icon-link': reset\n      }]\n    }), children);\n  }\n};\nvar ElementIconButton = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('a', mergeData(data, {\n      class: 'uk-icon uk-icon-button'\n    }), children);\n  }\n};\nvar ElementIconImage = {\n  functional: true,\n  props: {\n    src: {\n      type: String,\n      required: true\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var src = props.src;\n    return h('span', mergeData(data, {\n      class: 'uk-icon uk-icon-image',\n      style: {\n        'background-image': \"url(\" + src + \")\"\n      }\n    }));\n  }\n};\nvar icon = {\n  name: 'VkIcon',\n  functional: true,\n  props: core.props,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    return h(ElementIcon, data, [h(core, mergeData(data, {\n      props: props\n    }))]);\n  }\n};\nvar iconLink = {\n  name: 'VkIconLink',\n  functional: true,\n  props: assign({}, core.props, ElementIconLink.props),\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var def = mergeData(data, {\n      props: props\n    });\n    return h(ElementIconLink, def, [h(core, def)]);\n  }\n};\nvar iconButton = {\n  name: 'VkIconButton',\n  functional: true,\n  props: core.props,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    return h(ElementIconButton, data, [h(core, mergeData(data, {\n      props: props\n    }))]);\n  }\n};\nvar iconImage = {\n  name: 'VkIconImage',\n  functional: true,\n  props: ElementIconImage.props,\n  render: ElementIconImage.render\n};\nvar ElementIconnav = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('ul', mergeData(data, {\n      class: 'uk-iconnav'\n    }), children);\n  }\n};\nvar ElementIconnavVertical = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('ul', mergeData(data, {\n      class: 'uk-iconnav uk-iconnav-vertical'\n    }), children);\n  }\n};\nvar ElementIconnavItem = {\n  functional: true,\n  props: {\n    href: String,\n    target: String,\n    active: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var active = props.active;\n    var href = props.href;\n    var target = props.target;\n    return h('li', mergeData(data, {\n      class: {\n        'uk-active': active\n      }\n    }), [h(ElementIconLink, {\n      attrs: {\n        href: href,\n        target: target\n      }\n    }, children)]);\n  }\n};\nvar iconnav = {\n  name: 'VkIconnav',\n  functional: true,\n  render: ElementIconnav.render\n};\nvar iconnavVertical = {\n  name: 'VkIconnavVertical',\n  functional: true,\n  render: ElementIconnavVertical.render\n};\nvar iconnav_Item = {\n  name: 'VkIconnavItem',\n  functional: true,\n  props: assign({\n    icon: {\n      type: String,\n      required: true\n    }\n  }, ElementIconnavItem.props),\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    return h(ElementIconnavItem, mergeData(data, {\n      props: props\n    }), [h(\"vk-icons-\" + props.icon)]);\n  }\n};\nvar ElementLabel = {\n  functional: true,\n  props: {\n    type: {\n      type: String,\n      validator: function (val) {\n        return !val || /^(success|warning|danger)$/.test(val);\n      }\n    }\n  },\n  render: function render(h, ref) {\n    var obj;\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    var type = props.type;\n    return h('span', mergeData(data, {\n      class: ['uk-label', (obj = {}, obj[\"uk-label-\" + type] = type, obj)]\n    }), children);\n  }\n};\nvar label = {\n  name: 'VkLabel',\n  functional: true,\n  props: ElementLabel.props,\n  render: ElementLabel.render\n};\nvar SHOWN = 'shown';\nvar HIDDEN = 'hidden';\nvar TOGGLE = 'update:show';\nvar KEYUP = 'keyup';\nvar doc$2 = typeof document !== 'undefined' && document.documentElement;\nvar active$1;\nvar activeModals;\nvar Transition$2 = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    var modal = ref.parent;\n    var def = {\n      props: {\n        css: false,\n        appear: true\n      },\n      on: {\n        beforeEnter: function beforeEnter() {\n          addClass(doc$2, 'uk-modal-page');\n        },\n        enter: function enter(el, done) {\n          var prev = active$1 !== modal && active$1;\n\n          if (prev && !modal.stack) {\n            prev.hide();\n            once(prev.$el, 'transitionend', function () {\n              return doEnter(el, done);\n            }, false, function (e) {\n              return e.target === prev.$el;\n            });\n            return;\n          }\n\n          setTimeout(function () {\n            return doEnter(el, done);\n          }, 0);\n        },\n        afterEnter: function afterEnter(el) {\n          activeModals++;\n          active$1 = modal;\n          active$1.$emit(SHOWN);\n        },\n        beforeLeave: function beforeLeave(el) {\n          removeClass(el, 'uk-open');\n        },\n        leave: function leave(el, done) {\n          once(el, 'transitionend', done, false, function (e) {\n            return e.target === el;\n          });\n        },\n        afterLeave: function afterLeave(el) {\n          activeModals--;\n\n          if (!activeModals) {\n            removeClass(doc$2, 'uk-modal-page');\n          }\n\n          if (active$1 === modal) {\n            active$1 = null;\n          }\n\n          modal.$emit(HIDDEN);\n        }\n      }\n    };\n\n    function doEnter(el, done) {\n      modal.$root.$el.appendChild(el);\n      el.offsetWidth;\n      once(el, 'transitionend', done, false, function (e) {\n        return e.target === el;\n      });\n      addClass(el, 'uk-open');\n    }\n\n    return h('transition', def, children);\n  }\n};\non(doc$2, 'click', function (e) {\n  if (!active$1) {\n    return;\n  }\n\n  var clickedOut = e.target === active$1.$el;\n\n  if (clickedOut && !active$1.stuck) {\n    active$1.$emit(TOGGLE, false);\n  }\n});\non(doc$2, 'keyup', function (e) {\n  active$1 && active$1.$emit(KEYUP, e);\n});\nvar doc$3 = typeof document !== 'undefined' && document.documentElement;\nvar core$1 = {\n  mixins: [EventsMixin],\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    hide: function hide() {\n      this.$emit(TOGGLE, false);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n\n    if (!activeModals) {\n      removeClass(doc$3, 'uk-modal-page');\n    }\n  }\n};\nvar VkModalOverflowAuto = {\n  bind: function bind(el, binding) {\n    el.vkModalOverflowAutoOff = on(window, 'resize', function () {\n      return update$1(el, binding);\n    });\n    addClass(el, 'uk-overflow-auto');\n  },\n  inserted: function inserted(el, binding, vnode) {\n    vnode.context.$nextTick(function () {\n      return update$1(el, binding);\n    });\n  },\n  componentUpdated: function componentUpdated(el, binding) {\n    update$1(el, binding);\n  },\n  unbind: function unbind(el) {\n    el.vkModalOverflowAutoOff();\n  }\n};\n\nfunction update$1(el, binding) {\n  var modal = closest(el, '.uk-modal');\n  var panel = closest(el, '.uk-modal-dialog');\n\n  if (!panel || !modal) {\n    return;\n  }\n\n  var current = css(el, 'maxHeight');\n  css(el, 'maxHeight', 150);\n  css(el, 'maxHeight', Math.max(150, 150 + height(modal) - panel.offsetHeight));\n\n  if (current !== css(el, 'maxHeight')) {\n    update$1(el, binding);\n  }\n}\n\nvar ElementModal = {\n  functional: true,\n  props: {\n    expand: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var children = ref.children;\n    var data = ref.data;\n    var props = ref.props;\n    var expand = props.expand;\n    return h('div', mergeData(data, {\n      class: ['uk-modal', {\n        'uk-modal-container': expand\n      }],\n      style: {\n        display: 'block'\n      }\n    }), children);\n  }\n};\nvar ElementModalFull = {\n  functional: true,\n  render: function render(h, ref) {\n    var children = ref.children;\n    var data = ref.data;\n    var props = ref.props;\n    return h('div', mergeData(data, {\n      class: 'uk-modal uk-modal-full',\n      style: {\n        display: 'block'\n      }\n    }), children);\n  }\n};\nvar IconClose = {\n  functional: true,\n  render: function (h, ctx) {\n    var props = ctx.props;\n    var width = props.width || 14;\n    var height = props.height || 14;\n    var viewBox = props.viewBox || '0 0 14 14';\n    return h('svg', {\n      attrs: {\n        version: '1.1',\n        width: width,\n        height: height,\n        viewBox: viewBox\n      },\n      domProps: {\n        innerHTML: '<path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1 1l12 12M13 1L1 13\"/>'\n      }\n    });\n  }\n};\nvar IconCloseLarge = {\n  functional: true,\n  render: function (h, ctx) {\n    var props = ctx.props;\n    var width = props.width || 20;\n    var height = props.height || 20;\n    var viewBox = props.viewBox || '0 0 20 20';\n    return h('svg', {\n      attrs: {\n        version: '1.1',\n        width: width,\n        height: height,\n        viewBox: viewBox\n      },\n      domProps: {\n        innerHTML: '<path fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" d=\"M1 1l18 18M19 1L1 19\"/>'\n      }\n    });\n  }\n};\nvar ElementModalClose = {\n  functional: true,\n  props: {\n    large: {\n      type: Boolean,\n      default: false\n    },\n    outside: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var obj;\n    var data = ref.data;\n    var props = ref.props;\n    var large = props.large;\n    var outside = props.outside;\n    var def = {\n      class: ['uk-close uk-icon', (obj = {\n        'uk-close-large': large\n      }, obj[\"uk-modal-close-outside\"] = outside, obj[\"uk-modal-close-default\"] = !outside, obj)],\n      attrs: {\n        type: 'button'\n      }\n    };\n    return h('button', mergeData(data, def), [h(large ? IconCloseLarge : IconClose)]);\n  }\n};\nvar ElementModalFullClose = {\n  functional: true,\n  props: {\n    large: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var large = props.large;\n    var def = {\n      class: ['uk-close uk-icon uk-modal-close-full', {\n        'uk-close-large': large\n      }],\n      attrs: {\n        type: 'button'\n      }\n    };\n    return h('button', mergeData(data, def), [h(large ? IconCloseLarge : IconClose)]);\n  }\n};\nvar ElementModalTitle = {\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'h2'\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var tag = props.tag;\n    return h(tag, mergeData(data, {\n      class: 'uk-modal-title'\n    }), children);\n  }\n};\nvar ElementModalBody = {\n  functional: true,\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    return h('div', mergeData(data, {\n      class: 'uk-modal-body'\n    }), children);\n  }\n};\nvar ElementModalDialog = {\n  functional: true,\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    return h('div', mergeData(data, {\n      class: 'uk-modal-dialog'\n    }), children);\n  }\n};\nvar ElementModalFooter = {\n  functional: true,\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    return h('div', mergeData(data, {\n      class: 'uk-modal-footer'\n    }), children);\n  }\n};\nvar ElementModalHeader = {\n  functional: true,\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    return h('div', mergeData(data, {\n      class: 'uk-modal-header'\n    }), children);\n  }\n};\nvar modal = {\n  name: 'VkModal',\n  extends: core$1,\n  directives: {\n    VkModalOverflowAuto: VkModalOverflowAuto\n  },\n  props: {\n    stuck: {\n      type: Boolean,\n      default: false\n    },\n    overflowAuto: {\n      type: Boolean,\n      default: false\n    },\n    center: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: String,\n      default: ''\n    },\n    stack: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    widthClasses: function widthClasses() {\n      return this.size ? this.size.split(' ').map(function (size) {\n        return \"uk-width-\" + size;\n      }) : '';\n    }\n  },\n  render: function render(h) {\n    var this$1 = this;\n    var def = {\n      class: {\n        'uk-flex uk-flex-top': this.center\n      },\n      style: {\n        display: this.center ? 'flex' : 'block'\n      },\n      props: {\n        expand: this.size === 'container'\n      },\n      directives: [{\n        name: 'show',\n        value: this.show\n      }],\n      on: {}\n    };\n    Object.keys(this.$slots).forEach(function (slot) {\n      return each(this$1.$slots[slot], function (node) {\n        if (node.fnOptions && node.fnOptions.name === 'VkModalClose') {\n          assign(node.data, {\n            on: assign({\n              click: function (e) {\n                return this$1.$emit(TOGGLE, false);\n              }\n            }, node.data.on || {})\n          });\n        }\n      });\n    });\n    var modal = h(ElementModal, def, [h(ElementModalDialog, {\n      class: [this.widthClasses, {\n        'uk-margin-auto-vertical': this.center\n      }]\n    }, [this.$slots.dialog && this.$slots.dialog, this.$slots.header && h(ElementModalHeader, this.$slots.header), this.$slots.default && h(ElementModalBody, {\n      directives: this.overflowAuto ? [{\n        name: 'vk-modal-overflow-auto'\n      }] : []\n    }, this.$slots.default), this.$slots.footer && h(ElementModalFooter, this.$slots.footer)])]);\n    return h(Transition$2, [modal]);\n  }\n};\nvar NAMESPACE$1 = '__vkHeightViewport';\nvar VkHeightViewport = {\n  bind: function bind$$1(el, binding, vnode) {\n    el[NAMESPACE$1] = {};\n  },\n  inserted: function inserted(el, binding, vnode) {\n    vnode.context.$nextTick(function () {\n      return update$2(el, {\n        binding: binding,\n        vnode: vnode\n      });\n    });\n    el[NAMESPACE$1].unbind = on(window, 'resize', function () {\n      return update$2(el, {\n        binding: binding,\n        vnode: vnode\n      });\n    });\n  },\n  componentUpdated: function componentUpdated(el, binding, vnode) {\n    vnode.context.$nextTick(function () {\n      return update$2(el, {\n        binding: binding,\n        vnode: vnode\n      });\n    });\n  },\n  unbind: function unbind(el) {\n    if (!el[NAMESPACE$1]) {\n      return;\n    }\n\n    el[NAMESPACE$1].unbind();\n    delete el[NAMESPACE$1];\n  }\n};\n\nfunction getOptions$2(ctx) {\n  var ref = ctx.binding;\n  var value = ref.value;\n  var modifiers = ref.modifiers;\n\n  if (false) {}\n\n  var options = assign({\n    minHeight: 0,\n    expand: false,\n    offsetTop: false,\n    offsetBottom: false\n  }, modifiers, value);\n  return options;\n}\n\nfunction update$2(el, ctx) {\n  var opts = getOptions$2(ctx);\n  css(el, 'boxSizing', 'border-box');\n  var viewport = height(window);\n  var minHeight;\n  var offsetTop = 0;\n\n  if (opts.expand) {\n    css(el, {\n      height: '',\n      minHeight: ''\n    });\n    var diff = viewport - offsetHeight(document.documentElement);\n\n    if (diff > 0) {\n      minHeight = offsetHeight(el) + diff;\n    }\n  } else {\n    var ref = offset(el);\n    var top = ref.top;\n\n    if (top < viewport / 2 && opts.offsetTop) {\n      offsetTop += top;\n    }\n\n    if (opts.offsetBottom === true) {\n      offsetTop += offsetHeight(el.nextElementSibling);\n    } else if (isNumeric(opts.offsetBottom)) {\n      offsetTop += viewport / 100 * opts.offsetBottom;\n    } else if (opts.offsetBottom && endsWith(opts.offsetBottom, 'px')) {\n      offsetTop += toFloat(opts.offsetBottom);\n    } else if (isString(opts.offsetBottom)) {\n      offsetTop += offsetHeight(query(opts.offsetBottom, el));\n    }\n\n    minHeight = offsetTop ? \"calc(100vh - \" + offsetTop + \"px)\" : '100vh';\n  }\n\n  if (!minHeight) {\n    return;\n  }\n\n  css(el, {\n    height: '',\n    minHeight: minHeight\n  });\n  var elHeight = el.offsetHeight;\n\n  if (opts.minHeight && opts.minHeight > elHeight) {\n    css(el, 'minHeight', opts.minHeight);\n  }\n\n  if (viewport - offsetTop >= elHeight) {\n    css(el, 'height', minHeight);\n  }\n}\n\nfunction offsetHeight(el) {\n  return el && (el.offsetHeight || 0);\n}\n\nvar modalFull = {\n  name: 'VkModalFull',\n  extends: core$1,\n  directives: {\n    VkHeightViewport: VkHeightViewport\n  },\n  render: function render(h) {\n    var this$1 = this;\n    var def = {\n      props: {\n        expand: 'full'\n      },\n      directives: [{\n        name: 'show',\n        value: this.show\n      }]\n    };\n    Object.keys(this.$slots).forEach(function (slot) {\n      return each(this$1.$slots[slot], function (node) {\n        if (node.fnOptions && node.fnOptions.name === 'VkModalFullClose') {\n          assign(node.data, {\n            on: assign({\n              click: function (e) {\n                return this$1.$emit(TOGGLE, false);\n              }\n            }, node.data.on || {})\n          });\n        }\n      });\n    });\n    var modal = h(ElementModalFull, def, [h(ElementModalDialog, {\n      directives: [{\n        name: 'vk-height-viewport'\n      }]\n    }, this.$slots.default)]);\n    return h(Transition$2, [modal]);\n  }\n};\nvar modal_Close = {\n  name: 'VkModalClose',\n  functional: true,\n  props: ElementModalClose.props,\n  render: ElementModalClose.render\n};\nvar modalFull_Close = {\n  name: 'VkModalFullClose',\n  functional: true,\n  props: ElementModalFullClose.props,\n  render: ElementModalFullClose.render\n};\nvar modal_Title = {\n  name: 'VkModalTitle',\n  functional: true,\n  props: ElementModalTitle.props,\n  render: ElementModalTitle.render\n};\nvar ElementNav = {\n  functional: true,\n  props: {\n    center: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'default',\n      validator: function (val) {\n        return /^(default|primary|blank)$/.test(val);\n      }\n    }\n  },\n  render: function render(h, ref) {\n    var obj;\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var center = props.center;\n    var type = props.type;\n    return h('ul', mergeData(data, {\n      class: ['uk-nav', (obj = {\n        'uk-nav-center': center\n      }, obj[\"uk-nav-\" + type] = type, obj)]\n    }), children);\n  }\n};\nvar ElementNavDropdown = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('ul', mergeData(data, {\n      class: 'uk-nav uk-dropdown-nav'\n    }), children);\n  }\n};\nvar ElementNavItem = {\n  functional: true,\n  props: {\n    icon: {},\n    href: String,\n    target: String,\n    title: {\n      type: String,\n      required: true\n    },\n    active: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var active = props.active;\n    var icon$$1 = props.icon;\n    var title = props.title;\n    var href = props.href;\n    var target = props.target;\n    var content = title;\n\n    if (icon$$1) {\n      content = [h(ElementIcon, {\n        class: 'uk-margin-small-right'\n      }, [icon$$1]), h('span', {\n        class: 'uk-text-middle'\n      }, title)];\n    }\n\n    return h('li', mergeData(data, {\n      class: {\n        'uk-active': active\n      }\n    }), [h('a', {\n      attrs: {\n        href: href,\n        target: target\n      }\n    }, content)]);\n  }\n};\nvar ElementNavItemDivider = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    return h('li', mergeData(data, {\n      class: 'uk-nav-divider'\n    }));\n  }\n};\nvar ElementNavItemHeader = {\n  functional: true,\n  props: {\n    title: {\n      type: String,\n      required: true\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    return h('li', mergeData(data, {\n      class: 'uk-nav-header'\n    }), props.title);\n  }\n};\nvar ElementNavItemParent = {\n  functional: true,\n  props: {\n    href: String,\n    target: String,\n    title: {\n      type: String,\n      required: true\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var title = props.title;\n    var href = props.href;\n    var target = props.target;\n    return h('li', mergeData(data, {\n      class: 'uk-parent'\n    }), [h('a', {\n      attrs: {\n        href: href,\n        target: target\n      }\n    }, [title]), h('ul', {\n      class: 'uk-nav-sub'\n    }, children)]);\n  }\n};\nvar nav$1 = {\n  name: 'VkNav',\n  functional: true,\n  props: ElementNav.props,\n  render: ElementNav.render\n};\nvar navDropdown = {\n  name: 'VkNavDropdown',\n  functional: true,\n  render: ElementNavDropdown.render\n};\nvar nav_Item = {\n  name: 'VkNavItem',\n  functional: true,\n  props: assign({}, ElementNavItem.props, {\n    icon: {\n      type: String\n    }\n  }),\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    props.icon = props.icon && h(\"vk-icons-\" + props.icon);\n    return h(ElementNavItem, mergeData(data, {\n      props: props\n    }));\n  }\n};\nvar nav_ItemDivider = {\n  name: 'VkNavItemDivider',\n  functional: true,\n  render: ElementNavItemDivider.render\n};\nvar nav_ItemHeader = {\n  name: 'VkNavItemHeader',\n  functional: true,\n  props: ElementNavItemHeader.props,\n  render: ElementNavItemHeader.render\n};\nvar nav_ItemParent = {\n  name: 'VkNavItemParent',\n  functional: true,\n  props: ElementNavItemParent.props,\n  render: ElementNavItemParent.render\n};\nvar ElementNavbarNavigation = {\n  functional: true,\n  props: {\n    align: {\n      type: String,\n      default: 'left',\n      validator: function (val) {\n        return /^(left|center(-left|-right)?|right)$/.test(val);\n      }\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    var align = props.align;\n    var wrapContent = /center-(left|right)/.test(align);\n    return h('div', mergeData(data, {\n      class: \"uk-navbar-\" + align\n    }), [wrapContent ? h('div', children) : children]);\n  }\n};\n\nfunction renderSlots(h, slots) {\n  return [(slots.left || slots.default) && h(ElementNavbarNavigation, [slots.left, slots.default]), (slots.center || slots['center-left'] || slots['center-right']) && h(ElementNavbarNavigation, {\n    props: {\n      align: 'center'\n    }\n  }, [slots['center-left'] && h(ElementNavbarNavigation, {\n    props: {\n      align: 'center-left'\n    }\n  }, slots['center-left']), slots.center && slots.center, slots['center-right'] && h(ElementNavbarNavigation, {\n    props: {\n      align: 'center-right'\n    }\n  }, slots['center-right'])]), slots.right && h(ElementNavbarNavigation, {\n    props: {\n      align: 'right'\n    }\n  }, slots.right)];\n}\n\nvar ElementNavbar = {\n  functional: true,\n  props: {\n    container: {\n      type: Boolean,\n      default: true\n    },\n    transparent: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var slots = ref.slots;\n    var container = props.container;\n    var transparent = props.transparent;\n    return h('nav', mergeData(data, {\n      class: ['uk-navbar', {\n        'uk-navbar-container': container && !transparent,\n        'uk-navbar-transparent': transparent\n      }]\n    }), renderSlots(h, slots()));\n  }\n};\nvar ElementNavbarFull = {\n  functional: true,\n  props: {\n    expanded: {\n      type: Boolean,\n      default: false\n    },\n    transparent: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var slots = ref.slots;\n    var expanded = props.expanded;\n    var transparent = props.transparent;\n    return h('nav', mergeData(data, {\n      class: ['uk-navbar-container', {\n        'uk-navbar-transparent': transparent\n      }]\n    }), [h('div', {\n      class: ['uk-container', {\n        'uk-container-expand': expanded\n      }]\n    }, [h('div', {\n      class: 'uk-navbar'\n    }, renderSlots(h, slots()))])]);\n  }\n};\nvar ElementNavbarDropbar = {\n  functional: true,\n  props: {\n    slide: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var slide = props.slide;\n    return h('div', mergeData(data, {\n      class: ['uk-navbar-dropbar', {\n        'uk-navbar-dropbar-slide': slide\n      }]\n    }));\n  }\n};\nvar ElementNavbarItem = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('div', mergeData(data, {\n      class: 'uk-navbar-item'\n    }), children);\n  }\n};\nvar ElementNavbarLogo = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('span', mergeData(data, {\n      class: 'uk-navbar-item uk-logo'\n    }), children);\n  }\n};\nvar IconToggle = {\n  functional: true,\n  render: function (h, ctx) {\n    var props = ctx.props;\n    var width = props.width || 20;\n    var height = props.height || 20;\n    var viewBox = props.viewBox || '0 0 20 20';\n    return h('svg', {\n      attrs: {\n        version: '1.1',\n        width: width,\n        height: height,\n        viewBox: viewBox\n      },\n      domProps: {\n        innerHTML: '<path d=\"M0 9h20v2H0zM0 3h20v2H0zM0 15h20v2H0z\"/>'\n      }\n    });\n  }\n};\nvar ElementNavbarToggle = {\n  functional: true,\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: Boolean,\n      default: true\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var icon$$1 = props.icon;\n    var title = props.title;\n    var Icon = icon$$1 && h(ElementIcon, {\n      class: 'uk-navbar-toggle-icon'\n    }, [h(IconToggle)]);\n    return h('a', mergeData(data, {\n      class: 'uk-navbar-toggle'\n    }), [Icon, title && h('span', {\n      class: 'uk-margin-small-left'\n    }, title)]);\n  }\n};\nvar ElementNavbarNav = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('ul', mergeData(data, {\n      class: 'uk-navbar-nav'\n    }), children);\n  }\n};\nvar ElementNavbarNavItem = {\n  functional: true,\n  props: {\n    icon: {},\n    href: String,\n    target: String,\n    title: {\n      type: String\n    },\n    subtitle: {\n      type: String\n    },\n    active: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var active = props.active;\n    var title = props.title;\n    var subtitle = props.subtitle;\n    var icon$$1 = props.icon;\n    var href = props.href;\n    var target = props.target;\n    var Icon = icon$$1 && h(ElementIcon, {\n      class: 'uk-margin-small-right'\n    }, [icon$$1]);\n    var Subtitle = subtitle && h('div', [title, h('div', {\n      class: 'uk-navbar-subtitle'\n    }, subtitle)]);\n    return h('li', mergeData(data, {\n      class: {\n        'uk-active': active\n      }\n    }), [h('a', {\n      attrs: {\n        href: href,\n        target: target\n      }\n    }, [Icon, Subtitle || title]), children]);\n  }\n};\nvar ElementNavbarNavDropdownNav = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('ul', mergeData(data, {\n      class: 'uk-nav uk-navbar-dropdown-nav'\n    }), children);\n  }\n};\nvar navbar = {\n  name: 'VkNavbar',\n  functional: true,\n  props: ElementNavbar.props,\n  render: ElementNavbar.render\n};\nvar navbarFull = {\n  name: 'VkNavbarFull',\n  functional: true,\n  props: ElementNavbarFull.props,\n  render: ElementNavbarFull.render\n};\nvar SHOW$1 = SHOW;\nvar HIDE$1 = HIDE;\nvar navbarDropbar = {\n  name: 'VkNavbarDropbar',\n  props: {\n    mode: {\n      type: String,\n      default: 'slide',\n      validator: function (val) {\n        return /^(slide|push)$/.test(val);\n      }\n    },\n    duration: {\n      type: Number,\n      default: 200\n    }\n  },\n  methods: {\n    transitionDropbar: function transitionDropbar(dropdownEl) {\n      var el = dropdownEl;\n      var marginTop = toFloat(css(el, 'margin-top'));\n      var marginBottom = toFloat(css(el, 'margin-bottom'));\n      var height$$1 = el.offsetHeight + marginTop + marginBottom;\n      this.transitionTo(height$$1, el);\n    },\n    transitionTo: function transitionTo(newHeight, el) {\n      var dropbar = this.$refs.dropbar;\n      var oldHeight = isVisible(dropbar) ? height(dropbar) : 0;\n      el = oldHeight < newHeight && el;\n      css(el, {\n        height: oldHeight,\n        overflow: 'hidden'\n      });\n      height(dropbar, oldHeight);\n      Transition.cancel([el, dropbar]);\n      return Transition.start([el, dropbar], {\n        height: newHeight\n      }, this.duration).catch(noop).finally(function () {\n        return css(el, {\n          height: '',\n          overflow: ''\n        });\n      });\n    }\n  },\n  mounted: function mounted() {\n    var this$1 = this;\n    var dropdowns = get(this, '$children', []).filter(function (child) {\n      return /NavbarNavDropdown/.test(child.$options.name);\n    }).map(function (c) {\n      return c.$children[0];\n    });\n    dropdowns.forEach(function (drop) {\n      drop.$vnode.data.class['uk-navbar-dropdown-dropbar'] = true;\n      drop.$on(SHOW$1, function () {\n        this$1.$nextTick(function () {\n          this$1.transitionDropbar(drop.$el);\n        });\n      });\n      drop.$on(HIDE$1, function () {\n        this$1.$nextTick(function () {\n          var thereAreActiveDrops = active && within(active.$el, this$1.$el);\n\n          if (!thereAreActiveDrops) {\n            this$1.transitionDropbar(drop.$el);\n          }\n        });\n      });\n    });\n  },\n  render: function render(h) {\n    return h('div', {\n      class: 'uk-position-relative'\n    }, [this.$slots.default, h(ElementNavbarDropbar, {\n      ref: 'dropbar',\n      props: {\n        slide: this.mode === 'slide'\n      }\n    })]);\n  }\n};\nvar navbar_Item = {\n  name: 'VkNavbarItem',\n  functional: true,\n  render: ElementNavbarItem.render\n};\nvar navbar_Logo = {\n  name: 'VkNavbarLogo',\n  functional: true,\n  render: ElementNavbarLogo.render\n};\nvar navbar_Toggle = {\n  name: 'VkNavbarToggle',\n  functional: true,\n  props: ElementNavbarToggle.props,\n  render: ElementNavbarToggle.render\n};\nvar navbar_Nav = {\n  name: 'VkNavbarNav',\n  functional: true,\n  render: ElementNavbarNav.render\n};\nvar navbar_Nav_Item = {\n  name: 'VkNavbarNavItem',\n  functional: true,\n  props: assign({}, ElementNavbarNavItem.props, {\n    icon: {\n      type: String\n    }\n  }),\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    props.icon = props.icon && h(\"vk-icons-\" + props.icon);\n    return h(ElementNavbarNavItem, mergeData(data, {\n      props: props\n    }));\n  }\n};\nvar SHOW$2 = SHOW;\nvar navbar_Nav_Dropdown = {\n  name: 'VkNavbarNavDropdown',\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    subtitle: {\n      type: String\n    },\n    justified: {\n      type: Boolean,\n      default: false\n    },\n    align: {\n      type: String,\n      default: isRtl ? 'right' : 'left',\n      validator: function (val) {\n        return /^(left|center|right)$/.test(val);\n      }\n    },\n    navbarAligned: {\n      type: Boolean,\n      default: false\n    },\n    mode: Drop.props.mode,\n    offset: Drop.props.offset,\n    animation: Drop.props.animation,\n    duration: Drop.props.duration,\n    delayShow: Drop.props.delayShow,\n    delayHide: Drop.props.delayHide\n  },\n  computed: {\n    navbar: function navbar() {\n      return query('!.uk-navbar', this.$el);\n    },\n    dropbar: function dropbar() {\n      return /NavbarDropbar/.test(get(this, '$parent.$options.name', '')) ? this.$parent : false;\n    }\n  },\n  mounted: function mounted() {\n    var ref = this;\n    var mode = ref.mode;\n    var ref$1 = this.$refs.drop;\n    var on = ref$1.on;\n    var toggle = ref$1.toggle;\n    var show = ref$1.show;\n    var hide = ref$1.hide;\n    var target = this.$refs.drop.$refs.target;\n\n    if (/click/.test(mode) || hasTouch) {\n      on(target, 'click', toggle);\n    }\n\n    if (/hover/.test(mode)) {\n      on(target, pointerEnter, function (e) {\n        if (isTouch(e)) {\n          return;\n        }\n\n        e.preventDefault();\n        show();\n      });\n      on(this.dropbar ? this.dropbar.$el : target, pointerLeave, function (e) {\n        if (isTouch(e)) {\n          return;\n        }\n\n        e.preventDefault();\n        hide();\n      });\n    }\n  },\n  render: function render(h) {\n    var this$1 = this;\n    var obj, obj$1, obj$2;\n    var ref = this;\n    var title = ref.title;\n    var justified = ref.justified;\n    var mode = ref.mode;\n    var align = ref.align;\n    var navbarAligned = ref.navbarAligned;\n    var subtitle = ref.subtitle;\n    var defaultSlots = this.$slots.default || [];\n    var childrenNodes = defaultSlots.filter(function (n) {\n      return n.tag;\n    });\n    var colCount = childrenNodes.length;\n    var Subtitle = subtitle && h('div', [title, h('div', {\n      class: 'uk-navbar-subtitle'\n    }, subtitle)]);\n    return h('li', [h('a', [Subtitle || title]), h(Drop, {\n      on: (obj = {}, obj[SHOW$2] = function (e) {\n        this$1.$forceUpdate();\n      }, obj),\n      nativeOn: (obj$1 = {}, obj$1[pointerEnter] = function (e) {\n        this$1.$refs.drop.clearTimers();\n\n        if (/hover/.test(mode)) {\n          this$1.$refs.drop.show();\n        }\n      }, obj$1[pointerLeave] = function (e) {\n        if (!this$1.dropbar && /hover/.test(mode)) {\n          this$1.$refs.drop.hide();\n        }\n      }, obj$1),\n      ref: 'drop',\n      class: (obj$2 = {\n        'uk-navbar-dropdown-dropbar': Boolean(this.dropbar),\n        'uk-navbar-dropdown-boundary': justified || navbarAligned\n      }, obj$2[\"uk-navbar-dropdown-width-\" + colCount] = colCount > 1 && !justified, obj$2),\n      props: assign({}, this.$props, {\n        mode: '',\n        position: justified ? 'bottom-justify' : \"bottom-\" + align,\n        mainClass: 'uk-navbar-dropdown',\n        flip: justified ? 'x' : undefined,\n        boundary: '!nav',\n        boundaryAlign: justified || navbarAligned\n      })\n    }, [colCount >= 2 ? h(Grid, {\n      class: ['uk-navbar-dropdown-grid', \"uk-child-width-1-\" + colCount + (colCount > 2 ? '@m' : '')]\n    }, childrenNodes.map(function (child) {\n      return h('div', [child]);\n    })) : defaultSlots])]);\n  }\n};\nvar navbar_Nav_Dropdown_Nav = {\n  name: 'VkNavbarNavDropdownNav',\n  functional: true,\n  render: ElementNavbarNavDropdownNav.render\n};\nvar NAMESPACE$2 = '__vkNotification';\nvar MessageDirective = {\n  inserted: function inserted(el, binding, vnode) {\n    el[NAMESPACE$2] = {};\n\n    var close = function () {\n      return doClose(el, vnode);\n    };\n\n    var opts = el[NAMESPACE$2].options = binding.value;\n\n    if (opts.timeout) {\n      el[NAMESPACE$2].timer = setTimeout(close, opts.timeout);\n    }\n\n    on(el, 'click', close);\n    on(el, pointerEnter, function () {\n      if (el[NAMESPACE$2].timer) {\n        clearTimeout(el[NAMESPACE$2].timer);\n      }\n    });\n    on(el, pointerLeave, function () {\n      if (opts.timeout) {\n        el[NAMESPACE$2].timer = setTimeout(close, opts.timeout);\n      }\n    });\n  },\n  unbind: function unbind(el) {\n    if (!el[NAMESPACE$2]) {\n      return;\n    }\n\n    clearTimeout(el[NAMESPACE$2].timer);\n    delete el[NAMESPACE$2];\n  }\n};\n\nfunction doClose(el, vnode) {\n  clearTimeout(el[NAMESPACE$2].timer);\n  trigger(el, 'close');\n}\n\nvar MessageTransition = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    var parent = ref.parent;\n    var def = {\n      props: {\n        css: false,\n        appear: true,\n        tag: 'div'\n      },\n      on: {\n        enter: function enter(el, done) {\n          var marginBottom = toFloat(css(el, 'marginBottom'));\n          css(el, {\n            opacity: 0,\n            marginTop: -el.offsetHeight,\n            marginBottom: 0\n          });\n          Transition.start(el, {\n            opacity: 1,\n            marginTop: 0,\n            marginBottom: marginBottom\n          }).then(done);\n        },\n        leave: function leave(el, done) {\n          Transition.start(el, {\n            opacity: 0,\n            marginTop: -el.offsetHeight,\n            marginBottom: 0\n          }).then(done);\n        }\n      }\n    };\n    return h('transition-group', mergeData(data, def), children);\n  }\n};\nvar ElementNotification = {\n  functional: true,\n  props: {\n    position: {\n      type: String,\n      default: 'top-center',\n      validator: function (val) {\n        return /^(top|bottom)-(left|center|right)$/.test(val);\n      }\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var position = props.position;\n    return h('div', mergeData(data, {\n      class: ['uk-notification', \"uk-notification-\" + position]\n    }), children);\n  }\n};\nvar ElementNotificationClose = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    return h(ElementIconLink, mergeData(data, {\n      class: 'uk-notification-close uk-close'\n    }), [h(IconClose)]);\n  }\n};\nvar ElementNotificationMessage = {\n  functional: true,\n  props: {\n    status: {\n      type: String,\n      default: '',\n      validator: function (val) {\n        return !val || /^(primary|success|warning|danger)$/.test(val);\n      }\n    }\n  },\n  render: function render(h, ref) {\n    var obj;\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var status = props.status;\n    return h('div', mergeData(data, {\n      class: ['uk-notification-message', (obj = {}, obj[\"uk-notification-message-\" + status] = status, obj)]\n    }), children);\n  }\n};\nvar isNotProd = \"production\" !== 'production';\nvar notification = {\n  name: 'VkNotification',\n  directives: {\n    MessageDirective: MessageDirective\n  },\n  props: assign({}, ElementNotification.props, {\n    timeout: {\n      type: Number,\n      default: 5000\n    },\n    messages: {\n      type: Array,\n      default: function () {\n        return [];\n      },\n      validator: function (val) {\n        if (!val.every(function (m) {\n          return isObject(m) || isString(m);\n        })) {\n          isNotProd && warn('vk-notification -> each message is expected as Object or String');\n          return false;\n        }\n\n        return true;\n      }\n    },\n    status: ElementNotificationMessage.props.status\n  }),\n  computed: {\n    $messages: function $messages() {\n      var this$1 = this;\n      var messages = this.messages.map(function (val) {\n        var msg = isString(val) ? {\n          message: val\n        } : val;\n        return assign({\n          status: this$1.status,\n          timeout: this$1.timeout\n        }, msg);\n      });\n      messages = this.removeDuplicates(messages);\n      return messages;\n    }\n  },\n  methods: {\n    triggerRemove: function triggerRemove(msg) {\n      var this$1 = this;\n      this.closeQueue = this.closeQueue || [];\n      this.closeQueue.push(msg);\n      clearTimeout(this.timer);\n      this.timer = setTimeout(function () {\n        var queue = [].concat(this$1.closeQueue);\n        var messages = [].concat(this$1.$messages);\n        this$1.closeQueue = [];\n        queue.forEach(function (msg) {\n          var index = messages.indexOf(messages.filter(function (m) {\n            return m === msg;\n          })[0]);\n          messages.splice(index, 1);\n        });\n        this$1.$emit('update:messages', messages);\n      });\n    },\n    removeDuplicates: function removeDuplicates(values) {\n      var this$1 = this;\n      var messages = [];\n\n      var isDuplicated = function (msg) {\n        return messages.filter(function (m) {\n          return this$1.getMessageId(m) === this$1.getMessageId(msg);\n        }).length;\n      };\n\n      for (var i = 0; i < values.length; i++) {\n        if (isDuplicated(values[i])) {\n          isNotProd && tip('vk-notification -> duplicate messages are filtered out, consider adding a unique `key` to those.');\n          continue;\n        }\n\n        messages.push(values[i]);\n      }\n\n      return messages;\n    },\n    getMessageId: function getMessageId(msg) {\n      var validKeys = ['message', 'status', 'key', 'timeout'];\n      return Object.keys(msg).filter(function (k) {\n        return validKeys.filter(function (k) {\n          return k;\n        })[0];\n      }).map(function (k) {\n        return msg[k];\n      }).join(':');\n    }\n  },\n  render: function render(h) {\n    var this$1 = this;\n    var ref = this;\n    var position = ref.position;\n    var MessageSlot = get(this, '$scopedSlots.default', function (msg) {\n      return msg.message;\n    });\n    return h(ElementNotification, {\n      props: {\n        position: position\n      }\n    }, [h(MessageTransition, [this.$messages.map(function (msg, index) {\n      return h(ElementNotificationMessage, {\n        key: this$1.getMessageId(msg),\n        props: msg,\n        directives: [{\n          name: 'message-directive',\n          value: msg\n        }],\n        on: {\n          close: function () {\n            return this$1.triggerRemove(msg);\n          }\n        }\n      }, [MessageSlot(msg), h(ElementNotificationClose)]);\n    })])]);\n  }\n};\nvar SHOWN$1 = 'shown';\nvar HIDDEN$1 = 'hidden';\nvar TOGGLE$1 = 'update:show';\nvar KEYUP$1 = 'keyup';\nvar active$2;\nvar scrollbarWidth;\nvar win$3 = typeof window !== 'undefined' && window;\nvar body = typeof document !== 'undefined' && document.body;\nvar doc$4 = typeof document !== 'undefined' && document.documentElement;\nvar scroll;\n\nvar getScrollbarWidth = function () {\n  return width(win$3) - doc$4.offsetWidth;\n};\n\nvar events = {\n  beforeEnter: function (el) {\n    var ref = el.__vkOffcanvas;\n    var $refs = ref.$refs;\n    var $props = ref.$props;\n    scrollbarWidth = getScrollbarWidth();\n    scroll = scroll || {\n      x: win$3.pageXOffset,\n      y: win$3.pageYOffset\n    };\n    addClass(doc$4, 'uk-offcanvas-page');\n    addClass(body, 'uk-offcanvas-container');\n\n    if ($props.flipped) {\n      addClass($refs.bar, 'uk-offcanvas-bar-flip');\n      addClass($refs.content.parentNode, 'uk-offcanvas-flip');\n    }\n\n    if ($props.overlay) {\n      addClass(body, 'uk-offcanvas-overlay');\n    }\n\n    height(el);\n  },\n  afterEnter: function afterEnter(el) {\n    var ref = el.__vkOffcanvas;\n    var $refs = ref.$refs;\n    var $props = ref.$props;\n\n    if ($props.overlay) {\n      width($refs.content, width(win$3) - scrollbarWidth);\n      height($refs.content, height(win$3));\n\n      if (scroll) {\n        $refs.content.scrollTop = scroll.y;\n      }\n    }\n\n    active$2 = el.__vkOffcanvas;\n    active$2.$emit(SHOWN$1);\n  },\n  afterLeave: function afterLeave(el) {\n    var ref = el.__vkOffcanvas;\n    var $refs = ref.$refs;\n    var $props = ref.$props;\n\n    if (!$props.overlay) {\n      scroll = {\n        x: win$3.pageXOffset,\n        y: win$3.pageYOffset\n      };\n    } else if (!scroll) {\n      var ref$1 = $refs.content;\n      var x = ref$1.scrollLeft;\n      var y = ref$1.scrollTop;\n      scroll = {\n        x: x,\n        y: y\n      };\n    }\n\n    removeClass($refs.bar, 'uk-offcanvas-bar-flip');\n    removeClass($refs.content.parentNode, 'uk-offcanvas-flip');\n    removeClass(doc$4, 'uk-offcanvas-page');\n    removeClass(body, 'uk-offcanvas-container');\n    removeClass(body, 'uk-offcanvas-overlay');\n    body.scrollTop = scroll.y;\n    css(body, 'overflowY', '');\n    css(doc$4, 'overflowY', '');\n    width($refs.content, '');\n    height($refs.content, '');\n    win$3.scrollTo(scroll.x, scroll.y);\n    scroll = null;\n\n    if (active$2 === el.__vkOffcanvas) {\n      active$2 = null;\n    }\n\n    el.__vkOffcanvas.$emit(HIDDEN$1);\n  }\n};\non(doc$4, 'click', function (e) {\n  if (!active$2) {\n    return;\n  }\n\n  var $refs = active$2.$refs;\n  var $props = active$2.$props;\n  var clickedOut = !$refs.bar.contains(e.target);\n\n  if (clickedOut && !$props.stuck) {\n    active$2.$emit(TOGGLE$1, false);\n  }\n});\non(doc$4, 'keyup', function (e) {\n  active$2 && active$2.$emit(KEYUP$1, e);\n});\nvar ElementOffcanvas = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('div', mergeData(data, {\n      class: 'uk-offcanvas',\n      style: {\n        display: 'block'\n      }\n    }), children);\n  }\n};\nvar ElementOffcanvasContent = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('div', mergeData(data, {\n      class: 'uk-offcanvas-content'\n    }), children);\n  }\n};\nvar ElementOffcanvasBar = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    return h('div', mergeData(data, {\n      class: 'uk-offcanvas-bar'\n    }), children);\n  }\n};\nvar ElementOffcanvasClose = {\n  functional: true,\n  props: {\n    large: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var large = props.large;\n    var def = {\n      class: ['uk-offcanvas-close uk-close uk-icon', {\n        'uk-close-large': large\n      }],\n      attrs: {\n        type: 'button'\n      }\n    };\n    return h('button', mergeData(data, def), [h(large ? IconCloseLarge : IconClose)]);\n  }\n};\nvar TransitionNone = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    var def = {\n      props: {\n        css: false\n      },\n      on: {\n        enter: function (el, done) {\n          return done();\n        },\n        leave: function (el, done) {\n          return done();\n        },\n        beforeEnter: function beforeEnter(el) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          var $props = ref.$props;\n          events.beforeEnter(el);\n          css(doc$4, 'overflowY', scrollbarWidth && $props.overlay ? 'scroll' : '');\n          addClass(el, 'uk-open');\n          addClass($refs.bar, 'uk-offcanvas-none');\n        },\n        afterEnter: function afterEnter(el) {\n          events.afterEnter(el);\n        },\n        afterLeave: function afterLeave(el) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          removeClass(el, 'uk-open');\n          removeClass($refs.bar, 'uk-offcanvas-none');\n          events.afterLeave(el);\n        }\n      }\n    };\n    return h('transition', mergeData(def, data), children);\n  }\n};\nvar TransitionPush = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    var def = {\n      props: {\n        css: false\n      },\n      on: {\n        beforeEnter: function beforeEnter(el) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          var $props = ref.$props;\n          events.beforeEnter(el);\n          css(doc$4, 'overflowY', $props.flipped && scrollbarWidth && $props.overlay ? 'scroll' : '');\n          addClass($refs.bar, 'uk-offcanvas-bar-animation uk-offcanvas-push');\n        },\n        enter: function enter(el, done) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          height(el);\n          addClass(el, 'uk-open');\n          addClass($refs.content, 'uk-offcanvas-content-animation');\n          once(el, 'transitionend', done, false, function (e) {\n            return e.target === $refs.bar;\n          });\n        },\n        afterEnter: function afterEnter(el) {\n          events.afterEnter(el);\n        },\n        beforeLeave: function beforeLeave(el) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          removeClass(el, 'uk-open');\n          removeClass($refs.content, 'uk-offcanvas-content-animation');\n        },\n        leave: function leave(el, done) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          var bar = $refs.bar;\n          once(el, 'transitionend', done, false, function (e) {\n            return e.target === bar;\n          });\n        },\n        afterLeave: function afterLeave(el) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          removeClass($refs.bar, 'uk-offcanvas-bar-animation uk-offcanvas-push');\n          events.afterLeave(el);\n        }\n      }\n    };\n    return h('transition', mergeData(def, data), children);\n  }\n};\nvar TransitionSlide = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    var def = {\n      props: {\n        css: false\n      },\n      on: {\n        beforeEnter: function beforeEnter(el) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          var $props = ref.$props;\n          events.beforeEnter(el);\n          css(doc$4, 'overflowY', scrollbarWidth && $props.overlay ? 'scroll' : '');\n          addClass($refs.bar, 'uk-offcanvas-bar-animation uk-offcanvas-slide');\n        },\n        enter: function enter(el, done) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          height(el);\n          addClass(el, 'uk-open');\n          once(el, 'transitionend', done, false, function (e) {\n            return e.target === $refs.bar;\n          });\n        },\n        afterEnter: function afterEnter(el) {\n          events.afterEnter(el);\n        },\n        beforeLeave: function beforeLeave(el) {\n          removeClass(el, 'uk-open');\n        },\n        leave: function leave(el, done) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          once(el, 'transitionend', done, false, function (e) {\n            return e.target === $refs.bar;\n          });\n        },\n        afterLeave: function afterLeave(el) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          removeClass($refs.bar, 'uk-offcanvas-bar-animation uk-offcanvas-slide');\n          events.afterLeave(el);\n        }\n      }\n    };\n    return h('transition', mergeData(def, data), children);\n  }\n};\nvar TransitionReveal = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    var def = {\n      props: {\n        css: false\n      },\n      on: {\n        beforeEnter: function beforeEnter(el) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          var $props = ref.$props;\n          events.beforeEnter(el);\n          width($refs.content, width(win$3) - scrollbarWidth);\n          css(doc$4, 'overflowY', $props.flipped && scrollbarWidth && $props.overlay ? 'scroll' : '');\n        },\n        enter: function enter(el, done) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          height(el);\n          addClass(el, 'uk-open');\n          addClass($refs.content, 'uk-offcanvas-content-animation');\n          once(el, 'transitionend', done, false, function (e) {\n            return e.target === $refs.reveal;\n          });\n        },\n        afterEnter: function afterEnter(el) {\n          events.afterEnter(el);\n        },\n        beforeLeave: function beforeLeave(el) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          removeClass(el, 'uk-open');\n          removeClass($refs.content, 'uk-offcanvas-content-animation');\n        },\n        leave: function leave(el, done) {\n          var ref = el.__vkOffcanvas;\n          var $refs = ref.$refs;\n          once(el, 'transitionend', done, false, function (e) {\n            return e.target === $refs.reveal;\n          });\n        },\n        afterLeave: function afterLeave(el) {\n          events.afterLeave(el);\n        }\n      }\n    };\n    return h('transition', mergeData(def, data), children);\n  }\n};\nvar Transitions = {\n  none: TransitionNone,\n  push: TransitionPush,\n  slide: TransitionSlide,\n  reveal: TransitionReveal\n};\nvar offcanvas = {\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    },\n    flipped: {\n      type: Boolean,\n      default: false\n    },\n    stuck: {\n      type: Boolean,\n      default: false\n    },\n    overlay: {\n      type: Boolean,\n      default: false\n    },\n    mode: {\n      type: String,\n      default: 'slide',\n      validator: function (val) {\n        return /^(none|slide|push|reveal)$/.test(val);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.$refs.content = query('.uk-offcanvas-content');\n    this.$refs.bar = this.$el.querySelector('.uk-offcanvas-bar');\n\n    if (false) {}\n\n    this.$el.__vkOffcanvas = this;\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.show) {\n      events.afterLeave(this.$el);\n    }\n  },\n  render: function render(h) {\n    var nodes = this.$slots.default || [];\n    var customBar = findBar(nodes);\n    var bar = customBar || h(ElementOffcanvasBar, nodes);\n    var content = h(ElementOffcanvas, {\n      key: this.mode,\n      class: {\n        'uk-offcanvas-overlay': this.overlay\n      },\n      directives: [{\n        name: 'show',\n        value: this.show\n      }]\n    }, [this.mode === 'reveal' ? h('div', {\n      class: 'uk-offcanvas-reveal',\n      ref: 'reveal'\n    }, [bar]) : bar]);\n    return h(Transitions[this.mode], [content]);\n  }\n};\n\nfunction findBar(nodes) {\n  return nodes.filter(function (n) {\n    return n.tag && n.data && /offcanvas-bar/.test(getNodeClass(n));\n  })[0];\n}\n\nfunction getNodeClass(node) {\n  return (node.data.class || []).concat([node.data.staticClass]).join(' ');\n}\n\nvar offcanvasContent = {\n  name: 'VkOffcanvasContent',\n  functional: true,\n  render: ElementOffcanvasContent.render\n};\nvar offcanvas_Bar = {\n  name: 'VkOffcanvasBar',\n  functional: true,\n  render: ElementOffcanvasBar.render\n};\nvar offcanvas_Close = {\n  name: 'VkOffcanvasClose',\n  functional: true,\n  props: ElementOffcanvasClose.props,\n  render: ElementOffcanvasClose.render\n};\nvar ElementPagination = {\n  functional: true,\n  props: {\n    align: {\n      type: String,\n      default: 'left',\n      validator: function (val) {\n        return /^(left|center|right)$/.test(val);\n      }\n    }\n  },\n  render: function render(h, ref) {\n    var obj;\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var align = props.align;\n    return h('ul', mergeData(data, {\n      class: ['uk-pagination', (obj = {}, obj[\"uk-flex-\" + align] = align !== 'left', obj)]\n    }), children);\n  }\n};\nvar ElementPaginationPage = {\n  functional: true,\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: [String, Number],\n      default: ''\n    }\n  },\n  render: function (h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var active = props.active;\n    var title = props.title;\n    return h('li', {\n      class: {\n        'uk-active': active\n      }\n    }, [active ? h('span', title) : h('a', {\n      on: data.on\n    }, title)]);\n  }\n};\nvar Icon = {\n  functional: true,\n  render: function (h, ctx) {\n    var props = ctx.props;\n    var ratio = props.ratio || 1;\n    var width = props.width || 7;\n    var height = props.height || 12;\n    var viewBox = props.viewBox || '0 0 7 12';\n\n    if (ratio !== 1) {\n      width = width * ratio;\n      height = height * ratio;\n    }\n\n    return h('svg', {\n      attrs: {\n        version: '1.1',\n        meta: 'icon-pagination-next ratio-' + ratio,\n        width: width,\n        height: height,\n        viewBox: viewBox\n      },\n      domProps: {\n        innerHTML: '<path fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" d=\"M1 1l5 5-5 5\"/>'\n      }\n    });\n  }\n};\nvar ElementPaginationPageNext = {\n  functional: true,\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    expanded: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var listeners = ref.listeners;\n    var title = props.title;\n    var expanded = props.expanded;\n    var disabled = props.disabled;\n    delete data.on;\n    return h('li', mergeData(data, {\n      class: {\n        'uk-disabled': disabled,\n        'uk-margin-auto-left': expanded\n      }\n    }), [h('a', {\n      on: listeners\n    }, [title, h(ElementIcon, {\n      class: ['uk-pagination-prev', {\n        'uk-margin-small-left': title\n      }]\n    }, [h(Icon)])])]);\n  }\n};\nvar Icon$1 = {\n  functional: true,\n  render: function (h, ctx) {\n    var props = ctx.props;\n    var ratio = props.ratio || 1;\n    var width = props.width || 7;\n    var height = props.height || 12;\n    var viewBox = props.viewBox || '0 0 7 12';\n\n    if (ratio !== 1) {\n      width = width * ratio;\n      height = height * ratio;\n    }\n\n    return h('svg', {\n      attrs: {\n        version: '1.1',\n        meta: 'icon-pagination-prev ratio-' + ratio,\n        width: width,\n        height: height,\n        viewBox: viewBox\n      },\n      domProps: {\n        innerHTML: '<path fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" d=\"M6 1L1 6l5 5\"/>'\n      }\n    });\n  }\n};\nvar ElementPaginationPagePrev = {\n  functional: true,\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    expanded: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var listeners = ref.listeners;\n    var title = props.title;\n    var expanded = props.expanded;\n    var disabled = props.disabled;\n    delete data.on;\n    return h('li', mergeData(data, {\n      class: {\n        'uk-disabled': disabled,\n        'uk-margin-auto-right': expanded\n      }\n    }), [h('a', {\n      on: listeners\n    }, [h(ElementIcon, {\n      class: ['uk-pagination-prev', {\n        'uk-margin-small-right': title\n      }]\n    }, [h(Icon$1)]), title])]);\n  }\n};\n\nfunction Matrix(ref) {\n  if (ref === void 0) ref = {};\n  var total = ref.total;\n  if (total === void 0) total = 200;\n  var page = ref.page;\n  if (page === void 0) page = 1;\n  var perPage = ref.perPage;\n  if (perPage === void 0) perPage = 10;\n  var range$$1 = ref.range;\n  if (range$$1 === void 0) range$$1 = 3;\n  var matrix = [];\n  var totalPages = Math.ceil(total / perPage);\n\n  if (totalPages < 2) {\n    return [1];\n  }\n\n  var mainPages = getMainPages({\n    page: page,\n    range: range$$1,\n    totalPages: totalPages\n  });\n  var first = mainPages[0];\n  var last = mainPages[mainPages.length - 1];\n  var prePages = range(1, first <= 3 ? first : 2);\n  var postPages = range(last >= totalPages - 2 ? last + 1 : totalPages, totalPages + 1);\n  var nextPage = 1;\n  [].concat(prePages, mainPages, postPages).forEach(function (p) {\n    if (p === nextPage) {\n      matrix.push(p);\n      nextPage++;\n    } else {\n      matrix.push('...');\n      matrix.push(p);\n      nextPage = p + 1;\n    }\n  });\n  return matrix;\n}\n\nvar getMainPages = function (ref) {\n  var page = ref.page;\n  var range$$1 = ref.range;\n  var totalPages = ref.totalPages;\n  var start = page - range$$1;\n  var end = page + range$$1;\n\n  if (end > totalPages) {\n    end = totalPages;\n    start = totalPages - range$$1 * 2;\n    start = start < 1 ? 1 : start;\n  }\n\n  if (start <= 1) {\n    start = 1;\n    end = Math.min(range$$1 * 2 + 1, totalPages);\n  }\n\n  return range(start, end + 1);\n};\n\nvar pagination = {\n  name: 'Pagination',\n  directives: {\n    VkMargin: VkMargin\n  },\n  props: assign({}, ElementPagination.props, {\n    page: {\n      type: Number,\n      default: 1\n    },\n    perPage: {\n      type: Number,\n      required: true\n    },\n    total: {\n      type: Number,\n      required: true\n    },\n    range: {\n      type: Number,\n      default: 3\n    }\n  }),\n  computed: {\n    prevPage: function prevPage() {\n      return this.page - 1;\n    },\n    nextPage: function nextPage() {\n      return this.page + 1;\n    },\n    pages: function pages() {\n      return Matrix({\n        total: this.total,\n        page: this.page,\n        perPage: this.perPage\n      });\n    },\n    lastPage: function lastPage() {\n      return this.pages[this.pages.length - 1];\n    }\n  },\n  methods: {\n    update: function update(page) {\n      this.$emit('update:page', page);\n    }\n  },\n  render: function render(h) {\n    var this$1 = this;\n    var nodes = (this.$slots.default || []).filter(function (node) {\n      return node.tag;\n    });\n    return h(ElementPagination, {\n      props: this.$props,\n      directives: [{\n        name: 'vk-margin'\n      }]\n    }, nodes.map(function (node) {\n      if (!node.fnOptions) {\n         false && false;\n        return;\n      }\n\n      return node.data.rerender ? h(node.fnOptions, mergeData(node.data, {\n        rerendering: true\n      })) : node;\n    }));\n  }\n};\nvar pagination_Pages = {\n  functional: true,\n  render: function (h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var parent = ref.parent;\n\n    if (!data.rerendering) {\n      return h('li', {\n        rerender: true\n      });\n    }\n\n    var currentPage = parent.page;\n    return parent.pages.map(function (page) {\n      var isPage = isNumber(page);\n      return isPage ? h(ElementPaginationPage, {\n        props: {\n          title: page,\n          active: currentPage === page\n        },\n        on: {\n          click: function (e) {\n            return parent.$emit('update:page', page);\n          }\n        }\n      }) : h('li', [h('span', '...')]);\n    });\n  }\n};\nvar pagination_PageFirst = {\n  functional: true,\n  props: ElementPaginationPagePrev.props,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var parent = ref.parent;\n    var title = props.title;\n    var expanded = props.expanded;\n\n    if (!data.rerendering) {\n      return h('li', mergeData(data, {\n        rerender: true,\n        props: props\n      }));\n    }\n\n    return h(ElementPaginationPagePrev, {\n      props: {\n        title: title,\n        expanded: expanded,\n        disabled: parent.prevPage < 1\n      },\n      on: {\n        click: function (e) {\n          return parent.update(1);\n        }\n      }\n    });\n  }\n};\nvar pagination_PagePrev = {\n  functional: true,\n  props: ElementPaginationPagePrev.props,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var parent = ref.parent;\n    var title = props.title;\n    var expanded = props.expanded;\n\n    if (!data.rerendering) {\n      return h('li', mergeData(data, {\n        rerender: true,\n        props: props\n      }));\n    }\n\n    return h(ElementPaginationPagePrev, {\n      props: {\n        title: title,\n        expanded: expanded,\n        disabled: parent.prevPage < 1\n      },\n      on: {\n        click: function (e) {\n          return parent.update(parent.prevPage);\n        }\n      }\n    });\n  }\n};\nvar pagination_PageNext = {\n  functional: true,\n  props: ElementPaginationPageNext.props,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var parent = ref.parent;\n    var title = props.title;\n    var expanded = props.expanded;\n\n    if (!data.rerendering) {\n      return h('li', mergeData(data, {\n        rerender: true,\n        props: props\n      }));\n    }\n\n    return h(ElementPaginationPageNext, {\n      props: {\n        title: title,\n        expanded: expanded,\n        disabled: parent.nextPage > parent.lastPage\n      },\n      on: {\n        click: function (e) {\n          return parent.update(parent.nextPage);\n        }\n      }\n    });\n  }\n};\nvar pagination_PageLast = {\n  functional: true,\n  props: ElementPaginationPageNext.props,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var parent = ref.parent;\n    var title = props.title;\n    var expanded = props.expanded;\n\n    if (!data.rerendering) {\n      return h('li', mergeData(data, {\n        rerender: true,\n        props: props\n      }));\n    }\n\n    return h(ElementPaginationPageNext, {\n      props: {\n        title: title,\n        expanded: expanded,\n        disabled: parent.nextPage > parent.lastPage\n      },\n      on: {\n        click: function (e) {\n          return parent.update(parent.lastPage);\n        }\n      }\n    });\n  }\n};\nvar fastdom = {\n  reads: [],\n  writes: [],\n  read: function read(task) {\n    this.reads.push(task);\n    scheduleFlush();\n    return task;\n  },\n  write: function write(task) {\n    this.writes.push(task);\n    scheduleFlush();\n    return task;\n  },\n  clear: function clear(task) {\n    return remove$1(this.reads, task) || remove$1(this.writes, task);\n  },\n  flush: function flush() {\n    runTasks(this.reads);\n    runTasks(this.writes.splice(0, this.writes.length));\n    this.scheduled = false;\n\n    if (this.reads.length || this.writes.length) {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction scheduleFlush() {\n  if (!fastdom.scheduled) {\n    fastdom.scheduled = true;\n    requestAnimationFrame(fastdom.flush.bind(fastdom));\n  }\n}\n\nfunction runTasks(tasks) {\n  var task;\n\n  while (task = tasks.shift()) {\n    task();\n  }\n}\n\nfunction remove$1(array, item) {\n  var index = array.indexOf(item);\n  return !!~index && !!array.splice(index, 1);\n}\n\nvar DATA = '_vk_fastdom_data';\nvar FRAMES = '_vk_fastdom_frames';\nvar scroll$1 = 0;\nvar instances = [];\n\nif (typeof window !== 'undefined') {\n  on(window, 'load resize', function () {\n    return instances.forEach(function (i) {\n      return i.fastdomUpdate();\n    });\n  });\n  on(window, 'scroll', function (e) {\n    e.dir = scroll$1 <= window.pageYOffset ? 'down' : 'up';\n    e.scrollY = scroll$1 = window.pageYOffset;\n    instances.forEach(function (inst) {\n      return inst.fastdomUpdate(e);\n    });\n  });\n}\n\nvar MixinFastdom = {\n  methods: {\n    fastdomUpdate: function fastdomUpdate(e, parents) {\n      if (parents === void 0) parents = false;\n      e = createEvent(e || 'update');\n      var instance = this;\n\n      if (parents) {\n        do {\n          if (instance._fastdom_ready) {\n            instance._fastdomUpdate(e);\n          }\n\n          instance = instance.$parent();\n        } while (instance);\n      } else {\n        apply$2(instance, function (instance) {\n          if (instance._fastdom_ready) {\n            instance._fastdomUpdate(e);\n          }\n        });\n      }\n    },\n    _fastdomUpdate: function _fastdomUpdate(e) {\n      var this$1 = this;\n      e = createEvent(e || 'update');\n      var type = e.type;\n      var updates = this.$options.fastdom;\n      var ref = this[FRAMES];\n      var reads = ref.reads;\n      var writes = ref.writes;\n\n      if (!updates) {\n        return;\n      }\n\n      updates.forEach(function (ref, i) {\n        var read = ref.read;\n        var write = ref.write;\n        var events = ref.events;\n\n        if (type !== 'update' && !includes(events, type)) {\n          return;\n        }\n\n        if (read && !includes(fastdom.reads, reads[i])) {\n          reads[i] = fastdom.read(function () {\n            var result = read.call(this$1, this$1[DATA], e);\n\n            if (result === false && write) {\n              fastdom.clear(writes[i]);\n              delete writes[i];\n            } else if (isPlainObject(result)) {\n              assign(this$1[DATA], result);\n            }\n\n            delete reads[i];\n          });\n        }\n\n        if (write && !includes(fastdom.writes, writes[i])) {\n          writes[i] = fastdom.write(function () {\n            write.call(this$1, this$1[DATA], e);\n            delete writes[i];\n          });\n        }\n      });\n    }\n  },\n  created: function created() {\n    this[DATA] = {};\n    this[FRAMES] = {\n      reads: {},\n      writes: {}\n    };\n    instances.push(this);\n  },\n  mounted: function mounted() {\n    var this$1 = this;\n    this._fastdom_ready || ready(function () {\n      var hook = this$1.$options.domReady;\n      hook && hook.call(this$1);\n      this$1._fastdom_ready = true;\n\n      this$1._fastdomUpdate();\n    });\n\n    this._fastdomUpdate();\n  },\n  beforeDestroy: function beforeDestroy() {\n    var this$1 = this;\n    var index$$1 = instances.indexOf(instances.filter(function (inst) {\n      return inst === this$1;\n    })[0]);\n    instances.splice(index$$1, 1);\n  }\n};\nvar scrollspy = {\n  name: 'VkScrollspy',\n  abstract: true,\n  mixins: [EventsMixin, MixinFastdom],\n  props: {\n    cls: {\n      type: Array,\n      default: function () {\n        return [];\n      }\n    },\n    target: {\n      default: false\n    },\n    hidden: {\n      type: Boolean,\n      default: true\n    },\n    offsetTop: {\n      type: Number,\n      default: 0\n    },\n    offsetLeft: {\n      type: Number,\n      default: 0\n    },\n    repeat: {\n      type: Boolean,\n      default: false\n    },\n    delay: {\n      type: Number,\n      default: 0\n    }\n  },\n  classMapping: {\n    inViewClass: 'uk-scrollspy-inview'\n  },\n  computed: {\n    elements: function elements() {\n      return this.target ? $$(this.target, this.$el) : [this.$el];\n    }\n  },\n  fastdom: [{\n    write: function write() {\n      var ref = this.$options.classMapping;\n      var inViewClass = ref.inViewClass;\n\n      if (this.hidden) {\n        css(filter(this.elements, \":not(.\" + inViewClass + \")\"), 'visibility', 'hidden');\n      }\n    }\n  }, {\n    read: function read(els) {\n      var this$1 = this;\n      this.elements.forEach(function (el, i) {\n        var elData = els[i];\n\n        if (!elData || elData.el !== el) {\n          var cls = data(el, 'vk-scrollspy-class');\n          elData = {\n            el: el,\n            toggles: cls && cls.split(',') || this$1.cls\n          };\n        }\n\n        elData.show = isInView(el, this$1.offsetTop, this$1.offsetLeft);\n        els[i] = elData;\n      });\n    },\n    write: function write(els) {\n      var this$1 = this;\n      var ref = this.$options.classMapping;\n      var inViewClass = ref.inViewClass;\n      var index = this.elements.length === 1 ? 1 : 0;\n      this.elements.forEach(function (el, i) {\n        var elData = els[i];\n        var cls = elData.toggles[i] || elData.toggles[0];\n\n        if (elData.show && !elData.inview && !elData.timer) {\n          var show = function () {\n            css(el, 'visibility', '');\n            addClass(el, inViewClass);\n            toggleClass(el, cls);\n            trigger(el, 'inview');\n            this$1.fastdomUpdate();\n            elData.inview = true;\n            delete elData.timer;\n          };\n\n          if (this$1.delay && index) {\n            elData.timer = setTimeout(show, this$1.delay * index);\n          } else {\n            show();\n          }\n\n          index++;\n        } else if (!elData.show && elData.inview && this$1.repeat) {\n          if (elData.timer) {\n            clearTimeout(elData.timer);\n            delete elData.timer;\n          }\n\n          css(el, 'visibility', this$1.hidden ? 'hidden' : '');\n          removeClass(el, inViewClass);\n          toggleClass(el, cls);\n          trigger(el, 'outview');\n          this$1.fastdomUpdate();\n          elData.inview = false;\n        }\n      });\n    },\n    events: ['scroll', 'load', 'resize']\n  }],\n  render: function render(h) {\n    var children = this.$slots.default;\n\n    if (!children) {\n      return;\n    }\n\n    children = filterOutTextNodes(children);\n\n    if (!children.length) {\n      return;\n    }\n\n    if (false) {}\n\n    return children[0];\n  }\n};\nvar scrollspyNav = {\n  name: 'VkScrollspyNav',\n  abstract: true,\n  mixins: [EventsMixin, MixinFastdom],\n  props: {\n    cls: {\n      type: String,\n      default: 'uk-active'\n    },\n    closest: {\n      type: String,\n      default: ''\n    },\n    overflow: {\n      type: Boolean,\n      default: true\n    },\n    offset: {\n      type: Number,\n      default: 0\n    }\n  },\n  methods: {\n    setComputed: function setComputed() {\n      this.links = $$('a[href^=\"#\"]', this.$el).filter(function (el) {\n        return el.hash;\n      });\n      this.elements = this.closest ? closest(this.links, this.closest) : this.links;\n      this.targets = $$(this.links.map(function (el) {\n        return el.hash;\n      }).join(','));\n    }\n  },\n  fastdom: [{\n    read: function read(data) {\n      var this$1 = this;\n      var scroll = window.pageYOffset + this.offset + 1;\n      var max = height(document) - height(window) + this.offset;\n      data.active = false;\n      this.targets.every(function (el, i) {\n        var ref = offset(el);\n        var top = ref.top;\n        var last = i + 1 === this$1.targets.length;\n\n        if (!this$1.overflow && (i === 0 && top > scroll || last && top + el.offsetTop < scroll)) {\n          return false;\n        }\n\n        if (!last && offset(this$1.targets[i + 1]).top <= scroll) {\n          return true;\n        }\n\n        if (scroll >= max) {\n          for (var j = this$1.targets.length - 1; j > i; j--) {\n            if (isInView(this$1.targets[j])) {\n              el = this$1.targets[j];\n              break;\n            }\n          }\n        }\n\n        return !(data.active = $(filter(this$1.links, \"[href=\\\"#\" + el.id + \"\\\"]\")));\n      });\n    },\n    write: function write(ref) {\n      var active = ref.active;\n      this.links.forEach(function (el) {\n        return el.blur();\n      });\n      removeClass(this.elements, this.cls);\n\n      if (active) {\n        trigger(this.$el, 'active', [active, addClass(this.closest ? closest(active, this.closest) : active, this.cls)]);\n      }\n    },\n    events: ['scroll', 'load', 'resize']\n  }],\n  mounted: function mounted() {\n    this.setComputed();\n  },\n  updated: function updated() {\n    var this$1 = this;\n    this.$nextTick(function () {\n      this$1.setComputed();\n      this$1.fastdomUpdate();\n    });\n  },\n  render: function render(h) {\n    var children = this.$slots.default;\n\n    if (!children) {\n      return;\n    }\n\n    children = filterOutTextNodes(children);\n\n    if (!children.length) {\n      return;\n    }\n\n    if (false) {}\n\n    return children[0];\n  }\n};\nvar ElementSkeleton = {\n  functional: true,\n  props: {\n    animated: {\n      type: Boolean,\n      default: false\n    },\n    width: {\n      type: [Boolean, Number],\n      default: false\n    },\n    height: {\n      type: [Boolean, Number],\n      default: false\n    }\n  },\n  render: function (h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    var animated = props.animated;\n    var width = props.width;\n    var height = props.height;\n    return h('div', mergeData({\n      class: {\n        'vk-skeleton--animated': animated\n      },\n      style: {\n        width: width + \"px\",\n        height: height + \"px\"\n      }\n    }, data), [h('div', {\n      class: 'vk-skeleton-content'\n    })]);\n  }\n};\nvar ElementSkeletonImage = {\n  functional: true,\n  props: assign({}, ElementSkeleton.props, {\n    width: {\n      type: Number,\n      default: 150\n    },\n    height: {\n      type: Number,\n      default: 120\n    }\n  }),\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    return h(ElementSkeleton, mergeData(data, {\n      class: 'vk-skeleton-image',\n      props: props\n    }));\n  }\n};\nvar ElementSkeletonText = {\n  functional: true,\n  props: ElementSkeleton.props,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    return h(ElementSkeleton, mergeData(data, {\n      class: 'vk-skeleton-text',\n      props: props\n    }));\n  }\n};\nvar ElementSkeletonTitle = {\n  functional: true,\n  props: ElementSkeleton.props,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    return h(ElementSkeleton, mergeData(data, {\n      class: 'vk-skeleton-title',\n      props: props\n    }));\n  }\n};\nvar skeletonImage = {\n  name: 'VkSkeletonImage',\n  functional: true,\n  props: ElementSkeletonImage.props,\n  render: ElementSkeletonImage.render\n};\nvar skeletonText = {\n  name: 'VkSkeletonText',\n  functional: true,\n  props: ElementSkeletonText.props,\n  render: ElementSkeletonText.render\n};\nvar skeletonTitle = {\n  name: 'VkSkeletonTitle',\n  functional: true,\n  props: ElementSkeletonTitle.props,\n  render: ElementSkeletonTitle.render\n};\nvar Icon$2 = {\n  functional: true,\n  render: function (h, ctx) {\n    var props = ctx.props;\n    var ratio = props.ratio || 1;\n    var width = props.width || 30;\n    var height = props.height || 30;\n    var viewBox = props.viewBox || '0 0 30 30';\n\n    if (ratio !== 1) {\n      width = width * ratio;\n      height = height * ratio;\n    }\n\n    return h('svg', {\n      attrs: {\n        version: '1.1',\n        width: width,\n        height: height,\n        viewBox: viewBox\n      },\n      domProps: {\n        innerHTML: '<circle fill=\"none\" stroke=\"#000\" cx=\"15\" cy=\"15\" r=\"14\"/>'\n      }\n    });\n  }\n};\nvar ElementSpinner = {\n  functional: true,\n  props: {\n    ratio: {\n      type: [String, Number]\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    return h('div', mergeData(data, {\n      class: ['uk-icon', 'uk-spinner']\n    }), [h(Icon$2, {\n      props: props\n    })]);\n  }\n};\nvar spinner = {\n  name: 'VkSpinner',\n  functional: true,\n  props: ElementSpinner.props,\n  render: ElementSpinner.render\n};\nvar ACTIVE = 'active';\nvar INACTIVE = 'inactive';\nvar sticky = {\n  name: 'VkSticky',\n  abstract: true,\n  mixins: [EventsMixin, MixinFastdom],\n  props: {\n    top: {\n      type: [Number, String],\n      default: 0\n    },\n    bottom: {\n      type: [Boolean, String],\n      default: false\n    },\n    offset: {\n      type: Number,\n      default: 0\n    },\n    widthElement: {\n      default: false\n    },\n    animation: {\n      type: String,\n      default: ''\n    },\n    showOnUp: {\n      type: Boolean,\n      default: false\n    },\n    media: {\n      type: [Number, String]\n    },\n    selTarget: {\n      type: String\n    },\n    target: {\n      type: [Number, Boolean],\n      default: false\n    }\n  },\n  classMapping: {\n    clsFixed: 'uk-sticky-fixed',\n    clsBelow: 'uk-sticky-below',\n    clsActive: 'uk-active',\n    clsInactive: ''\n  },\n  data: function () {\n    return {\n      isActive: false\n    };\n  },\n  computed: {\n    outerHeight: function outerHeight() {\n      return (this.isActive ? this.$refs.placeholder : this.$el).offsetHeight;\n    },\n    $selTarget: function $selTarget() {\n      return this.selTarget ? $(this.selTarget, this.$el) : this.$el;\n    }\n  },\n  fastdom: [{\n    write: function write() {\n      var ref = this.$refs;\n      var placeholder = ref.placeholder;\n      var widthElement = ref.widthElement;\n      var outerHeight = (this.isActive ? placeholder : this.$el).offsetHeight;\n      css(placeholder, assign({\n        height: css(this.$el, 'position') !== 'absolute' ? outerHeight : ''\n      }, css(this.$el, ['marginTop', 'marginBottom', 'marginLeft', 'marginRight'])));\n\n      if (!within(placeholder, document)) {\n        after(this.$el, placeholder);\n        attr(placeholder, 'hidden', '');\n      }\n\n      attr(widthElement, 'hidden', null);\n      this.width = widthElement.offsetWidth;\n      attr(widthElement, 'hidden', this.isActive ? null : '');\n      this.topOffset = offset(this.isActive ? placeholder : this.$el).top;\n      this.bottomOffset = this.topOffset + outerHeight;\n      var bottom = parseProp('bottom', this);\n      this.stickAt = Math.max(toFloat(parseProp('top', this)), this.topOffset) - this.offset;\n      this.stickUntil = bottom && bottom - outerHeight;\n      this.inactive = this.media && !window.matchMedia(toMedia(this.media)).matches;\n\n      if (this.isActive) {\n        this.update();\n      }\n    },\n    events: ['load', 'resize']\n  }, {\n    read: function read(_, ref) {\n      var scrollY = ref.scrollY;\n      if (scrollY === void 0) scrollY = window.pageYOffset;\n      this.scroll = scrollY;\n      return {\n        scroll: scrollY,\n        visible: isVisible(this.$el)\n      };\n    },\n    write: function write(ref, ref$1) {\n      var this$1 = this;\n      var visible = ref.visible;\n      var scroll = ref.scroll;\n      if (ref$1 === void 0) ref$1 = {};\n      var dir = ref$1.dir;\n\n      if (scroll < 0 || !visible || this.disabled || this.showOnUp && !dir) {\n        return;\n      }\n\n      if (this.inactive || scroll < this.stickAt || this.showOnUp && (scroll <= this.stickAt || dir === 'down' || dir === 'up' && !this.isActive && scroll <= this.bottomOffset)) {\n        if (!this.isActive) {\n          return;\n        }\n\n        this.isActive = false;\n\n        if (this.animation && scroll > this.topOffset) {\n          Animation.cancel(this.$el);\n          Animation.out(this.$el, \"uk-animation-\" + this.animation).then(function () {\n            return this$1.hide();\n          }, noop);\n        } else {\n          this.hide();\n        }\n      } else if (this.isActive) {\n        this.update();\n      } else if (this.animation) {\n        Animation.cancel(this.$el);\n        this.show();\n        Animation.in(this.$el, \"uk-animation-\" + this.animation).catch(noop);\n      } else {\n        this.show();\n      }\n    },\n    events: ['scroll']\n  }],\n  methods: {\n    show: function show() {\n      this.isActive = true;\n      this.update();\n      attr(this.$refs.placeholder, 'hidden', null);\n    },\n    hide: function hide() {\n      var ref = this.$options.classMapping;\n      var clsFixed = ref.clsFixed;\n      var clsBelow = ref.clsBelow;\n      var clsActive = ref.clsActive;\n\n      if (!this.isActive || hasClass(this.$selTarget, clsActive)) {\n        this.$emit(INACTIVE);\n      }\n\n      removeClass(this.$el, clsFixed, clsBelow);\n      css(this.$el, {\n        position: '',\n        top: '',\n        width: ''\n      });\n      attr(this.$refs.placeholder, 'hidden', '');\n    },\n    update: function update() {\n      var ref = this.$options.classMapping;\n      var clsFixed = ref.clsFixed;\n      var clsBelow = ref.clsBelow;\n      var clsActive = ref.clsActive;\n      var active = this.stickAt !== 0 || this.scroll > this.stickAt;\n      var top = Math.max(0, this.offset);\n\n      if (this.stickUntil && this.scroll > this.stickUntil - this.offset) {\n        top = this.stickUntil - this.scroll;\n      }\n\n      css(this.$el, {\n        position: 'fixed',\n        top: top + \"px\",\n        width: this.width\n      });\n\n      if (hasClass(this.$selTarget, clsActive)) {\n        if (!active) {\n          this.$emit(INACTIVE);\n        }\n      } else if (active) {\n        this.$emit(ACTIVE);\n      }\n\n      toggleClass(this.$el, clsBelow, this.scroll > this.bottomOffset);\n      addClass(this.$el, clsFixed);\n    }\n  },\n  created: function created() {\n    var this$1 = this;\n    var ref = this.$options.classMapping;\n    var clsActive = ref.clsActive;\n    var clsInactive = ref.clsInactive;\n    this.$on(ACTIVE, function () {\n      return replaceClass(this$1.$selTarget, clsInactive, clsActive);\n    });\n    this.$on(INACTIVE, function () {\n      return replaceClass(this$1.$selTarget, clsActive, clsInactive);\n    });\n  },\n  mounted: function mounted() {\n    addClass(this.$el, 'uk-sticky');\n    this.$refs.placeholder = $('<div class=\"uk-sticky-placeholder\"></div>');\n    this.$refs.widthElement = this.widthElement && query(this.widthElement) || this.$refs.placeholder;\n\n    if (!this.isActive) {\n      this.hide();\n    }\n  },\n  domReady: function domReady() {\n    var this$1 = this;\n\n    if (!(this.target && location.hash && window.pageYOffset > 0)) {\n      return;\n    }\n\n    var target = $(location.hash);\n\n    if (target) {\n      fastdom.read(function () {\n        var ref = offset(target);\n        var top = ref.top;\n        var elTop = offset(this$1.$el).top;\n        var elHeight = this$1.$el.offsetHeight;\n\n        if (elTop + elHeight >= top && elTop <= top + target.offsetHeight) {\n          window.scrollTo(0, top - elHeight - this$1.target - this$1.offset);\n        }\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    var ref = this.$options.classMapping;\n    var clsInactive = ref.clsInactive;\n\n    if (this.isActive) {\n      this.isActive = false;\n      this.hide();\n      removeClass(this.$selTarget, clsInactive);\n    }\n\n    remove(this.$refs.placeholder);\n    this.$refs.placeholder = null;\n    this.$refs.widthElement = null;\n  },\n  render: function render(h) {\n    var children = this.$slots.default;\n\n    if (!children) {\n      return;\n    }\n\n    children = filterOutTextNodes(children);\n\n    if (!children.length) {\n      return;\n    }\n\n    if (false) {}\n\n    return children[0];\n  }\n};\n\nfunction parseProp(prop, ref) {\n  var $props = ref.$props;\n  var $el = ref.$el;\n  var propOffset = ref[prop + \"Offset\"];\n  var value = $props[prop];\n  value = isString(value) && value === '' ? true : value;\n\n  if (!value) {\n    return;\n  }\n\n  if (isNumeric(value)) {\n    return propOffset + toFloat(value);\n  } else if (isString(value) && /^-?\\d+vh$/.test(value)) {\n    return height(window) * toFloat(value) / 100;\n  } else {\n    var el = value === true ? $el.parentNode : query(value, $el);\n\n    if (el) {\n      return offset(el).top + el.offsetHeight;\n    }\n  }\n}\n\nvar ElementSubnav = {\n  functional: true,\n  props: {\n    divided: {\n      type: Boolean,\n      default: false\n    },\n    pill: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var divided = props.divided;\n    var pill = props.pill;\n    return h('ul', mergeData(data, {\n      class: ['uk-subnav', {\n        'uk-subnav-divider': divided,\n        'uk-subnav-pill': pill\n      }]\n    }), children);\n  }\n};\nvar ElementSubnavItem = {\n  functional: true,\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function (h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var listeners = ref.listeners;\n    var title = props.title;\n    var active = props.active;\n    var disabled = props.disabled;\n    delete data.on;\n    return h('li', mergeData(data, {\n      class: {\n        'uk-active': active && !disabled,\n        'uk-disabled': disabled\n      }\n    }), [disabled ? h('span', title) : h('a', {\n      on: listeners\n    }, title)]);\n  }\n};\nvar ElementSubnavItemDropdown = {\n  functional: true,\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var disabled = props.disabled;\n    var title = props.title;\n    return h('li', mergeData(data, {\n      class: {\n        'uk-disabled': disabled\n      }\n    }), [disabled ? h('span', title) : children]);\n  }\n};\nvar subnav = {\n  name: 'VkSubnav',\n  props: assign({}, ElementSubnav.props, {\n    activeItem: {}\n  }),\n  data: function (vm) {\n    return {\n      state: {\n        activeItem: vm.activeItem || filterItems(vm).shift().data.key || 0\n      }\n    };\n  },\n  computed: {\n    items: function items() {\n      return (this.$slots.default || []).filter(function (n) {\n        return n.tag;\n      });\n    }\n  },\n  watch: {\n    activeItem: function activeItem(val) {\n      this.state.activeItem = val;\n    }\n  },\n  methods: {\n    triggerUpdate: function triggerUpdate(val) {\n      this.state.activeItem = val;\n      this.$emit('update:activeItem', val);\n    }\n  },\n  render: function render(h) {\n    var this$1 = this;\n    return h(ElementSubnav, {\n      props: this.$props\n    }, filterItems(this).map(function (node, index) {\n      if (false) {}\n\n      var key = get(node, 'data.key', index);\n      return node.data.rerender ? h(node.fnOptions, mergeData({}, node.data, {\n        key: key,\n        rerendering: true,\n        props: {\n          active: JSON.stringify(key) === JSON.stringify(this$1.state.activeItem)\n        }\n      }), node.children) : node;\n    }));\n  }\n};\n\nfunction filterItems(vm) {\n  return vm.$slots.default.filter(function (n) {\n    return n.tag;\n  });\n}\n\nvar subnav_Item = {\n  name: 'VkSubnavItem',\n  functional: true,\n  props: ElementSubnavItem.props,\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var parent = ref.parent;\n\n    if (data.rerendering) {\n      delete data.class;\n    }\n\n    return h(ElementSubnavItem, mergeData(data, {\n      props: props\n    }, {\n      rerender: true,\n      on: {\n        click: function (e) {\n          e.preventDefault();\n          parent.triggerUpdate(data.key);\n        }\n      }\n    }));\n  }\n};\nvar IconTriangeDown = {\n  functional: true,\n  render: function (h, ref) {\n    var props = ref.props;\n    var width = props.width || 20;\n    var height = props.height || 20;\n    var viewBox = props.viewBox || '0 0 20 20';\n    return h('svg', {\n      attrs: {\n        version: '1.1',\n        width: width,\n        height: height,\n        viewBox: viewBox\n      },\n      domProps: {\n        innerHTML: '<polygon points=\"5 7 15 7 10 12\" />'\n      }\n    });\n  }\n};\nvar subnav_ItemDropdown = {\n  name: 'VkSubnavItemDropdown',\n  functional: true,\n  props: assign({}, ElementSubnavItemDropdown.props, Dropdown.props, {\n    mode: {\n      type: String,\n      default: 'click'\n    }\n  }),\n  render: function render(h, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var title = props.title;\n    return h(ElementSubnavItemDropdown, {\n      props: props\n    }, [h('a', {\n      class: ['uk-icon']\n    }, [title + ' ', h(IconTriangeDown)]), h(Dropdown, {\n      props: props\n    }, [children])]);\n  }\n};\nvar MixinSort = {\n  props: {\n    sortedBy: {\n      type: Object\n    }\n  }\n};\nvar ROW_ID = '__vkTable_rowId';\nvar ROW_LEVEL = '__vkTable_rowLevel';\nvar ROW_CHILDREN_COUNT = '__vkTable_rowChildrenCount';\nvar ROW_CLICK_PREVENTED = '__vkTable_rowClickPrevented';\nvar ON_CLICK_ROW = 'click-row';\nvar UPDATE_SORTEDBY = 'update:sortedBy';\nvar UPDATE_EXPANDEDROWS = 'update:expandedRows';\nvar UPDATE_SELECTEDROWS = 'update:selectedRows';\nvar MixinSelect = {\n  props: {\n    selectedRows: {\n      type: Array,\n      default: function () {\n        return [];\n      }\n    },\n    rowSelectable: {\n      type: Boolean,\n      default: false\n    },\n    rowsSelectable: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    selectRow: function selectRow(row) {\n      var id = row[ROW_ID];\n\n      if (this.rowSelectable) {\n        this.updateRowSelection([id]);\n        return;\n      }\n\n      var selectedRows = [].concat(this.selectedRows);\n      selectedRows.push(id);\n      this.updateRowSelection(selectedRows);\n    },\n    unselectRow: function unselectRow(row) {\n      var id = row[ROW_ID];\n      var index = this.selectedRows.indexOf(id);\n      var selectedRows = [].concat(this.selectedRows);\n      selectedRows.splice(index, 1);\n      this.updateRowSelection(selectedRows);\n    },\n    toggleRowSelection: function toggleRowSelection(row) {\n      this.isRowSelected(row) ? this.unselectRow(row) : this.selectRow(row);\n    },\n    toggleRowsSelection: function toggleRowsSelection() {\n      var selectedRows = [];\n\n      if (!this.allRowsSelected) {\n        selectedRows = this.rows.map(function (row) {\n          return row[ROW_ID];\n        });\n      }\n\n      this.updateRowSelection(selectedRows);\n    },\n    isRowSelected: function isRowSelected(row) {\n      return Boolean(this.selectedRows.filter(function (id) {\n        return JSON.stringify(id) === JSON.stringify(row[ROW_ID]);\n      }).length);\n    },\n    updateRowSelection: function updateRowSelection(selectedRows) {\n      this.$emit(UPDATE_SELECTEDROWS, selectedRows);\n    }\n  },\n  computed: {\n    allRowsSelected: function allRowsSelected() {\n      if (this.selectedRows && this.selectedRows.length < this.rows.length) {\n        return false;\n      }\n\n      var selected = this.rows.filter(this.isRowSelected);\n      return selected.length === this.rows.length;\n    }\n  },\n  created: function created() {\n    if (this.rowsSelectable || this.rowSelectable) {\n      this.$on(ON_CLICK_ROW, this.toggleRowSelection);\n    }\n  }\n};\nvar ElementTable = {\n  functional: true,\n  props: {\n    divided: {\n      type: Boolean,\n      default: true\n    },\n    narrowed: {\n      type: Boolean,\n      default: false\n    },\n    cellMiddle: {\n      type: Boolean,\n      default: false\n    },\n    striped: {\n      type: Boolean,\n      default: false\n    },\n    hoverable: {\n      type: Boolean,\n      default: false\n    },\n    justified: {\n      type: Boolean,\n      default: false\n    },\n    responsive: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    return h('table', mergeData(data, {\n      class: ['uk-table', {\n        'uk-table-small': props.narrowed,\n        'uk-table-hover': props.hoverable,\n        'uk-table-middle': props.cellMiddle,\n        'uk-table-divider': props.divided,\n        'uk-table-striped': props.striped,\n        'uk-table-justify': props.justified,\n        'uk-table-responsive': props.responsive\n      }]\n    }), children);\n  }\n};\nvar ElementTableTd = {\n  functional: true,\n  props: {\n    cellMiddle: {\n      type: Boolean,\n      default: false\n    },\n    shrinked: {\n      type: Boolean,\n      default: false\n    },\n    expanded: {\n      type: Boolean,\n      default: false\n    },\n    width: {\n      type: String,\n      default: ''\n    },\n    linked: {\n      type: Boolean,\n      default: false\n    },\n    truncated: {\n      type: Boolean,\n      default: false\n    },\n    unwrapped: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var obj;\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    var cellMiddle = props.cellMiddle;\n    var shrinked = props.shrinked;\n    var expanded = props.expanded;\n    var width = props.width;\n    var linked = props.linked;\n    var truncated = props.truncated;\n    var unwrapped = props.unwrapped;\n    return h('td', mergeData(data, {\n      class: (obj = {\n        'uk-table-link': linked,\n        'uk-table-middle': cellMiddle,\n        'uk-table-shrink': shrinked,\n        'uk-table-expand': expanded,\n        'uk-text-nowrap': unwrapped,\n        'uk-text-truncate': truncated\n      }, obj[\"uk-width-\" + width] = width, obj)\n    }), children);\n  }\n};\nvar ElementTableTr = {\n  functional: true,\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    var active = props.active;\n    return h('tr', mergeData(data, {\n      class: {\n        'uk-active': active\n      }\n    }), children);\n  }\n};\nvar ElementTableTh = {\n  functional: true,\n  props: {\n    shrinked: {\n      type: Boolean,\n      default: false\n    },\n    expanded: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    var shrinked = props.shrinked;\n    var expanded = props.expanded;\n    return h('th', mergeData(data, {\n      class: {\n        'uk-table-shrink': shrinked,\n        'uk-table-expand': expanded\n      }\n    }), children);\n  }\n};\nvar ElementTableThSort = {\n  functional: true,\n  props: assign({}, ElementTableTh.props, {\n    order: {\n      type: String\n    }\n  }),\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    var order = props.order;\n    return h(ElementTableTh, mergeData(data, {\n      class: 'vk-table-column-sort uk-visible-hover-inline'\n    }), [h('div', {\n      class: 'uk-text-nowrap uk-position-relative'\n    }, [children, h('span', mergeData(data, {\n      class: ['vk-table-column-sort__arrow uk-position-absolute', {\n        'uk-invisible': !order,\n        'vk-table-column-sort__arrow--rotated': !order || order === 'asc'\n      }]\n    }))])]);\n  }\n};\nvar Row = {\n  functional: true,\n  render: function render(h, ref) {\n    var data = ref.data;\n    var children = ref.children;\n    var parent = ref.parent;\n    var $row = data.$row;\n    return h(ElementTableTr, {\n      props: {\n        active: parent.isRowSelected($row)\n      },\n      class: resolveClass(parent.rowClass, $row),\n      on: {\n        click: function (e) {\n          var isPrevented = e[ROW_CLICK_PREVENTED];\n          var isIgnoredTag = /^(A|BUTTON)$/.test(e.target.tagName);\n\n          if (isPrevented || isIgnoredTag) {\n            return;\n          }\n\n          parent.$emit(ON_CLICK_ROW, $row);\n        }\n      }\n    }, children);\n  }\n};\n\nfunction Render(h, ref) {\n  var rows = ref.rows;\n  var props = ref.props;\n  var columns = ref.columns;\n  var table = ref.table;\n  columns = columns.filter(function (node) {\n    var isValid = node.fnOptions && node.fnOptions.headRender && node.fnOptions.cellRender;\n\n    if (false) {}\n\n    return isValid;\n  });\n  var isHeadless = !columns.some(function (node) {\n    return node.children || get(node, 'data.props.title') || get(node, 'data.props.head');\n  });\n  return h(ElementTable, {\n    props: props\n  }, [isHeadless || h('thead', [h(ElementTableTr, columns.map(function (node) {\n    var fnOptions = node.fnOptions;\n    delete node.data.class;\n    return h({\n      functional: true,\n      render: fnOptions.headRender\n    }, node.data);\n  }))]), h('tbody', rows.map(function ($row, index) {\n    return h(Row, {\n      $row: $row\n    }, columns.map(function (node) {\n      var ref = node.data;\n      var props = ref.props;\n      var slots = ref.slots;\n      var scopedSlots = ref.scopedSlots;\n      var fnOptions = node.fnOptions;\n\n      if (false) {}\n\n      if (false) {}\n\n      return h({\n        functional: true,\n        render: fnOptions.cellRender\n      }, {\n        $row: $row,\n        props: props,\n        slots: slots,\n        scopedSlots: scopedSlots\n      });\n    }));\n  }))]);\n}\n\nfunction resolveClass(rowClass, row) {\n  return isFunction(rowClass) ? rowClass(row) : rowClass;\n}\n\nvar Table = {\n  name: 'VkTable',\n  mixins: [MixinSelect, MixinSort],\n  inheritAttrs: false,\n  props: assign({}, ElementTable.props, {\n    data: {\n      type: Array,\n      required: true\n    },\n    rowKey: {\n      type: String,\n      default: 'id'\n    },\n    rowClass: {\n      type: Function\n    }\n  }),\n  computed: {\n    rows: function rows() {\n      var this$1 = this;\n      return this.data.map(function (_row, index) {\n        var row = assign({}, _row);\n        row[ROW_ID] = row[this$1.rowKey] || index;\n        return row;\n      });\n    }\n  },\n  render: function render(h) {\n    var columns = get(this, '$slots.default', []).filter(function (n) {\n      return n.tag;\n    });\n    return Render(h, {\n      columns: columns,\n      table: this,\n      rows: this.rows,\n      props: this.$props\n    });\n  }\n};\nvar tableTree = {\n  name: 'VkTableTree',\n  extends: Table,\n  props: {\n    expandedRows: {\n      type: Array,\n      default: function () {\n        return [];\n      }\n    },\n    childrenKey: {\n      type: String,\n      default: 'children'\n    }\n  },\n  computed: {\n    rows: function rows() {\n      var this$1 = this;\n      var rows = [];\n\n      var flatten = function (data, parent) {\n        if (parent === void 0) parent = {};\n        var idCount = 0;\n        data.forEach(function (_row) {\n          var row = assign({}, _row);\n          var children = row[this$1.childrenKey];\n          var hasChildren = children && children.length;\n          row[ROW_LEVEL] = parent[ROW_LEVEL] !== undefined ? parent[ROW_LEVEL] + 1 : 0;\n          row[ROW_ID] = row[this$1.rowKey] ? row[this$1.rowKey] : row[ROW_LEVEL] === 0 ? \"\" + idCount++ : parent[ROW_ID] + \"_\" + idCount++;\n          rows.push(row);\n\n          if (hasChildren && this$1.isExpanded(row)) {\n            flatten(children, row);\n          }\n\n          if (hasChildren) {\n            row[ROW_CHILDREN_COUNT] = children.length;\n            delete row[this$1.childrenKey];\n          }\n        });\n      };\n\n      flatten(this.data);\n      return rows;\n    },\n    thereAreSubLevels: function thereAreSubLevels() {\n      return this.rows.some(function (row) {\n        return row[ROW_CHILDREN_COUNT];\n      });\n    }\n  },\n  methods: {\n    isExpanded: function isExpanded(row) {\n      return Boolean(this.expandedRows.filter(function (id) {\n        return JSON.stringify(id) === JSON.stringify(row[ROW_ID]);\n      }).length);\n    },\n    toggleExpand: function toggleExpand(row) {\n      var id = row[ROW_ID];\n      var expandedRows = [].concat(this.expandedRows);\n      var index = expandedRows.indexOf(id);\n      var isExpanded = index !== -1;\n      isExpanded ? expandedRows.splice(index, 1) : expandedRows.push(id);\n      this.$emit(UPDATE_EXPANDEDROWS, expandedRows);\n    }\n  },\n  render: function render(h) {\n    var columns = (this.$slots.default || []).filter(function (n) {\n      return n.tag;\n    });\n    return Render(h, {\n      columns: columns,\n      table: this,\n      rows: this.rows,\n      props: this.$props\n    });\n  }\n};\n\nfunction RenderCell(h, ctx, defaultContent) {\n  var props = ctx.props;\n  var data = ctx.data;\n  var $row = data.$row;\n  var cell = props.cell;\n  var cellClass = props.cellClass;\n  var cellValue = get($row, cell);\n  var isEmpty = !isUndefined(cell) && isUndefined(cellValue);\n  var scope = getCellScope(ctx);\n  var slots = getCellSlots(ctx);\n  var slot = isEmpty && slots.empty ? slots.empty : slots.default || defaultContent;\n  return h(ElementTableTd, {\n    props: props,\n    class: cellClass\n  }, [slot(scope)]);\n}\n\nfunction getCellScope(ref) {\n  var data = ref.data;\n  var props = ref.props;\n  var parent = ref.parent;\n  var $row = data.$row;\n  var cell = props.cell;\n  var cellValue = get($row, cell);\n  var selected = parent.isRowSelected($row);\n  var allSelected = parent.allRowsSelected;\n  return {\n    cell: cellValue,\n    row: $row,\n    selected: selected,\n    allSelected: allSelected\n  };\n}\n\nfunction getCellSlots(ref) {\n  var data = ref.data;\n  var defaultSlot = get(data, 'slots.default') ? function () {\n    return get(data, 'slots.default');\n  } : get(data, 'scopedSlots.default');\n  var emptySlot = get(data, 'slots.empty') ? function () {\n    return get(data, 'slots.empty');\n  } : get(data, 'scopedSlots.empty');\n  return {\n    default: defaultSlot,\n    empty: emptySlot\n  };\n}\n\nvar Column = {\n  name: 'VkTableColumn',\n  functional: true,\n  props: assign({}, ElementTableTh.props, ElementTableTd.props, {\n    cell: String,\n    title: String,\n    cellClass: String\n  }),\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var slots = ref.slots;\n    data.slots = slots();\n    return h('div', mergeData({}, data, {\n      props: props\n    }));\n  },\n  headRender: function headRender(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    return h(ElementTableTh, mergeData({}, data, {\n      props: props,\n      class: 'vk-table-column'\n    }), props.title);\n  },\n  cellRender: function cellRender(h, ctx) {\n    return RenderCell(h, ctx, function (ref) {\n      var cell = ref.cell;\n      return cell;\n    });\n  }\n};\nvar table_ColumnSort = {\n  name: 'VkTableColumnSort',\n  functional: true,\n  props: assign({}, Column.props, ElementTableThSort, {\n    cell: {\n      type: String,\n      required: true\n    }\n  }),\n  render: Column.render,\n  cellRender: Column.cellRender,\n  headRender: function headRender(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var title = props.title;\n\n    if (false) {}\n\n    return h(ElementTableThSort, mergeData(data, {\n      props: assign({\n        order: get(parent, \"sortedBy.\" + props.cell)\n      }, props),\n      on: {\n        click: function (e) {\n          var sortedBy = getNewSortOrder(parent.sortedBy, props.cell, e.shiftKey);\n          parent.$emit(UPDATE_SORTEDBY, sortedBy);\n        }\n      }\n    }), title || children);\n  }\n};\n\nfunction getNewSortOrder(currentSort, by, multi) {\n  var sort = {};\n  var order = currentSort[by] === 'asc' ? 'desc' : 'asc';\n  sort[by] = order;\n  return multi ? assign({}, currentSort, sort) : sort;\n}\n\nvar ElementCheckbox = {\n  functional: true,\n  props: ['checked'],\n  render: function render(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var listeners = ref.listeners;\n    var def = {\n      staticClass: 'uk-checkbox',\n      attrs: {\n        type: 'checkbox'\n      },\n      domProps: {\n        checked: props.checked\n      },\n      on: {\n        change: function (e) {\n          e.target.checked = props.checked;\n        }\n      }\n    };\n    return h('input', mergeData(data, def));\n  }\n};\nvar table_ColumnSelect = {\n  name: 'VkTableColumnSelect',\n  functional: true,\n  props: assign({}, ElementTableTh.props, {\n    cellClass: {\n      type: String\n    },\n    headless: {\n      type: Boolean,\n      default: false\n    },\n    shrinked: {\n      type: Boolean,\n      default: true\n    }\n  }),\n  render: Column.render,\n  headRender: function headRender(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var parent = ref.parent;\n    var content = props.headless || h('span', {\n      class: 'uk-form uk-text-center'\n    }, [h(ElementCheckbox, {\n      props: {\n        checked: parent.allRowsSelected\n      },\n      on: {\n        click: function (e) {\n          return parent.toggleRowsSelection();\n        }\n      }\n    })]);\n    return h(ElementTableTh, mergeData(data, {\n      props: {\n        shrinked: true\n      },\n      class: 'vk-table-column-select'\n    }), [content]);\n  },\n  cellRender: function cellRender(h, ctx) {\n    var parent = ctx.parent;\n    return RenderCell(h, ctx, function (ref) {\n      var row = ref.row;\n      var selected = ref.selected;\n      return h('span', {\n        class: 'uk-form uk-text-center'\n      }, [h(ElementCheckbox, {\n        props: {\n          checked: selected\n        },\n        on: {\n          click: function (e) {\n            return parent.toggleRowSelection(row);\n          }\n        }\n      })]);\n    });\n  }\n};\nvar TreeArrow = {\n  functional: true,\n  props: ['rotated'],\n  render: function (h, ref) {\n    var listeners = ref.listeners;\n    var props = ref.props;\n    return h('span', {\n      on: listeners,\n      class: ['vk-table-column-tree__arrow', {\n        'vk-table-column-tree__arrow--rotated': props.rotated\n      }]\n    });\n  }\n};\nvar TreeIndent = {\n  functional: true,\n  render: function (h, ref) {\n    var children = ref.children;\n    return h('span', {\n      class: 'vk-table-column-tree__indent'\n    }, children);\n  }\n};\nvar table_ColumnTree = {\n  name: 'VkTableTreeColumn',\n  functional: true,\n  props: assign({}, Column.props),\n  render: Column.render,\n  headRender: Column.headRender,\n  cellRender: function cellRender(h, ctx) {\n    var parent = ctx.parent;\n    return RenderCell(h, ctx, function (ref) {\n      var row = ref.row;\n      var cell = ref.cell;\n      return [Array(row[ROW_LEVEL]).fill(h(TreeIndent)), parent.thereAreSubLevels && h(TreeIndent, [row[ROW_CHILDREN_COUNT] && h(TreeArrow, {\n        props: {\n          rotated: parent.isExpanded(row)\n        },\n        on: {\n          click: function (e) {\n            e[ROW_CLICK_PREVENTED] = true;\n            parent.toggleExpand(row);\n          }\n        }\n      })]), h('span', cell)];\n    });\n  }\n};\nvar TAB_ID = '__vkTabs_id';\nvar isNotProd$1 = \"production\" !== 'production';\nvar core$2 = {\n  props: {\n    activeTab: {},\n    animation: {\n      type: String,\n      default: ''\n    },\n    keepAlive: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function (vm) {\n    return {\n      state: {\n        activeTab: vm.activeTab || filterTabs(vm).shift().data.key || 0\n      }\n    };\n  },\n  watch: {\n    activeTab: function activeTab(val) {\n      this.state.activeTab = val;\n    }\n  },\n  computed: {\n    activeTabContent: {\n      get: function get$$1() {\n        var this$1 = this;\n        return filterTabs(this).filter(function (node) {\n          return this$1.isActive(node.data[TAB_ID]);\n        })[0];\n      },\n      cache: false\n    }\n  },\n  methods: {\n    getTabs: function getTabs() {\n      var this$1 = this;\n      return filterTabs(this).filter(function (node, index) {\n        if (!node.componentOptions) {\n          isNotProd$1 && warn(\"vk-tabs -> failed to process '\" + node.tag + \"', seems is not a stateful component\", this$1);\n          return false;\n        }\n\n        node.key = get(node, 'data.key', index);\n        node.data[TAB_ID] = node.key;\n        return true;\n      });\n    },\n    setActiveTab: function setActiveTab(id) {\n      this.state.activeTab = id;\n      this.$emit('update:activeTab', id);\n    },\n    isActive: function isActive(id) {\n      return JSON.stringify(this.state.activeTab) === JSON.stringify(id);\n    }\n  }\n};\n\nfunction filterTabs(vm) {\n  return vm.$slots.default.filter(function (n) {\n    return n.tag;\n  });\n}\n\nvar ElementTabs = {\n  functional: true,\n  props: {\n    align: {\n      type: String,\n      default: 'left',\n      validator: function (val) {\n        return !val || /^(left|right|center|justify)$/.test(val);\n      }\n    },\n    flipped: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function (h, ref) {\n    var obj;\n    var children = ref.children;\n    var props = ref.props;\n    var data = ref.data;\n    var align = props.align;\n    var flipped = props.flipped;\n    return h('ul', mergeData(data, {\n      class: ['uk-tab', (obj = {\n        'uk-tab-bottom': flipped,\n        'uk-child-width-expand': align === 'justify'\n      }, obj[\"uk-flex-\" + align] = /^(right|center)$/.test(align), obj)]\n    }), children);\n  }\n};\nvar ElementTabsVertical = {\n  functional: true,\n  props: {\n    align: {\n      type: String,\n      default: 'left',\n      validator: function (val) {\n        return !val || /^(left|right)$/.test(val);\n      }\n    }\n  },\n  render: function (h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var children = ref.children;\n    var align = props.align;\n    return h('ul', mergeData(data, {\n      class: ['uk-tab', \"uk-tab-\" + align]\n    }), children);\n  }\n};\nvar ElementTabsItem = {\n  functional: true,\n  props: {\n    icon: {},\n    title: {\n      type: String,\n      required: true\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, ref) {\n    var props = ref.props;\n    var data = ref.data;\n    var listeners = ref.listeners;\n    var children = ref.children;\n    var active = props.active;\n    var disabled = props.disabled;\n    var title = props.title;\n    var icon$$1 = props.icon;\n    delete data.on;\n    return h('li', mergeData(data, {\n      class: {\n        'uk-active': active && !disabled,\n        'uk-disabled': disabled\n      }\n    }), [h('a', {\n      on: listeners\n    }, [title, icon$$1 && h(ElementIcon, {\n      class: 'uk-margin-small-left'\n    }, [icon$$1])]), children]);\n  }\n};\nvar tabs = {\n  name: 'VkTabs',\n  extends: core$2,\n  mixins: [EventsMixin],\n  props: ElementTabs.props,\n  render: function render(h) {\n    var this$1 = this;\n    var ref = this;\n    var flipped = ref.flipped;\n    var animation = ref.animation;\n    var keepAlive = ref.keepAlive;\n    var $props = ref.$props;\n    var Tabs = this.getTabs();\n    Tabs = Tabs.map(function (node, index) {\n      var obj;\n      var Tab = {\n        functional: true,\n        render: node.componentOptions.Ctor.options.tabRender\n      };\n      return h(Tab, (obj = {}, obj[TAB_ID] = node.data[TAB_ID], obj.props = assign({}, node.componentOptions.propsData, {\n        active: this$1.isActive(node.data[TAB_ID])\n      }), obj));\n    });\n    return h('div', {\n      class: {\n        'uk-flex uk-flex-column-reverse': flipped\n      }\n    }, [h(ElementTabs, {\n      props: $props\n    }, Tabs), h('div', {\n      class: {\n        'uk-margin': flipped\n      }\n    }, [h(Transition$1, {\n      props: {\n        name: animation\n      }\n    }, [keepAlive ? h('keep-alive', [this.activeTabContent]) : this.activeTabContent])])]);\n  }\n};\nvar tabsVertical = {\n  name: 'VkTabsVertical',\n  extends: core$2,\n  props: ElementTabsVertical.props,\n  render: function render(h) {\n    var this$1 = this;\n    var ref = this;\n    var align = ref.align;\n    var animation = ref.animation;\n    var keepAlive = ref.keepAlive;\n    var $props = ref.$props;\n    var Tabs = this.getTabs().map(function (node, index) {\n      var obj;\n      var Tab = {\n        functional: true,\n        render: node.componentOptions.Ctor.options.tabRender\n      };\n      return h(Tab, (obj = {}, obj[TAB_ID] = node.data[TAB_ID], obj.props = assign({}, node.componentOptions.propsData, {\n        active: this$1.isActive(node.data[TAB_ID])\n      }), obj));\n    });\n    return h('div', {\n      class: ['uk-grid', {\n        'uk-flex uk-flex-row-reverse': align === 'right'\n      }]\n    }, [h('div', {\n      class: 'uk-width-auto'\n    }, [h(ElementTabsVertical, {\n      props: $props\n    }, Tabs)]), h('div', {\n      class: 'uk-width-expand'\n    }, [h(Transition$1, {\n      props: {\n        name: animation\n      }\n    }, [keepAlive ? h('keep-alive', [this.activeTabContent]) : this.activeTabContent])])]);\n  }\n};\nvar tabs_Item = {\n  name: 'VkTabsItem',\n  props: assign({}, ElementTabsItem.props, {\n    icon: {\n      type: String\n    }\n  }),\n  render: function render(h) {\n    return h('div', this.$slots.default);\n  },\n  tabRender: function tabRender(h, ref) {\n    var data = ref.data;\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    props.icon = props.icon && h(\"vk-icons-\" + props.icon);\n    return h(ElementTabsItem, mergeData(data, {\n      props: props,\n      on: {\n        click: function (e) {\n          e.preventDefault();\n          parent.setActiveTab(data[TAB_ID]);\n        }\n      }\n    }), children);\n  }\n};\nvar components =\n/*#__PURE__*/\nObject.freeze({\n  Breadcrumb: breadcrumb,\n  BreadcrumbItem: breadcrumb_Item,\n  Button: button,\n  ButtonLink: buttonLink,\n  ButtonGroup: buttonGroup,\n  Card: card,\n  CardTitle: card_Title,\n  Drop: Drop,\n  Dropdown: Dropdown,\n  Grid: Grid,\n  Icon: icon,\n  IconLink: iconLink,\n  IconButton: iconButton,\n  IconImage: iconImage,\n  Iconnav: iconnav,\n  IconnavVertical: iconnavVertical,\n  IconnavItem: iconnav_Item,\n  Label: label,\n  Modal: modal,\n  ModalFull: modalFull,\n  ModalClose: modal_Close,\n  ModalFullClose: modalFull_Close,\n  ModalTitle: modal_Title,\n  Nav: nav$1,\n  NavDropdown: navDropdown,\n  NavItem: nav_Item,\n  NavItemDivider: nav_ItemDivider,\n  NavItemHeader: nav_ItemHeader,\n  NavItemParent: nav_ItemParent,\n  Navbar: navbar,\n  NavbarFull: navbarFull,\n  NavbarDropbar: navbarDropbar,\n  NavbarItem: navbar_Item,\n  NavbarLogo: navbar_Logo,\n  NavbarToggle: navbar_Toggle,\n  NavbarNav: navbar_Nav,\n  NavbarNavItem: navbar_Nav_Item,\n  NavbarNavDropdown: navbar_Nav_Dropdown,\n  NavbarNavDropdownNav: navbar_Nav_Dropdown_Nav,\n  Notification: notification,\n  Offcanvas: offcanvas,\n  OffcanvasContent: offcanvasContent,\n  OffcanvasBar: offcanvas_Bar,\n  OffcanvasClose: offcanvas_Close,\n  Pagination: pagination,\n  PaginationPages: pagination_Pages,\n  PaginationPageFirst: pagination_PageFirst,\n  PaginationPagePrev: pagination_PagePrev,\n  PaginationPageNext: pagination_PageNext,\n  PaginationPageLast: pagination_PageLast,\n  Scrollspy: scrollspy,\n  ScrollspyNav: scrollspyNav,\n  SkeletonImage: skeletonImage,\n  SkeletonText: skeletonText,\n  SkeletonTitle: skeletonTitle,\n  Spinner: spinner,\n  Sticky: sticky,\n  Subnav: subnav,\n  SubnavItem: subnav_Item,\n  SubnavItemDropdown: subnav_ItemDropdown,\n  Table: Table,\n  TableTree: tableTree,\n  TableColumn: Column,\n  TableColumnSort: table_ColumnSort,\n  TableColumnSelect: table_ColumnSelect,\n  TableColumnTree: table_ColumnTree,\n  Tabs: tabs,\n  TabsVertical: tabsVertical,\n  TabsItem: tabs_Item\n});\nvar NAMESPACE$3 = '__vkScroll';\nvar index$1 = {\n  bind: function bind$$1(el, binding, vnode) {\n    el[NAMESPACE$3] = {};\n  },\n  inserted: function inserted(el, binding, vnode) {\n    el[NAMESPACE$3].options = getOptions$3({\n      binding: binding,\n      vnode: vnode\n    });\n    el[NAMESPACE$3].unbind = on(el, 'click', function (e) {\n      var opts = el[NAMESPACE$3].options;\n      var isAnchor = e.target.nodeName === 'A';\n\n      if (!isAnchor || e.defaultPrevented && !opts.force) {\n        return;\n      }\n\n      if (e.target === el || matches$1(el, e.target, opts.target)) {\n        e.preventDefault();\n        scrollTo(el, e.target, escape(e.target.hash).substr(1), opts);\n      }\n    });\n  },\n  componentUpdated: function componentUpdated(el, binding, vnode) {\n    el[NAMESPACE$3].options = getOptions$3({\n      binding: binding,\n      vnode: vnode\n    });\n  },\n  unbind: function unbind(el) {\n    if (!el[NAMESPACE$3]) {\n      return;\n    }\n\n    el[NAMESPACE$3].unbind();\n    delete el[NAMESPACE$3];\n  }\n};\n\nfunction scrollTo(el, fromEl, toEl, options) {\n  toEl = toEl && $(toEl) || document.body;\n  var docHeight = height(document);\n  var winHeight = height(window);\n  var target = offset(toEl).top - options.offset;\n\n  if (target + winHeight > docHeight) {\n    target = docHeight - winHeight;\n  }\n\n  if (!trigger(el, 'beforeScroll', {\n    from: fromEl,\n    to: toEl\n  })) {\n    return;\n  }\n\n  var start = Date.now();\n  var startY = window.pageYOffset;\n\n  var step = function () {\n    var currentY = startY + (target - startY) * ease(clamp((Date.now() - start) / options.duration));\n    window.scrollTo(window.pageXOffset, currentY);\n\n    if (currentY !== target) {\n      requestAnimationFrame(step);\n    } else {\n      trigger(el, 'afterScroll', {\n        from: fromEl,\n        to: toEl\n      });\n    }\n  };\n\n  step();\n}\n\nfunction ease(k) {\n  return 0.5 * (1 - Math.cos(Math.PI * k));\n}\n\nfunction getOptions$3(ctx) {\n  var ref = ctx.binding;\n  var value = ref.value;\n  var modifiers = ref.modifiers;\n\n  if (isString(value)) {\n    value = {\n      target: value\n    };\n  }\n\n  return assign({\n    offset: 0,\n    target: 'a',\n    force: false,\n    duration: 1000\n  }, modifiers, value);\n}\n\nfunction matches$1(el, target, selector) {\n  var matches$$1 = $$(\"\" + selector, el);\n  var i = matches$$1.length;\n\n  while (--i >= 0 && matches$$1[i] !== target) {}\n\n  return i > -1;\n}\n\nvar NAMESPACE$4 = '__vkTooltip';\nvar index$2 = {\n  bind: function bind$$1(el, binding, vnode) {\n    el[NAMESPACE$4] = {\n      vnode: vnode,\n      state: null,\n      options: getOptions$4({\n        binding: binding\n      })\n    };\n\n    if (hasAttr(el, 'title')) {\n      el[NAMESPACE$4].attrTitle = attr(el, 'title');\n      attr(el, {\n        title: ''\n      });\n    }\n\n    el[NAMESPACE$4].title = el[NAMESPACE$4].options.title || el[NAMESPACE$4].attrTitle;\n  },\n  inserted: function inserted(el, binding, vnode) {\n    bindEvents(el);\n  },\n  componentUpdated: function componentUpdated(el, binding, vnode) {\n    el[NAMESPACE$4].options = getOptions$4({\n      binding: binding\n    });\n    el[NAMESPACE$4].title = el[NAMESPACE$4].options.title || el[NAMESPACE$4].attrTitle;\n  },\n  unbind: function unbind(el, binding, vnode) {\n    if (!el[NAMESPACE$4]) {\n      return;\n    }\n\n    _hide(el);\n\n    attr(el, {\n      title: el[NAMESPACE$4].attrTitle || null\n    });\n    el[NAMESPACE$4].unbindEvents();\n    delete el[NAMESPACE$4];\n  }\n};\n\nfunction bindEvents(el) {\n  var events = [on(el, \"focus \" + pointerEnter + \" \" + pointerDown, function (e) {\n    if (e.type !== pointerDown || !isTouch(e)) {\n      show(el);\n    }\n  }), on(el, 'blur', function (e) {\n    return hide(el);\n  }), on(el, pointerLeave, function (e) {\n    if (!isTouch(e)) {\n      hide(el);\n    }\n  })];\n\n  el[NAMESPACE$4].unbindEvents = function () {\n    return events.forEach(function (unbind) {\n      return unbind();\n    });\n  };\n}\n\nfunction toggleIn(el) {\n  var ref = el[NAMESPACE$4].options;\n  var cls = ref.cls;\n  var position$$1 = ref.position;\n  var animation = ref.animation;\n  var duration = ref.duration;\n\n  if (!trigger(el, 'beforeShow')) {\n    return Promise.reject();\n  }\n\n  var origin = el[NAMESPACE$4].origin = getOrigin(position$$1);\n  var tooltip = el[NAMESPACE$4].tooltip = createTooltip(el);\n  positionTooltip(el);\n  addClass(tooltip, cls);\n  el[NAMESPACE$4].hideTimer = setInterval(function () {\n    if (!isVisible(el)) {\n      hide(el);\n    }\n  }, 150);\n  el[NAMESPACE$4].state = 'in';\n  trigger(el, 'show');\n  return Animation.in(tooltip, \"uk-animation-\" + animation[0], duration, origin).then(function () {\n    el[NAMESPACE$4].state = 'active';\n    trigger(el, 'shown');\n  }).catch(function () {});\n}\n\nfunction toggleOut(el) {\n  var ref = el[NAMESPACE$4];\n  var tooltip = ref.tooltip;\n  var ref$1 = el[NAMESPACE$4].options;\n  var animation = ref$1.animation;\n  var duration = ref$1.duration;\n\n  if (!trigger(el, 'beforeHide')) {\n    return Promise.reject();\n  }\n\n  Animation.cancel(tooltip);\n  el[NAMESPACE$4].state = 'out';\n  trigger(el, 'hide');\n\n  if (!animation[1]) {\n    return Promise.resolve().then(function () {\n      return _hide(el);\n    });\n  }\n\n  return Animation.out(tooltip, \"uk-animation-\" + animation[1], duration, origin).then(function () {\n    return _hide(el);\n  }).catch(function () {});\n}\n\nfunction show(el) {\n  var ref = el[NAMESPACE$4].options;\n  var delay = ref.delay;\n  var ref$1 = el[NAMESPACE$4];\n  var state = ref$1.state;\n  var title = ref$1.title;\n\n  if (!title || state === 'active' || el[NAMESPACE$4].showTimer) {\n    return;\n  }\n\n  if (state === 'out') {\n    Animation.cancel(el);\n\n    _hide(el);\n  }\n\n  el[NAMESPACE$4].showTimer = setTimeout(function () {\n    return toggleIn(el);\n  }, delay);\n}\n\nfunction hide(el) {\n  if (!el[NAMESPACE$4]) {\n    return;\n  }\n\n  var ref = el[NAMESPACE$4];\n  var state = ref.state;\n  clearAllTimers(el);\n\n  if (state === 'out' || matches(el, 'input') && isFocused(el)) {\n    return;\n  }\n\n  toggleOut(el);\n}\n\nfunction _hide(el) {\n  if (!el[NAMESPACE$4]) {\n    return;\n  }\n\n  var ref = el[NAMESPACE$4];\n  var tooltip = ref.tooltip;\n  var ref$1 = el[NAMESPACE$4].options;\n  var cls = ref$1.cls;\n  attr(el, 'aria-expanded', false);\n  removeClass(tooltip, cls);\n  tooltip && remove(tooltip);\n  el[NAMESPACE$4].state = null;\n  el[NAMESPACE$4].tooltip = null;\n  trigger(el, 'hidden');\n}\n\nfunction clearAllTimers(el) {\n  clearTimeout(el[NAMESPACE$4].showTimer);\n  clearTimeout(el[NAMESPACE$4].hideTimer);\n  el[NAMESPACE$4].showTimer = null;\n  el[NAMESPACE$4].hideTimer = null;\n}\n\nfunction positionTooltip(el) {\n  var target = el;\n  var ref = el[NAMESPACE$4];\n  var tooltip = ref.tooltip;\n  var ref$1 = el[NAMESPACE$4].options;\n  var clsPos = ref$1.clsPos;\n  var position$$1 = ref$1.position;\n  var ref$2 = el[NAMESPACE$4].options;\n  var offset$$1 = ref$2.offset;\n  var node;\n  var ref$3 = position$$1.split('-');\n  var dir = ref$3[0];\n  var align = ref$3[1];\n  if (align === void 0) align = 'center';\n  removeClasses(tooltip, clsPos + \"-(top|bottom|left|right)(-[a-z]+)?\");\n  css(tooltip, {\n    top: '',\n    left: ''\n  });\n  var axis = getAxis$1(position$$1);\n  offset$$1 = isNumeric(offset$$1) ? offset$$1 : (node = $(offset$$1)) ? offset(node)[axis === 'x' ? 'left' : 'top'] - offset(target)[axis === 'x' ? 'right' : 'bottom'] : 0;\n  var elAttach = axis === 'x' ? flipPosition(dir) + \" \" + align : align + \" \" + flipPosition(dir);\n  var targetAttach = axis === 'x' ? dir + \" \" + align : align + \" \" + dir;\n  var elOffset = axis === 'x' ? \"\" + (dir === 'left' ? -1 * offset$$1 : offset$$1) : \"\" + (dir === 'top' ? -1 * offset$$1 : offset$$1);\n  var targetOffset = null;\n  var ref$4 = positionAt(tooltip, target, elAttach, targetAttach, elOffset, targetOffset, true).target;\n  var x = ref$4.x;\n  var y = ref$4.y;\n  dir = axis === 'x' ? x : y;\n  align = axis === 'x' ? y : x;\n  toggleClass(tooltip, clsPos + \"-\" + dir + \"-\" + align, el[NAMESPACE$4].options.offset === false);\n  return {\n    dir: dir,\n    align: align\n  };\n}\n\nfunction getOptions$4(ctx) {\n  var ref = ctx.binding;\n  var value = ref.value;\n  var modifiers = ref.modifiers;\n\n  if (isString(value)) {\n    value = {\n      title: value\n    };\n  }\n\n  if (Object.keys(modifiers).length) {\n    var firstKey = Object.keys(modifiers)[0];\n    modifiers = {\n      position: firstKey\n    };\n  }\n\n  var options = assign({\n    delay: 0,\n    title: '',\n    offset: false,\n    duration: 100,\n    position: 'top',\n    container: true,\n    cls: 'uk-active',\n    clsPos: 'uk-tooltip',\n    animation: 'scale-up'\n  }, modifiers, value);\n  options.position = hyphenate(options.position);\n  options.animation = options.animation.split(' ');\n\n  if (false) { var pos; }\n\n  return options;\n}\n\nfunction getAxis$1(position$$1) {\n  var ref = position$$1.split('-');\n  var dir = ref[0];\n  return dir === 'top' || dir === 'bottom' ? 'y' : 'x';\n}\n\nfunction getContainer(el) {\n  var ref = el[NAMESPACE$4];\n  var vnode = ref.vnode;\n  var ref$1 = el[NAMESPACE$4].options;\n  var container = ref$1.container;\n  return container === true && vnode.context.$root.$el || container && $(container);\n}\n\nfunction createTooltip(el) {\n  var ref = el[NAMESPACE$4];\n  var title = ref.title;\n  var ref$1 = el[NAMESPACE$4].options;\n  var clsPos = ref$1.clsPos;\n  return append(getContainer(el), \"<div class=\\\"\" + clsPos + \"\\\" aria-hidden>\\n    <div class=\\\"\" + clsPos + \"-inner\\\">\" + title + \"</div>\\n  </div>\");\n}\n\nfunction getOrigin(position$$1) {\n  var dir = position$$1[0];\n  var align = position$$1[1];\n  return getAxis$1(position$$1) === 'y' ? flipPosition(dir) + \"-\" + align : align + \"-\" + flipPosition(dir);\n}\n\nfunction isFocused(el) {\n  return el === document.activeElement;\n}\n\nvar NAMESPACE$5 = '__vkHeightMatch';\nvar index$3 = {\n  bind: function bind$$1(el, binding, vnode) {\n    el[NAMESPACE$5] = {};\n  },\n  inserted: function inserted(el, binding, vnode) {\n    vnode.context.$nextTick(function () {\n      return update$3(el, {\n        binding: binding,\n        vnode: vnode\n      });\n    });\n    el[NAMESPACE$5].unbind = on(window, 'resize', function () {\n      return update$3(el, {\n        binding: binding,\n        vnode: vnode\n      });\n    });\n  },\n  componentUpdated: function componentUpdated(el, binding, vnode) {\n    vnode.context.$nextTick(function () {\n      return update$3(el, {\n        binding: binding,\n        vnode: vnode\n      });\n    });\n  },\n  unbind: function unbind(el) {\n    if (!el[NAMESPACE$5]) {\n      return;\n    }\n\n    el[NAMESPACE$5].unbind();\n    delete el[NAMESPACE$5];\n  }\n};\n\nfunction update$3(el, ctx) {\n  var opts = getOptions$5(ctx);\n  var elements = $$(opts.target, el);\n  css(elements, 'minHeight', '');\n  var rows = getRows$1(elements, opts.row);\n  rows.forEach(function (els) {\n    var ref = match(els);\n    var height = ref.height;\n    var elements = ref.elements;\n    css(elements, 'minHeight', height);\n  });\n}\n\nfunction getOptions$5(ctx) {\n  var ref = ctx.binding;\n  var value = ref.value;\n\n  if (isString(value)) {\n    value = {\n      target: value\n    };\n  }\n\n  return assign({\n    target: '> *',\n    row: true\n  }, value);\n}\n\nfunction getRows$1(elements, row) {\n  if (!row) {\n    return [elements];\n  }\n\n  var lastOffset = false;\n  return elements.reduce(function (rows, el) {\n    if (lastOffset !== el.offsetTop) {\n      rows.push([el]);\n    } else {\n      rows[rows.length - 1].push(el);\n    }\n\n    lastOffset = el.offsetTop;\n    return rows;\n  }, []);\n}\n\nfunction match(elements) {\n  if (elements.length < 2) {\n    return {};\n  }\n\n  var max = 0;\n  var heights = [];\n  elements.forEach(function (el) {\n    var style;\n    var hidden;\n\n    if (!isVisible(el)) {\n      style = attr(el, 'style');\n      hidden = attr(el, 'hidden');\n      attr(el, {\n        style: (style || '') + \";display:block !important;\",\n        hidden: null\n      });\n    }\n\n    max = Math.max(max, el.offsetHeight);\n    heights.push(el.offsetHeight);\n\n    if (!isUndefined(style)) {\n      attr(el, {\n        style: style,\n        hidden: hidden\n      });\n    }\n  });\n  elements = elements.filter(function (el, i) {\n    return heights[i] < max;\n  });\n  return {\n    height: max,\n    elements: elements\n  };\n}\n\nvar directives =\n/*#__PURE__*/\nObject.freeze({\n  Margin: VkMargin,\n  Scroll: index$1,\n  Tooltip: index$2,\n  HeightMatch: index$3,\n  HeightViewport: VkHeightViewport\n});\nvar Vuikit = {\n  components: components,\n  directives: directives,\n  install: function install(Vue) {\n    each(components, function (def, name) {\n      Vue.component(\"Vk\" + name, def);\n    });\n    each(directives, function (def, name) {\n      Vue.directive(\"Vk\" + name, def);\n    });\n  }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vuikit);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(18).setImmediate))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///31\n")}}]);